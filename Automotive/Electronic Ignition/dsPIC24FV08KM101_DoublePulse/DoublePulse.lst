;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 12/17/2017 1:56:20 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x0000000410E8  	GOTO	_main
0x0004	0x000000  	0
0x0006	0x000000  	0
0x0008	0x000000  	0
0x000A	0x000000  	0
0x000C	0x000000  	0
0x000E	0x000000  	0
0x0010	0x000000  	0
0x0012	0x000000  	0
0x0014	0x000000  	0
0x0016	0x000000  	0
0x0018	0x000000  	0
0x001A	0x000000  	0
0x001C	0x000000  	0
0x001E	0x000000  	0
0x0020	0x000000  	0
0x0022	0x000F12  	3858
0x0024	0x000000  	0
0x0026	0x000000  	0
0x0028	0x000000  	0
0x002A	0x000000  	0
0x002C	0x000000  	0
0x002E	0x000000  	0
0x0030	0x000000  	0
0x0032	0x000000  	0
0x0034	0x000000  	0
0x0036	0x000000  	0
0x0038	0x000000  	0
0x003A	0x000F9A  	3994
0x003C	0x000000  	0
0x003E	0x000000  	0
0x0040	0x000000  	0
0x0042	0x000000  	0
0x0044	0x000000  	0
0x0046	0x000000  	0
0x0048	0x000000  	0
0x004A	0x000000  	0
0x004C	0x000000  	0
0x004E	0x000000  	0
0x0050	0x000000  	0
0x0052	0x000000  	0
0x0054	0x000000  	0
0x0056	0x000000  	0
0x0058	0x000000  	0
0x005A	0x000000  	0
0x005C	0x000000  	0
0x005E	0x000000  	0
0x0060	0x000000  	0
0x0062	0x000000  	0
0x0064	0x000000  	0
0x0066	0x000000  	0
0x0068	0x000000  	0
0x006A	0x000000  	0
0x006C	0x000000  	0
0x006E	0x000000  	0
0x0070	0x000000  	0
0x0072	0x000000  	0
0x0074	0x000000  	0
0x0076	0x000000  	0
0x0078	0x000000  	0
0x007A	0x000000  	0
0x007C	0x000000  	0
0x007E	0x000000  	0
0x0080	0x000000  	0
0x0082	0x000000  	0
0x0084	0x000000  	0
0x0086	0x000000  	0
0x0088	0x000000  	0
0x008A	0x000000  	0
0x008C	0x000000  	0
0x008E	0x000000  	0
0x0090	0x000000  	0
0x0092	0x000000  	0
0x0094	0x000000  	0
0x0096	0x000000  	0
0x0098	0x000000  	0
0x009A	0x000000  	0
0x009C	0x000000  	0
0x009E	0x000000  	0
0x00A0	0x000000  	0
0x00A2	0x000000  	0
0x00A4	0x000000  	0
0x00A6	0x000000  	0
0x00A8	0x000000  	0
0x00AA	0x000000  	0
0x00AC	0x000000  	0
0x00AE	0x000000  	0
0x00B0	0x000000  	0
0x00B2	0x000000  	0
0x00B4	0x000000  	0
0x00B6	0x000000  	0
0x00B8	0x000000  	0
0x00BA	0x000000  	0
0x00BC	0x000000  	0
0x00BE	0x000000  	0
0x00C0	0x000000  	0
0x00C2	0x000000  	0
0x00C4	0x000000  	0
0x00C6	0x000000  	0
0x00C8	0x000000  	0
0x00CA	0x000000  	0
0x00CC	0x000000  	0
0x00CE	0x000000  	0
0x00D0	0x000000  	0
0x00D2	0x000000  	0
0x00D4	0x000000  	0
0x00D6	0x000000  	0
0x00D8	0x000000  	0
0x00DA	0x000000  	0
0x00DC	0x000000  	0
0x00DE	0x000000  	0
0x00E0	0x000000  	0
0x00E2	0x000000  	0
0x00E4	0x000000  	0
0x00E6	0x000000  	0
0x00E8	0x000000  	0
0x00EA	0x000000  	0
0x00EC	0x000000  	0
0x00EE	0x000000  	0
0x00F0	0x000000  	0
0x00F2	0x000000  	0
0x00F4	0x000000  	0
0x00F6	0x000000  	0
0x00F8	0x000000  	0
0x00FA	0x000000  	0
0x00FC	0x000000  	0
0x00FE	0x000000  	0
0x0100	0x000000  	0
0x0102	0x000000  	0
0x0104	0x000000  	0
0x0106	0x000000  	0
0x0108	0x000000  	0
0x010A	0x000000  	0
0x010C	0x000000  	0
0x010E	0x000000  	0
0x0110	0x000000  	0
0x0112	0x000000  	0
0x0114	0x000000  	0
0x0116	0x000000  	0
0x0118	0x000000  	0
0x011A	0x000000  	0
0x011C	0x000000  	0
0x011E	0x000000  	0
0x0120	0x000000  	0
0x0122	0x000000  	0
0x0124	0x000000  	0
0x0126	0x000000  	0
0x0128	0x000000  	0
0x012A	0x000000  	0
0x012C	0x000000  	0
0x012E	0x000000  	0
0x0130	0x000000  	0
0x0132	0x000000  	0
0x0134	0x000000  	0
0x0136	0x000000  	0
0x0138	0x000000  	0
0x013A	0x000000  	0
0x013C	0x000000  	0
0x013E	0x000000  	0
0x0140	0x000000  	0
0x0142	0x000000  	0
0x0144	0x000000  	0
0x0146	0x000000  	0
0x0148	0x000000  	0
0x014A	0x000000  	0
0x014C	0x000000  	0
0x014E	0x000000  	0
0x0150	0x000000  	0
0x0152	0x000000  	0
0x0154	0x000000  	0
0x0156	0x000000  	0
0x0158	0x000000  	0
0x015A	0x000000  	0
0x015C	0x000000  	0
0x015E	0x000000  	0
0x0160	0x000000  	0
0x0162	0x000000  	0
0x0164	0x000000  	0
0x0166	0x000000  	0
0x0168	0x000000  	0
0x016A	0x000000  	0
0x016C	0x000000  	0
0x016E	0x000000  	0
0x0170	0x000000  	0
0x0172	0x000000  	0
0x0174	0x000000  	0
0x0176	0x000000  	0
0x0178	0x000000  	0
0x017A	0x000000  	0
0x017C	0x000000  	0
0x017E	0x000000  	0
0x0180	0x000000  	0
0x0182	0x000000  	0
0x0184	0x000000  	0
0x0186	0x000000  	0
0x0188	0x000000  	0
0x018A	0x000000  	0
0x018C	0x000000  	0
0x018E	0x000000  	0
0x0190	0x000000  	0
0x0192	0x000000  	0
0x0194	0x000000  	0
0x0196	0x000000  	0
0x0198	0x000000  	0
0x019A	0x000000  	0
0x019C	0x000000  	0
0x019E	0x000000  	0
0x01A0	0x000000  	0
0x01A2	0x000000  	0
0x01A4	0x000000  	0
0x01A6	0x000000  	0
0x01A8	0x000000  	0
0x01AA	0x000000  	0
0x01AC	0x000000  	0
0x01AE	0x000000  	0
0x01B0	0x000000  	0
0x01B2	0x000000  	0
0x01B4	0x000000  	0
0x01B6	0x000000  	0
0x01B8	0x000000  	0
0x01BA	0x000000  	0
0x01BC	0x000000  	0
0x01BE	0x000000  	0
0x01C0	0x000000  	0
0x01C2	0x000000  	0
0x01C4	0x000000  	0
0x01C6	0x000000  	0
0x01C8	0x000000  	0
0x01CA	0x000000  	0
0x01CC	0x000000  	0
0x01CE	0x000000  	0
0x01D0	0x000000  	0
0x01D2	0x000000  	0
0x01D4	0x000000  	0
0x01D6	0x000000  	0
0x01D8	0x000000  	0
0x01DA	0x000000  	0
0x01DC	0x000000  	0
0x01DE	0x000000  	0
0x01E0	0x000000  	0
0x01E2	0x000000  	0
0x01E4	0x000000  	0
0x01E6	0x000000  	0
0x01E8	0x000000  	0
0x01EA	0x000000  	0
0x01EC	0x000000  	0
0x01EE	0x000000  	0
0x01F0	0x000000  	0
0x01F2	0x000000  	0
0x01F4	0x000000  	0
0x01F6	0x000000  	0
0x01F8	0x000000  	0
0x01FA	0x000000  	0
0x01FC	0x000000  	0
0x01FE	0x000000  	0
_main:
0x10E8	0x2084AF  	MOV	#2122, W15
0x10EA	0x20BFF0  	MOV	#3071, W0
0x10EC	0xB7A020  	MOV	WREG, SPLIM
0x10EE	0x200000  	MOV	#0, W0
0x10F0	0xB7A034  	MOV	WREG, PSVPAG
0x10F2	0x200040  	MOV	#4, W0
0x10F4	0xB72044  	IOR	CORCON
0x10F6	0xFA002E  	LNK	#46
0x10F8	0x781F8A  	PUSH	W10
0x10FA	0x781F8B  	PUSH	W11
0x10FC	0x781F8C  	PUSH	W12
0x10FE	0xEF24E0  	CLR	ANSA
0x1100	0xEF24E2  	CLR	ANSB
0x1102	0xEF2000  	CLR	W0
0x1104	0x884240  	MOV	W0, _State
0x1106	0xA822CD  	BSET	LATB9_bit, BitPos(LATB9_bit+0)
0x1108	0xA962C4  	BCLR	LATA3_bit, BitPos(LATA3_bit+0)
0x110A	0xA942C4  	BCLR	LATA2_bit, BitPos(LATA2_bit+0)
0x110C	0xA802C0  	BSET	TRISA0_bit, BitPos(TRISA0_bit+0)
0x110E	0xA922C9  	BCLR	TRISB9_bit, BitPos(TRISB9_bit+0)
0x1110	0xA962C0  	BCLR	TRISA3_bit, BitPos(TRISA3_bit+0)
0x1112	0xA942C0  	BCLR	TRISA2_bit, BitPos(TRISA2_bit+0)
0x1114	0xEF2744  	CLR	CLKDIV
0x1116	0xA9E141  	BCLR	CCPON_CCP1CON1L_bit, BitPos(CCPON_CCP1CON1L_bit+0)
0x1118	0xA9E142  	BCLR	TRIGEN_CCP1CON1H_bit, BitPos(TRIGEN_CCP1CON1H_bit+0)
0x111A	0xA90142  	BCLR	SYNC_0_CCP1CON1H_bit, BitPos(SYNC_0_CCP1CON1H_bit+0)
0x111C	0xA92142  	BCLR	SYNC_1_CCP1CON1H_bit, BitPos(SYNC_1_CCP1CON1H_bit+0)
0x111E	0xA94142  	BCLR	SYNC_2_CCP1CON1H_bit, BitPos(SYNC_2_CCP1CON1H_bit+0)
0x1120	0xA96142  	BCLR	SYNC_3_CCP1CON1H_bit, BitPos(SYNC_3_CCP1CON1H_bit+0)
0x1122	0xA98142  	BCLR	SYNC_4_CCP1CON1H_bit, BitPos(SYNC_4_CCP1CON1H_bit+0)
0x1124	0xA8A140  	BSET	TMR32_CCP1CON1L_bit, BitPos(TMR32_CCP1CON1L_bit+0)
0x1126	0xA90141  	BCLR	CLKSEL_0_CCP1CON1L_bit, BitPos(CLKSEL_0_CCP1CON1L_bit+0)
0x1128	0xA92141  	BCLR	CLKSEL_1_CCP1CON1L_bit, BitPos(CLKSEL_1_CCP1CON1L_bit+0)
0x112A	0xA94141  	BCLR	CLKSEL_2_CCP1CON1L_bit, BitPos(CLKSEL_2_CCP1CON1L_bit+0)
0x112C	0xA9C140  	BCLR	TMRPS_0_CCP1CON1L_bit, BitPos(TMRPS_0_CCP1CON1L_bit+0)
0x112E	0xA9E140  	BCLR	TMRPS_1_CCP1CON1L_bit, BitPos(TMRPS_1_CCP1CON1L_bit+0)
0x1130	0xEF2152  	CLR	CCP1TMRH
0x1132	0xEF2150  	CLR	CCP1TMRL
0x1134	0x23E000  	MOV	#15872, W0
0x1136	0xB7A154  	MOV	WREG, CCP1PRL
0x1138	0x200490  	MOV	#73, W0
0x113A	0xB7A156  	MOV	WREG, CCP1PRH
0x113C	0xA880A7  	BSET	CCT1IP_0_bit, BitPos(CCT1IP_0_bit+0)
0x113E	0xA8A0A7  	BSET	CCT1IP_1_bit, BitPos(CCT1IP_1_bit+0)
0x1140	0xA940A8  	BCLR	CCT2IP_2_bit, BitPos(CCT2IP_2_bit+0)
0x1142	0xA9E084  	BCLR	CCT1IF_bit, BitPos(CCT1IF_bit+0)
0x1144	0xA8E094  	BSET	CCT1IE_bit, BitPos(CCT1IE_bit+0)
0x1146	0xA8E141  	BSET	CCPON_CCP1CON1L_bit, BitPos(CCPON_CCP1CON1L_bit+0)
0x1148	0x2C200A  	MOV	#49664, W10
0x114A	0x20001B  	MOV	#1, W11
0x114C	0x07FC8E  	RCALL	_UART1_Init
0x114E	0x200098  	MOV	#9, W8
0x1150	0x223577  	MOV	#9047, W7
L__main61:
0x1152	0xED200E  	DEC	W7
0x1154	0x3AFFFE  	BRA NZ	L__main61
0x1156	0xED2010  	DEC	W8
0x1158	0x3AFFFC  	BRA NZ	L__main61
0x115A	0x4700E0  	ADD	W14, #0, W1
0x115C	0xB3C530  	MOV.B	#83, W0
0x115E	0x785880  	MOV.B	W0, [W1++]
0x1160	0xB3C540  	MOV.B	#84, W0
0x1162	0x785880  	MOV.B	W0, [W1++]
0x1164	0xB3C410  	MOV.B	#65, W0
0x1166	0x785880  	MOV.B	W0, [W1++]
0x1168	0xB3C4C0  	MOV.B	#76, W0
0x116A	0x785880  	MOV.B	W0, [W1++]
0x116C	0xB3C4C0  	MOV.B	#76, W0
0x116E	0x785880  	MOV.B	W0, [W1++]
0x1170	0xB3C5F0  	MOV.B	#95, W0
0x1172	0x785880  	MOV.B	W0, [W1++]
0x1174	0xB3C440  	MOV.B	#68, W0
0x1176	0x785880  	MOV.B	W0, [W1++]
0x1178	0xB3C490  	MOV.B	#73, W0
0x117A	0x785880  	MOV.B	W0, [W1++]
0x117C	0xB3C530  	MOV.B	#83, W0
0x117E	0x785880  	MOV.B	W0, [W1++]
0x1180	0xB3C540  	MOV.B	#84, W0
0x1182	0x785880  	MOV.B	W0, [W1++]
0x1184	0xB3C520  	MOV.B	#82, W0
0x1186	0x785880  	MOV.B	W0, [W1++]
0x1188	0xB3C490  	MOV.B	#73, W0
0x118A	0x785880  	MOV.B	W0, [W1++]
0x118C	0xB3C420  	MOV.B	#66, W0
0x118E	0x785880  	MOV.B	W0, [W1++]
0x1190	0xB3C550  	MOV.B	#85, W0
0x1192	0x785880  	MOV.B	W0, [W1++]
0x1194	0xB3C540  	MOV.B	#84, W0
0x1196	0x785880  	MOV.B	W0, [W1++]
0x1198	0xB3C4F0  	MOV.B	#79, W0
0x119A	0x785880  	MOV.B	W0, [W1++]
0x119C	0xB3C520  	MOV.B	#82, W0
0x119E	0x785880  	MOV.B	W0, [W1++]
0x11A0	0xB3C5F0  	MOV.B	#95, W0
0x11A2	0x785880  	MOV.B	W0, [W1++]
0x11A4	0xB3C500  	MOV.B	#80, W0
0x11A6	0x785880  	MOV.B	W0, [W1++]
0x11A8	0xB3C450  	MOV.B	#69, W0
0x11AA	0x785880  	MOV.B	W0, [W1++]
0x11AC	0xB3C520  	MOV.B	#82, W0
0x11AE	0x785880  	MOV.B	W0, [W1++]
0x11B0	0xB3C490  	MOV.B	#73, W0
0x11B2	0x785880  	MOV.B	W0, [W1++]
0x11B4	0xB3C4F0  	MOV.B	#79, W0
0x11B6	0x785880  	MOV.B	W0, [W1++]
0x11B8	0xB3C440  	MOV.B	#68, W0
0x11BA	0x785880  	MOV.B	W0, [W1++]
0x11BC	0xB3C3D0  	MOV.B	#61, W0
0x11BE	0x785880  	MOV.B	W0, [W1++]
0x11C0	0xEF2000  	CLR	W0
0x11C2	0x785880  	MOV.B	W0, [W1++]
0x11C4	0x470060  	ADD	W14, #0, W0
0x11C6	0x780500  	MOV	W0, W10
0x11C8	0x07FE29  	RCALL	_UART1_Write_Text
0x11CA	0x20800C  	MOV	#lo_addr(_StrBuffer), W12
0x11CC	0x2999AA  	MOV	#39322, W10
0x11CE	0x23E99B  	MOV	#16025, W11
0x11D0	0x07FD48  	RCALL	_FloatToStr
0x11D2	0x20800A  	MOV	#lo_addr(_StrBuffer), W10
0x11D4	0x07FE23  	RCALL	_UART1_Write_Text
0x11D6	0x4700E0  	ADD	W14, #0, W1
0x11D8	0xB3C440  	MOV.B	#68, W0
0x11DA	0x785880  	MOV.B	W0, [W1++]
0x11DC	0xB3C570  	MOV.B	#87, W0
0x11DE	0x785880  	MOV.B	W0, [W1++]
0x11E0	0xB3C4F0  	MOV.B	#79, W0
0x11E2	0x785880  	MOV.B	W0, [W1++]
0x11E4	0xB3C520  	MOV.B	#82, W0
0x11E6	0x785880  	MOV.B	W0, [W1++]
0x11E8	0xB3C440  	MOV.B	#68, W0
0x11EA	0x785880  	MOV.B	W0, [W1++]
0x11EC	0xB3C280  	MOV.B	#40, W0
0x11EE	0x785880  	MOV.B	W0, [W1++]
0x11F0	0xB3C530  	MOV.B	#83, W0
0x11F2	0x785880  	MOV.B	W0, [W1++]
0x11F4	0xB3C540  	MOV.B	#84, W0
0x11F6	0x785880  	MOV.B	W0, [W1++]
0x11F8	0xB3C410  	MOV.B	#65, W0
0x11FA	0x785880  	MOV.B	W0, [W1++]
0x11FC	0xB3C4C0  	MOV.B	#76, W0
0x11FE	0x785880  	MOV.B	W0, [W1++]
0x1200	0xB3C4C0  	MOV.B	#76, W0
0x1202	0x785880  	MOV.B	W0, [W1++]
0x1204	0xB3C5F0  	MOV.B	#95, W0
0x1206	0x785880  	MOV.B	W0, [W1++]
0x1208	0xB3C440  	MOV.B	#68, W0
0x120A	0x785880  	MOV.B	W0, [W1++]
0x120C	0xB3C490  	MOV.B	#73, W0
0x120E	0x785880  	MOV.B	W0, [W1++]
0x1210	0xB3C530  	MOV.B	#83, W0
0x1212	0x785880  	MOV.B	W0, [W1++]
0x1214	0xB3C540  	MOV.B	#84, W0
0x1216	0x785880  	MOV.B	W0, [W1++]
0x1218	0xB3C520  	MOV.B	#82, W0
0x121A	0x785880  	MOV.B	W0, [W1++]
0x121C	0xB3C490  	MOV.B	#73, W0
0x121E	0x785880  	MOV.B	W0, [W1++]
0x1220	0xB3C420  	MOV.B	#66, W0
0x1222	0x785880  	MOV.B	W0, [W1++]
0x1224	0xB3C550  	MOV.B	#85, W0
0x1226	0x785880  	MOV.B	W0, [W1++]
0x1228	0xB3C540  	MOV.B	#84, W0
0x122A	0x785880  	MOV.B	W0, [W1++]
0x122C	0xB3C4F0  	MOV.B	#79, W0
0x122E	0x785880  	MOV.B	W0, [W1++]
0x1230	0xB3C520  	MOV.B	#82, W0
0x1232	0x785880  	MOV.B	W0, [W1++]
0x1234	0xB3C5F0  	MOV.B	#95, W0
0x1236	0x785880  	MOV.B	W0, [W1++]
0x1238	0xB3C500  	MOV.B	#80, W0
0x123A	0x785880  	MOV.B	W0, [W1++]
0x123C	0xB3C450  	MOV.B	#69, W0
0x123E	0x785880  	MOV.B	W0, [W1++]
0x1240	0xB3C520  	MOV.B	#82, W0
0x1242	0x785880  	MOV.B	W0, [W1++]
0x1244	0xB3C490  	MOV.B	#73, W0
0x1246	0x785880  	MOV.B	W0, [W1++]
0x1248	0xB3C4F0  	MOV.B	#79, W0
0x124A	0x785880  	MOV.B	W0, [W1++]
0x124C	0xB3C440  	MOV.B	#68, W0
0x124E	0x785880  	MOV.B	W0, [W1++]
0x1250	0xB3C2F0  	MOV.B	#47, W0
0x1252	0x785880  	MOV.B	W0, [W1++]
0x1254	0xB3C430  	MOV.B	#67, W0
0x1256	0x785880  	MOV.B	W0, [W1++]
0x1258	0xB3C4C0  	MOV.B	#76, W0
0x125A	0x785880  	MOV.B	W0, [W1++]
0x125C	0xB3C4F0  	MOV.B	#79, W0
0x125E	0x785880  	MOV.B	W0, [W1++]
0x1260	0xB3C430  	MOV.B	#67, W0
0x1262	0x785880  	MOV.B	W0, [W1++]
0x1264	0xB3C4B0  	MOV.B	#75, W0
0x1266	0x785880  	MOV.B	W0, [W1++]
0x1268	0xB3C5F0  	MOV.B	#95, W0
0x126A	0x785880  	MOV.B	W0, [W1++]
0x126C	0xB3C500  	MOV.B	#80, W0
0x126E	0x785880  	MOV.B	W0, [W1++]
0x1270	0xB3C450  	MOV.B	#69, W0
0x1272	0x785880  	MOV.B	W0, [W1++]
0x1274	0xB3C520  	MOV.B	#82, W0
0x1276	0x785880  	MOV.B	W0, [W1++]
0x1278	0xB3C490  	MOV.B	#73, W0
0x127A	0x785880  	MOV.B	W0, [W1++]
0x127C	0xB3C4F0  	MOV.B	#79, W0
0x127E	0x785880  	MOV.B	W0, [W1++]
0x1280	0xB3C440  	MOV.B	#68, W0
0x1282	0x785880  	MOV.B	W0, [W1++]
0x1284	0xB3C290  	MOV.B	#41, W0
0x1286	0x785880  	MOV.B	W0, [W1++]
0x1288	0xB3C3D0  	MOV.B	#61, W0
0x128A	0x785880  	MOV.B	W0, [W1++]
0x128C	0xEF2000  	CLR	W0
0x128E	0x785880  	MOV.B	W0, [W1++]
0x1290	0x470060  	ADD	W14, #0, W0
0x1292	0x780500  	MOV	W0, W10
0x1294	0x07FDC3  	RCALL	_UART1_Write_Text
0x1296	0x20800C  	MOV	#lo_addr(_StrBuffer), W12
0x1298	0x23E00A  	MOV	#15872, W10
0x129A	0x20049B  	MOV	#73, W11
0x129C	0x07FDD3  	RCALL	_LongWordToStr
0x129E	0x20800A  	MOV	#lo_addr(_StrBuffer), W10
0x12A0	0x07FDBD  	RCALL	_UART1_Write_Text
0x12A2	0x4700E0  	ADD	W14, #0, W1
0x12A4	0xB3C500  	MOV.B	#80, W0
0x12A6	0x785880  	MOV.B	W0, [W1++]
0x12A8	0xB3C520  	MOV.B	#82, W0
0x12AA	0x785880  	MOV.B	W0, [W1++]
0x12AC	0xB3C4C0  	MOV.B	#76, W0
0x12AE	0x785880  	MOV.B	W0, [W1++]
0x12B0	0xB3C3D0  	MOV.B	#61, W0
0x12B2	0x785880  	MOV.B	W0, [W1++]
0x12B4	0xEF2000  	CLR	W0
0x12B6	0x785880  	MOV.B	W0, [W1++]
0x12B8	0x470060  	ADD	W14, #0, W0
0x12BA	0x780500  	MOV	W0, W10
0x12BC	0x07FDAF  	RCALL	_UART1_Write_Text
0x12BE	0x20800B  	MOV	#lo_addr(_StrBuffer), W11
0x12C0	0x800AAA  	MOV	CCP1PRL, W10
0x12C2	0x07FCB0  	RCALL	_WordToStr
0x12C4	0x20800A  	MOV	#lo_addr(_StrBuffer), W10
0x12C6	0x07FDAA  	RCALL	_UART1_Write_Text
0x12C8	0x4700E0  	ADD	W14, #0, W1
0x12CA	0xB3C200  	MOV.B	#32, W0
0x12CC	0x785880  	MOV.B	W0, [W1++]
0x12CE	0xB3C200  	MOV.B	#32, W0
0x12D0	0x785880  	MOV.B	W0, [W1++]
0x12D2	0xB3C500  	MOV.B	#80, W0
0x12D4	0x785880  	MOV.B	W0, [W1++]
0x12D6	0xB3C520  	MOV.B	#82, W0
0x12D8	0x785880  	MOV.B	W0, [W1++]
0x12DA	0xB3C480  	MOV.B	#72, W0
0x12DC	0x785880  	MOV.B	W0, [W1++]
0x12DE	0xB3C3D0  	MOV.B	#61, W0
0x12E0	0x785880  	MOV.B	W0, [W1++]
0x12E2	0xEF2000  	CLR	W0
0x12E4	0x785880  	MOV.B	W0, [W1++]
0x12E6	0x470060  	ADD	W14, #0, W0
0x12E8	0x780500  	MOV	W0, W10
0x12EA	0x07FA7D  	RCALL	_UART_Write_Text
0x12EC	0x20800B  	MOV	#lo_addr(_StrBuffer), W11
0x12EE	0x800ABA  	MOV	CCP1PRH, W10
0x12F0	0x07FC99  	RCALL	_WordToStr
0x12F2	0x20800A  	MOV	#lo_addr(_StrBuffer), W10
0x12F4	0x07FA78  	RCALL	_UART_Write_Text
0x12F6	0x2000DA  	MOV	#13, W10
0x12F8	0x07FB36  	RCALL	_UART1_Write
0x12FA	0xA84062  	BSET	CN2IE_bit, BitPos(CN2IE_bit+0)
0x12FC	0xA880AD  	BSET	CNIP_0_bit, BitPos(CNIP_0_bit+0)
0x12FE	0xA8A0AD  	BSET	CNIP_1_bit, BitPos(CNIP_1_bit+0)
0x1300	0xA8C0AD  	BSET	CNIP_2_bit, BitPos(CNIP_2_bit+0)
0x1302	0xA96086  	BCLR	CNIF_bit, BitPos(CNIF_bit+0)
0x1304	0xA86096  	BSET	CNIE_bit, BitPos(CNIE_bit+0)
L__main64:
0x1306	0x200098  	MOV	#9, W8
0x1308	0x223577  	MOV	#9047, W7
L__main68:
0x130A	0xED200E  	DEC	W7
0x130C	0x3AFFFE  	BRA NZ	L__main68
0x130E	0xED2010  	DEC	W8
0x1310	0x3AFFFC  	BRA NZ	L__main68
0x1312	0x4700E0  	ADD	W14, #0, W1
0x1314	0xB3C520  	MOV.B	#82, W0
0x1316	0x785880  	MOV.B	W0, [W1++]
0x1318	0xB3C500  	MOV.B	#80, W0
0x131A	0x785880  	MOV.B	W0, [W1++]
0x131C	0xB3C4D0  	MOV.B	#77, W0
0x131E	0x785880  	MOV.B	W0, [W1++]
0x1320	0xB3C3D0  	MOV.B	#61, W0
0x1322	0x785880  	MOV.B	W0, [W1++]
0x1324	0xEF2000  	CLR	W0
0x1326	0x785880  	MOV.B	W0, [W1++]
0x1328	0x470060  	ADD	W14, #0, W0
0x132A	0x780500  	MOV	W0, W10
0x132C	0x07FD77  	RCALL	_UART1_Write_Text
0x132E	0x20800C  	MOV	#lo_addr(_StrBuffer), W12
0x1330	0x8041FA  	MOV	_Last_RPM_Global, W10
0x1332	0x80420B  	MOV	_Last_RPM_Global+2, W11
0x1334	0x07FC96  	RCALL	_FloatToStr
0x1336	0x20800A  	MOV	#lo_addr(_StrBuffer), W10
0x1338	0x07FD71  	RCALL	_UART1_Write_Text
0x133A	0x4700E0  	ADD	W14, #0, W1
0x133C	0xB3C200  	MOV.B	#32, W0
0x133E	0x785880  	MOV.B	W0, [W1++]
0x1340	0xB3C200  	MOV.B	#32, W0
0x1342	0x785880  	MOV.B	W0, [W1++]
0x1344	0xB3C530  	MOV.B	#83, W0
0x1346	0x785880  	MOV.B	W0, [W1++]
0x1348	0xB3C740  	MOV.B	#116, W0
0x134A	0x785880  	MOV.B	W0, [W1++]
0x134C	0xB3C610  	MOV.B	#97, W0
0x134E	0x785880  	MOV.B	W0, [W1++]
0x1350	0xB3C740  	MOV.B	#116, W0
0x1352	0x785880  	MOV.B	W0, [W1++]
0x1354	0xB3C650  	MOV.B	#101, W0
0x1356	0x785880  	MOV.B	W0, [W1++]
0x1358	0xB3C3D0  	MOV.B	#61, W0
0x135A	0x785880  	MOV.B	W0, [W1++]
0x135C	0xEF2000  	CLR	W0
0x135E	0x785880  	MOV.B	W0, [W1++]
0x1360	0x470060  	ADD	W14, #0, W0
0x1362	0x780500  	MOV	W0, W10
0x1364	0x07FA40  	RCALL	_UART_Write_Text
0x1366	0x20800B  	MOV	#lo_addr(_StrBuffer), W11
0x1368	0x80424A  	MOV	_State, W10
0x136A	0x07FA54  	RCALL	_IntToStr
0x136C	0x20800A  	MOV	#lo_addr(_StrBuffer), W10
0x136E	0x07FA3B  	RCALL	_UART_Write_Text
0x1370	0x2000DA  	MOV	#13, W10
0x1372	0x07FAF9  	RCALL	_UART1_Write
0x1374	0xAA62C4  	BTG	LATA3_bit, BitPos(LATA3_bit+0)
0x1376	0x37FFC7  	BRA	L__main64
L_end_main:
0x1378	0x78064F  	POP	W12
0x137A	0x7805CF  	POP	W11
0x137C	0x78054F  	POP	W10
0x137E	0xFA8000  	ULNK
L__main_end_loop:
0x1380	0x37FFFF  	BRA	L__main_end_loop
; end of _main
_UART1_Init:
0x0A6A	0xFA0008  	LNK	#8
0x0A6C	0x209660  	MOV	#lo_addr(_UART1_Write), W0
0x0A6E	0x8841E0  	MOV	W0, _UART_Wr_Ptr
0x0A70	0x2FFFF0  	MOV	#lo_addr(_UART1_Read), W0
0x0A72	0x884210  	MOV	W0, _UART_Rd_Ptr
0x0A74	0x2FFFF0  	MOV	#lo_addr(_UART1_Data_Ready), W0
0x0A76	0x884230  	MOV	W0, _UART_Rdy_Ptr
0x0A78	0x2FFFF0  	MOV	#lo_addr(_UART1_TX_Idle), W0
0x0A7A	0x884220  	MOV	W0, _UART_TX_Idle_Ptr
0x0A7C	0xEF2220  	CLR	U1MODE
0x0A7E	0x280000  	MOV	#32768, W0
0x0A80	0xB7A222  	MOV	WREG, U1STA
0x0A82	0xA96220  	BCLR	U1MODE, #3
0x0A84	0x07FF40  	RCALL	_Get_Fosc_kHz
0x0A86	0x203E82  	MOV	#1000, W2
0x0A88	0x200003  	MOV	#0, W3
0x0A8A	0x07FF03  	RCALL	__Multiply_32x32
; tmp start address is: 12 (W6)
0x0A8C	0xBE0300  	MOV.D	W0, W6
0x0A8E	0x07FF3F  	RCALL	_Get_Fosc_Per_Cyc
0x0A90	0xEB0080  	CLR	W1
0x0A92	0xD10081  	LSR	W1, W1
0x0A94	0xD38000  	RRC	W0, W0
0x0A96	0x400264  	ADD	W0, #4, W4
0x0A98	0x4882E0  	ADDC	W1, #0, W5
0x0A9A	0xBE010A  	MOV.D	W10, W2
L__UART1_Init109:
0x0A9C	0xE90204  	DEC	W4, W4
0x0A9E	0x350003  	BRA LT	L__UART1_Init110
0x0AA0	0xD00102  	SL	W2, W2
0x0AA2	0xD28183  	RLC	W3, W3
0x0AA4	0x37FFFB  	BRA	L__UART1_Init109
L__UART1_Init110:
0x0AA6	0x980702  	MOV	W2, [W14+0]
0x0AA8	0x980713  	MOV	W3, [W14+2]
0x0AAA	0xBE9F86  	PUSH.D	W6
0x0AAC	0xBE9F8A  	PUSH.D	W10
0x0AAE	0xBE0006  	MOV.D	W6, W0
0x0AB0	0xEB8200  	SETM	W4
0x0AB2	0x07FEF8  	RCALL	__Modulus_32x32
0x0AB4	0xBE054F  	POP.D	W10
0x0AB6	0xBE034F  	POP.D	W6
0x0AB8	0x980720  	MOV	W0, [W14+4]
0x0ABA	0x980731  	MOV	W1, [W14+6]
0x0ABC	0xBE9F8A  	PUSH.D	W10
; tmp end address is: 12 (W6)
0x0ABE	0xBE0006  	MOV.D	W6, W0
0x0AC0	0x90010E  	MOV	[W14+0], W2
0x0AC2	0x90019E  	MOV	[W14+2], W3
0x0AC4	0xEB8200  	SETM	W4
0x0AC6	0x07FF26  	RCALL	__Divide_32x32
0x0AC8	0xBE054F  	POP.D	W10
; tmp start address is: 6 (W3)
0x0ACA	0x780180  	MOV	W0, W3
0x0ACC	0x780201  	MOV	W1, W4
0x0ACE	0x470060  	ADD	W14, #0, W0
0x0AD0	0xD18150  	ASR	[++W0], W2
0x0AD2	0xD380C0  	RRC	[--W0], W1
0x0AD4	0x470064  	ADD	W14, #4, W0
0x0AD6	0xE10830  	CP	W1, [W0++]
0x0AD8	0xE19020  	CPB	W2, [W0--]
0x0ADA	0x3D0003  	BRA GE	L__UART1_Init104
L__UART1_Init111:
; tmp start address is: 2 (W1)
0x0ADC	0x4180E1  	ADD	W3, #1, W1
0x0ADE	0x4A0160  	ADDC	W4, #0, W2
; tmp end address is: 6 (W3)
; tmp end address is: 2 (W1)
0x0AE0	0x370002  	BRA	L__UART1_Init2
L__UART1_Init104:
0x0AE2	0x780083  	MOV	W3, W1
0x0AE4	0x780104  	MOV	W4, W2
L__UART1_Init2:
; tmp start address is: 2 (W1)
0x0AE6	0xE10860  	CP	W1, #0
0x0AE8	0xE19060  	CPB	W2, #0
0x0AEA	0x3A002F  	BRA NZ	L__UART1_Init106
L__UART1_Init112:
; tmp end address is: 2 (W1)
0x0AEC	0x07FF0C  	RCALL	_Get_Fosc_kHz
0x0AEE	0x203E82  	MOV	#1000, W2
0x0AF0	0x200003  	MOV	#0, W3
0x0AF2	0x07FECF  	RCALL	__Multiply_32x32
; tmp start address is: 12 (W6)
0x0AF4	0xBE0300  	MOV.D	W0, W6
0x0AF6	0x07FF0B  	RCALL	_Get_Fosc_Per_Cyc
0x0AF8	0xEB0080  	CLR	W1
0x0AFA	0xD10081  	LSR	W1, W1
0x0AFC	0xD38000  	RRC	W0, W0
0x0AFE	0x400262  	ADD	W0, #2, W4
0x0B00	0x4882E0  	ADDC	W1, #0, W5
0x0B02	0xBE010A  	MOV.D	W10, W2
L__UART1_Init113:
0x0B04	0xE90204  	DEC	W4, W4
0x0B06	0x350003  	BRA LT	L__UART1_Init114
0x0B08	0xD00102  	SL	W2, W2
0x0B0A	0xD28183  	RLC	W3, W3
0x0B0C	0x37FFFB  	BRA	L__UART1_Init113
L__UART1_Init114:
0x0B0E	0x980702  	MOV	W2, [W14+0]
0x0B10	0x980713  	MOV	W3, [W14+2]
0x0B12	0xBE9F86  	PUSH.D	W6
0x0B14	0xBE0006  	MOV.D	W6, W0
0x0B16	0xEB8200  	SETM	W4
0x0B18	0x07FEC5  	RCALL	__Modulus_32x32
0x0B1A	0xBE034F  	POP.D	W6
0x0B1C	0x980720  	MOV	W0, [W14+4]
0x0B1E	0x980731  	MOV	W1, [W14+6]
0x0B20	0xBE0006  	MOV.D	W6, W0
0x0B22	0x90010E  	MOV	[W14+0], W2
0x0B24	0x90019E  	MOV	[W14+2], W3
0x0B26	0xEB8200  	SETM	W4
0x0B28	0x07FEF5  	RCALL	__Divide_32x32
; tmp end address is: 12 (W6)
; tmp start address is: 6 (W3)
0x0B2A	0x780180  	MOV	W0, W3
0x0B2C	0x780201  	MOV	W1, W4
0x0B2E	0x470060  	ADD	W14, #0, W0
0x0B30	0xD18150  	ASR	[++W0], W2
0x0B32	0xD380C0  	RRC	[--W0], W1
0x0B34	0x470064  	ADD	W14, #4, W0
0x0B36	0xE10830  	CP	W1, [W0++]
0x0B38	0xE19020  	CPB	W2, [W0--]
0x0B3A	0x3D0003  	BRA GE	L__UART1_Init105
L__UART1_Init115:
; tmp start address is: 2 (W1)
0x0B3C	0x4180E1  	ADD	W3, #1, W1
0x0B3E	0x4A0160  	ADDC	W4, #0, W2
; tmp end address is: 6 (W3)
; tmp end address is: 2 (W1)
0x0B40	0x370002  	BRA	L__UART1_Init8
L__UART1_Init105:
0x0B42	0x780083  	MOV	W3, W1
0x0B44	0x780104  	MOV	W4, W2
L__UART1_Init8:
; tmp start address is: 2 (W1)
0x0B46	0xA86220  	BSET	U1MODE, #3
; tmp end address is: 2 (W1)
0x0B48	0x370000  	BRA	L__UART1_Init5
L__UART1_Init106:
L__UART1_Init5:
; tmp start address is: 2 (W1)
0x0B4A	0x202280  	MOV	#lo_addr(U1BRG), W0
0x0B4C	0x508861  	SUB	W1, #1, [W0]
; tmp end address is: 2 (W1)
0x0B4E	0xA92222  	BCLR	U1STA, #1
0x0B50	0xA8E221  	BSET	U1MODE, #15
0x0B52	0xA84223  	BSET	U1STA, #10
0x0B54	0x07FED3  	RCALL	_Delay_10ms
L_end_UART1_Init:
0x0B56	0xFA8000  	ULNK
0x0B58	0x060000  	RETURN
; end of _UART1_Init
_Get_Fosc_kHz:
; Result start address is: 4 (W2)
0x0906	0x27D002  	MOV	#32000, W2
0x0908	0x200003  	MOV	#0, W3
0x090A	0xBE0002  	MOV.D	W2, W0
; Result end address is: 4 (W2)
L_end_Get_Fosc_kHz:
0x090C	0x060000  	RETURN
; end of _Get_Fosc_kHz
_Get_Fosc_Per_Cyc:
; Result start address is: 2 (W1)
0x090E	0x200021  	MOV	#2, W1
0x0910	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_Get_Fosc_Per_Cyc:
0x0912	0x060000  	RETURN
; end of _Get_Fosc_Per_Cyc
_Delay_10ms:
0x08FC	0x2D0557  	MOV	#53333, W7
L__Delay_10ms51:
0x08FE	0xED200E  	DEC	W7
0x0900	0x3AFFFE  	BRA NZ	L__Delay_10ms51
0x0902	0x000000  	NOP
L_end_Delay_10ms:
0x0904	0x060000  	RETURN
; end of _Delay_10ms
__Multiply_32x32:
0x0892	0xFA0000  	LNK	#0
0x0894	0xB80A02  	MUL.UU	W1, W2, W4
0x0896	0x880050  	MOV	W0, W5
0x0898	0xB80002  	MUL.UU	W0, W2, W0
0x089A	0x420081  	ADD	W4, W1, W1
0x089C	0xB82A03  	MUL.UU	W5, W3, W4
0x089E	0x420081  	ADD	W4, W1, W1
L_end__Multiply_32x32:
0x08A0	0xFA8000  	ULNK
0x08A2	0x060000  	RETURN
; end of __Multiply_32x32
__Modulus_32x32:
0x08A4	0xFA0000  	LNK	#0
0x08A6	0x070002  	RCALL	Modulus_32x32___testsus
0x08A8	0x0000000408F8  	GOTO	the_end_Modulus_32x32
Modulus_32x32___testsus:
0x08AC	0xE20008  	CP0	W4
0x08AE	0x3A0002  	BRA NZ	Modulus_32x32___modsi3
0x08B0	0x070010  	RCALL	Modulus_32x32___umodsi3
0x08B2	0x060000  	RETURN
Modulus_32x32___modsi3:
0x08B4	0x781F81  	MOV	W1, [W15++]
0x08B6	0xE20002  	CP0	W1
0x08B8	0x3D0002  	BRA GE	Modulus_32x32_modtestb
0x08BA	0x100060  	SUBR	W0, #0, W0
0x08BC	0x1880E0  	SUBBR	W1, #0, W1
Modulus_32x32_modtestb:
0x08BE	0xE20006  	CP0	W3
0x08C0	0x3D0002  	BRA GE	Modulus_32x32_calcrem
0x08C2	0x110160  	SUBR	W2, #0, W2
0x08C4	0x1981E0  	SUBBR	W3, #0, W3
Modulus_32x32_calcrem:
0x08C6	0x070005  	RCALL	Modulus_32x32___umodsi3
0x08C8	0xE0004F  	CP0	[--W15]
0x08CA	0x3B0002  	BRA NN	Modulus_32x32_exitr
0x08CC	0x100060  	SUBR	W0, #0, W0
0x08CE	0x1880E0  	SUBBR	W1, #0, W1
Modulus_32x32_exitr:
0x08D0	0x060000  	RETURN
Modulus_32x32___umodsi3:
0x08D2	0x070002  	RCALL	Modulus_32x32___udivsi3
0x08D4	0xBE8004  	MOV.D	W4, W0
0x08D6	0x060000  	RETURN
Modulus_32x32___udivsi3:
0x08D8	0xB82260  	MUL.UU	W4, #0, W4
0x08DA	0x200206  	MOV	#32, W6
Modulus_32x32_nextbit:
0x08DC	0xD00000  	SL	W0, W0
0x08DE	0xD28081  	RLC	W1, W1
0x08E0	0xD28204  	RLC	W4, W4
0x08E2	0xD28285  	RLC	W5, W5
0x08E4	0xA80000  	BSET	W0, #0
0x08E6	0x520202  	SUB	W4, W2, W4
0x08E8	0x5A8283  	SUBB	W5, W3, W5
0x08EA	0x3B0003  	BRA NN	Modulus_32x32_iterate
0x08EC	0x420202  	ADD	W4, W2, W4
0x08EE	0x4A8283  	ADDC	W5, W3, W5
0x08F0	0xA10000  	BCLR	W0, #0
Modulus_32x32_iterate:
0x08F2	0xE90306  	DEC	W6, W6
0x08F4	0x3AFFF3  	BRA NZ	Modulus_32x32_nextbit
0x08F6	0x060000  	RETURN
the_end_Modulus_32x32:
L_end__Modulus_32x32:
0x08F8	0xFA8000  	ULNK
0x08FA	0x060000  	RETURN
; end of __Modulus_32x32
__Divide_32x32:
0x0914	0xFA0000  	LNK	#0
0x0916	0x070002  	RCALL	Divide_32x32___testsus
0x0918	0x000000040962  	GOTO	the_end_Divide_32x32
Divide_32x32___testsus:
0x091C	0xE20008  	CP0	W4
0x091E	0x3A0002  	BRA NZ	Divide_32x32___divsi3
0x0920	0x070010  	RCALL	Divide_32x32___udivsi3
0x0922	0x060000  	RETURN
Divide_32x32___divsi3:
0x0924	0x689F83  	XOR	W1, W3, [W15++]
0x0926	0xE20002  	CP0	W1
0x0928	0x3D0002  	BRA GE	Divide_32x32_divtestb
0x092A	0x100060  	SUBR	W0, #0, W0
0x092C	0x1880E0  	SUBBR	W1, #0, W1
Divide_32x32_divtestb:
0x092E	0xE20006  	CP0	W3
0x0930	0x3D0002  	BRA GE	Divide_32x32_calcquot
0x0932	0x110160  	SUBR	W2, #0, W2
0x0934	0x1981E0  	SUBBR	W3, #0, W3
Divide_32x32_calcquot:
0x0936	0x070005  	RCALL	Divide_32x32___udivsi3
0x0938	0xE0004F  	CP0	[--W15]
0x093A	0x3B0002  	BRA NN	Divide_32x32_returnq
0x093C	0x100060  	SUBR	W0, #0, W0
0x093E	0x1880E0  	SUBBR	W1, #0, W1
Divide_32x32_returnq:
0x0940	0x060000  	RETURN
Divide_32x32___udivsi3:
0x0942	0xB82260  	MUL.UU	W4, #0, W4
0x0944	0x200206  	MOV	#32, W6
Divide_32x32_nextbit:
0x0946	0xD00000  	SL	W0, W0
0x0948	0xD28081  	RLC	W1, W1
0x094A	0xD28204  	RLC	W4, W4
0x094C	0xD28285  	RLC	W5, W5
0x094E	0xA80000  	BSET	W0, #0
0x0950	0x520202  	SUB	W4, W2, W4
0x0952	0x5A8283  	SUBB	W5, W3, W5
0x0954	0x3B0003  	BRA NN	Divide_32x32_iterate
0x0956	0x420202  	ADD	W4, W2, W4
0x0958	0x4A8283  	ADDC	W5, W3, W5
0x095A	0xA10000  	BCLR	W0, #0
Divide_32x32_iterate:
0x095C	0xE90306  	DEC	W6, W6
0x095E	0x3AFFF3  	BRA NZ	Divide_32x32_nextbit
0x0960	0x060000  	RETURN
the_end_Divide_32x32:
L_end__Divide_32x32:
0x0962	0xFA8000  	ULNK
0x0964	0x060000  	RETURN
; end of __Divide_32x32
_UART1_Write_Text:
0x0E1C	0xFA0000  	LNK	#0
; counter start address is: 2 (W1)
0x0E1E	0xEF2002  	CLR	W1
0x0E20	0x78401A  	MOV.B	[W10], W0
; data_ start address is: 4 (W2)
0x0E22	0x784100  	MOV.B	W0, W2
; data_ end address is: 4 (W2)
; counter end address is: 2 (W1)
0x0E24	0x784002  	MOV.B	W2, W0
0x0E26	0x784101  	MOV.B	W1, W2
L__UART1_Write_Text43:
; data_ start address is: 0 (W0)
; counter start address is: 4 (W2)
0x0E28	0xE10460  	CP.B	W0, #0
0x0E2A	0x32000A  	BRA Z	L__UART1_Write_Text44
L__UART1_Write_Text138:
0x0E2C	0x781F8A  	PUSH	W10
; data_ end address is: 0 (W0)
0x0E2E	0xFB8500  	ZE	W0, W10
0x0E30	0x07FD9A  	RCALL	_UART1_Write
0x0E32	0x78054F  	POP	W10
; counter start address is: 2 (W1)
0x0E34	0x4140E1  	ADD.B	W2, #1, W1
; counter end address is: 4 (W2)
0x0E36	0xFB8001  	ZE	W1, W0
0x0E38	0x450000  	ADD	W10, W0, W0
; data_ start address is: 0 (W0)
0x0E3A	0x784010  	MOV.B	[W0], W0
0x0E3C	0x784101  	MOV.B	W1, W2
; counter end address is: 2 (W1)
; data_ end address is: 0 (W0)
0x0E3E	0x37FFF4  	BRA	L__UART1_Write_Text43
L__UART1_Write_Text44:
L_end_UART1_Write_Text:
0x0E40	0xFA8000  	ULNK
0x0E42	0x060000  	RETURN
; end of _UART1_Write_Text
_UART1_Write:
0x0966	0xFA0000  	LNK	#0
L__UART1_Write34:
0x0968	0x801111  	MOV	U1STA, W1
0x096A	0x201000  	MOV	#256, W0
0x096C	0x608000  	AND	W1, W0, W0
0x096E	0xE10060  	CP	W0, #0
0x0970	0x3A0002  	BRA NZ	L__UART1_Write35
L__UART1_Write133:
0x0972	0x000000  	NOP
0x0974	0x37FFF9  	BRA	L__UART1_Write34
L__UART1_Write35:
0x0976	0x88112A  	MOV	W10, U1TXREG
L_end_UART1_Write:
0x0978	0xFA8000  	ULNK
0x097A	0x060000  	RETURN
; end of _UART1_Write
_FloatToStr:
0x0C62	0xFA0020  	LNK	#32
0x0C64	0xEF2000  	CLR	W0
0x0C66	0x980F50  	MOV	W0, [W14+26]
0x0C68	0x781F8C  	PUSH	W12
0x0C6A	0xBE9F8A  	PUSH.D	W10
0x0C6C	0xBE000A  	MOV.D	W10, W0
0x0C6E	0x07FBC1  	RCALL	__Float2Longint
0x0C70	0xBE054F  	POP.D	W10
0x0C72	0x78064F  	POP	W12
; tmpli start address is: 4 (W2)
0x0C74	0xBE0100  	MOV.D	W0, W2
0x0C76	0xBE9F82  	PUSH.D	W2
0x0C78	0x781F8C  	PUSH	W12
0x0C7A	0xBE9F8A  	PUSH.D	W10
0x0C7C	0xEF2004  	CLR	W2
0x0C7E	0xEF2006  	CLR	W3
0x0C80	0xBE000A  	MOV.D	W10, W0
0x0C82	0x070142  	RCALL	__Compare_Le_Fp
0x0C84	0xE00000  	CP0	W0
0x0C86	0xEF2000  	CLR	W0
0x0C88	0x3D0001  	BRA GE	L__FloatToStr288
0x0C8A	0xEEA000  	COM	W0
L__FloatToStr288:
0x0C8C	0xBE054F  	POP.D	W10
0x0C8E	0x78064F  	POP	W12
0x0C90	0xBE014F  	POP.D	W2
0x0C92	0xE20000  	CP0	W0
0x0C94	0x320002  	BRA Z	L__FloatToStr178
L__FloatToStr289:
0x0C96	0x2FFFF0  	MOV	#65535, W0
0x0C98	0x980F50  	MOV	W0, [W14+26]
L__FloatToStr178:
0x0C9A	0x470062  	ADD	W14, #2, W0
0x0C9C	0xBE9F82  	PUSH.D	W2
0x0C9E	0x781F8C  	PUSH	W12
0x0CA0	0xBE9F8A  	PUSH.D	W10
0x0CA2	0x780600  	MOV	W0, W12
0x0CA4	0xBE0502  	MOV.D	W2, W10
0x0CA6	0x07FE6A  	RCALL	_LongIntToStr
0x0CA8	0xBE054F  	POP.D	W10
0x0CAA	0x78064F  	POP	W12
0x0CAC	0xBE014F  	POP.D	W2
0x0CAE	0x781F8C  	PUSH	W12
; tmpli end address is: 4 (W2)
0x0CB0	0xBE9F8A  	PUSH.D	W10
0x0CB2	0xBE0002  	MOV.D	W2, W0
0x0CB4	0xEB8100  	SETM	W2
0x0CB6	0x07FBD9  	RCALL	__Long2Float
0x0CB8	0xBE054F  	POP.D	W10
0x0CBA	0xBE9F8A  	PUSH.D	W10
0x0CBC	0xBE0100  	MOV.D	W0, W2
0x0CBE	0xBE000A  	MOV.D	W10, W0
0x0CC0	0x07FB93  	RCALL	__Sub_FP
0x0CC2	0x250002  	MOV	#20480, W2
0x0CC4	0x247C33  	MOV	#18371, W3
0x0CC6	0x07FC2C  	RCALL	__Mul_FP
0x0CC8	0x07FB94  	RCALL	__Float2Longint
0x0CCA	0xBE054F  	POP.D	W10
0x0CCC	0x78064F  	POP	W12
; tmpli start address is: 4 (W2)
0x0CCE	0xBE0100  	MOV.D	W0, W2
0x0CD0	0xE10060  	CP	W0, #0
0x0CD2	0xE18860  	CPB	W1, #0
0x0CD4	0x3D0005  	BRA GE	L__FloatToStr218
L__FloatToStr290:
; tmpli start address is: 0 (W0)
0x0CD6	0x110060  	SUBR	W2, #0, W0
0x0CD8	0x1980E0  	SUBBR	W3, #0, W1
; tmpli end address is: 4 (W2)
0x0CDA	0x780101  	MOV	W1, W2
0x0CDC	0x780080  	MOV	W0, W1
; tmpli end address is: 0 (W0)
0x0CDE	0x370002  	BRA	L__FloatToStr181
L__FloatToStr218:
0x0CE0	0x780082  	MOV	W2, W1
0x0CE2	0x780103  	MOV	W3, W2
L__FloatToStr181:
; tmpli start address is: 2 (W1)
0x0CE4	0x47006E  	ADD	W14, #14, W0
0x0CE6	0x781F8C  	PUSH	W12
0x0CE8	0xBE9F8A  	PUSH.D	W10
0x0CEA	0x780600  	MOV	W0, W12
0x0CEC	0x780501  	MOV	W1, W10
0x0CEE	0x780582  	MOV	W2, W11
; tmpli end address is: 2 (W1)
0x0CF0	0x07FE45  	RCALL	_LongIntToStr
0x0CF2	0xBE054F  	POP.D	W10
0x0CF4	0x78064F  	POP	W12
; i start address is: 4 (W2)
0x0CF6	0xEF2004  	CLR	W2
0x0CF8	0xEF2000  	CLR	W0
0x0CFA	0x980700  	MOV	W0, [W14+0]
0x0CFC	0x78008C  	MOV	W12, W1
0x0CFE	0xB3C200  	MOV.B	#32, W0
0x0D00	0x785880  	MOV.B	W0, [W1++]
0x0D02	0xB3C200  	MOV.B	#32, W0
0x0D04	0x785880  	MOV.B	W0, [W1++]
0x0D06	0xB3C200  	MOV.B	#32, W0
0x0D08	0x785880  	MOV.B	W0, [W1++]
0x0D0A	0xB3C200  	MOV.B	#32, W0
0x0D0C	0x785880  	MOV.B	W0, [W1++]
0x0D0E	0xB3C200  	MOV.B	#32, W0
0x0D10	0x785880  	MOV.B	W0, [W1++]
0x0D12	0xB3C200  	MOV.B	#32, W0
0x0D14	0x785880  	MOV.B	W0, [W1++]
0x0D16	0xB3C200  	MOV.B	#32, W0
0x0D18	0x785880  	MOV.B	W0, [W1++]
0x0D1A	0xB3C200  	MOV.B	#32, W0
0x0D1C	0x785880  	MOV.B	W0, [W1++]
0x0D1E	0xB3C200  	MOV.B	#32, W0
0x0D20	0x785880  	MOV.B	W0, [W1++]
0x0D22	0xB3C200  	MOV.B	#32, W0
0x0D24	0x785880  	MOV.B	W0, [W1++]
0x0D26	0xB3C300  	MOV.B	#48, W0
0x0D28	0x785880  	MOV.B	W0, [W1++]
0x0D2A	0xEF2000  	CLR	W0
0x0D2C	0x785880  	MOV.B	W0, [W1++]
0x0D2E	0x781F82  	PUSH	W2
0x0D30	0x781F8C  	PUSH	W12
0x0D32	0xBE9F8A  	PUSH.D	W10
0x0D34	0xBE000A  	MOV.D	W10, W0
0x0D36	0x07FB5D  	RCALL	__Float2Longint
0x0D38	0xBE054F  	POP.D	W10
0x0D3A	0xE10060  	CP	W0, #0
0x0D3C	0xE18860  	CPB	W1, #0
0x0D3E	0xEF2000  	CLR	W0
0x0D40	0x3A0001  	BRA NZ	L__FloatToStr291
0x0D42	0xEEA000  	COM	W0
L__FloatToStr291:
0x0D44	0x980F70  	MOV	W0, [W14+30]
0x0D46	0xEF2004  	CLR	W2
0x0D48	0xEF2006  	CLR	W3
0x0D4A	0xBE000A  	MOV.D	W10, W0
0x0D4C	0x0700DD  	RCALL	__Compare_Le_Fp
0x0D4E	0xE00000  	CP0	W0
0x0D50	0xEF2000  	CLR	W0
0x0D52	0x3D0001  	BRA GE	L__FloatToStr292
0x0D54	0xEEA000  	COM	W0
L__FloatToStr292:
0x0D56	0x78064F  	POP	W12
0x0D58	0x78014F  	POP	W2
0x0D5A	0x9008FE  	MOV	[W14+30], W1
0x0D5C	0x608000  	AND	W1, W0, W0
0x0D5E	0xE20000  	CP0	W0
0x0D60	0x320005  	BRA Z	L__FloatToStr219
L__FloatToStr293:
; i end address is: 4 (W2)
0x0D62	0xB3C2D0  	MOV.B	#45, W0
0x0D64	0x784E00  	MOV.B	W0, [W12]
; i start address is: 2 (W1)
0x0D66	0x200011  	MOV	#1, W1
; i end address is: 2 (W1)
0x0D68	0x780101  	MOV	W1, W2
0x0D6A	0x370000  	BRA	L__FloatToStr184
L__FloatToStr219:
L__FloatToStr184:
; i start address is: 4 (W2)
; ch start address is: 2 (W1)
0x0D6C	0x9040AE  	MOV.B	[W14+2], W1
; i end address is: 4 (W2)
; ch end address is: 2 (W1)
L__FloatToStr187:
; ch start address is: 2 (W1)
; i start address is: 4 (W2)
0x0D6E	0xB3C200  	MOV.B	#32, W0
0x0D70	0xE10C00  	CP.B	W1, W0
0x0D72	0x3A0007  	BRA NZ	L__FloatToStr188
L__FloatToStr294:
; ch end address is: 2 (W1)
0x0D74	0x90000E  	MOV	[W14+0], W0
0x0D76	0x4000E1  	ADD	W0, #1, W1
0x0D78	0x980701  	MOV	W1, [W14+0]
0x0D7A	0x470062  	ADD	W14, #2, W0
0x0D7C	0x400001  	ADD	W0, W1, W0
; ch start address is: 2 (W1)
0x0D7E	0x784090  	MOV.B	[W0], W1
0x0D80	0x37FFF6  	BRA	L__FloatToStr187
L__FloatToStr188:
; ch end address is: 2 (W1)
0x0D82	0x780182  	MOV	W2, W3
L__FloatToStr192:
; i end address is: 4 (W2)
; i start address is: 6 (W3)
; ch start address is: 2 (W1)
0x0D84	0xE10C60  	CP.B	W1, #0
0x0D86	0x32000C  	BRA Z	L__FloatToStr193
L__FloatToStr295:
0x0D88	0x460003  	ADD	W12, W3, W0
0x0D8A	0x784801  	MOV.B	W1, [W0]
; ch end address is: 2 (W1)
0x0D8C	0x90000E  	MOV	[W14+0], W0
0x0D8E	0x4000E1  	ADD	W0, #1, W1
0x0D90	0x980701  	MOV	W1, [W14+0]
; i start address is: 4 (W2)
0x0D92	0x418161  	ADD	W3, #1, W2
; i end address is: 6 (W3)
0x0D94	0x470062  	ADD	W14, #2, W0
0x0D96	0x400001  	ADD	W0, W1, W0
; ch start address is: 0 (W0)
0x0D98	0x784010  	MOV.B	[W0], W0
0x0D9A	0x784080  	MOV.B	W0, W1
; i end address is: 4 (W2)
; ch end address is: 0 (W0)
0x0D9C	0x780182  	MOV	W2, W3
0x0D9E	0x37FFF2  	BRA	L__FloatToStr192
L__FloatToStr193:
; i start address is: 6 (W3)
0x0DA0	0x90085E  	MOV	[W14+26], W0
0x0DA2	0xE10060  	CP	W0, #0
0x0DA4	0xEF2002  	CLR	W1
0x0DA6	0x3A0001  	BRA NZ	L__FloatToStr296
0x0DA8	0xEEA002  	COM	W1
L__FloatToStr296:
0x0DAA	0xE11860  	CP	W3, #0
0x0DAC	0xEF2000  	CLR	W0
0x0DAE	0x3A0001  	BRA NZ	L__FloatToStr297
0x0DB0	0xEEA000  	COM	W0
L__FloatToStr297:
0x0DB2	0x608000  	AND	W1, W0, W0
0x0DB4	0x320006  	BRA Z	L__FloatToStr220
L__FloatToStr298:
0x0DB6	0x460083  	ADD	W12, W3, W1
0x0DB8	0xB3C300  	MOV.B	#48, W0
0x0DBA	0x784880  	MOV.B	W0, [W1]
; i start address is: 0 (W0)
0x0DBC	0x418061  	ADD	W3, #1, W0
; i end address is: 6 (W3)
0x0DBE	0x780100  	MOV	W0, W2
; i end address is: 0 (W0)
0x0DC0	0x370001  	BRA	L__FloatToStr197
L__FloatToStr220:
0x0DC2	0x780103  	MOV	W3, W2
L__FloatToStr197:
; i start address is: 4 (W2)
0x0DC4	0xE11061  	CP	W2, #1
0x0DC6	0xEF2002  	CLR	W1
0x0DC8	0x3A0001  	BRA NZ	L__FloatToStr299
0x0DCA	0xEEA002  	COM	W1
L__FloatToStr299:
0x0DCC	0x47007A  	ADD	W14, #26, W0
0x0DCE	0x608010  	AND	W1, [W0], W0
0x0DD0	0x320006  	BRA Z	L__FloatToStr221
L__FloatToStr300:
0x0DD2	0x460082  	ADD	W12, W2, W1
0x0DD4	0xB3C300  	MOV.B	#48, W0
0x0DD6	0x784880  	MOV.B	W0, [W1]
; i start address is: 0 (W0)
0x0DD8	0x410061  	ADD	W2, #1, W0
; i end address is: 4 (W2)
0x0DDA	0x780100  	MOV	W0, W2
; i end address is: 0 (W0)
0x0DDC	0x370000  	BRA	L__FloatToStr200
L__FloatToStr221:
L__FloatToStr200:
; i start address is: 4 (W2)
0x0DDE	0x460082  	ADD	W12, W2, W1
0x0DE0	0xB3C2E0  	MOV.B	#46, W0
0x0DE2	0x784880  	MOV.B	W0, [W1]
0x0DE4	0xEC2004  	INC	W2
0x0DE6	0x200060  	MOV	#6, W0
0x0DE8	0x980700  	MOV	W0, [W14+0]
; ch start address is: 2 (W1)
0x0DEA	0x9050CE  	MOV.B	[W14+20], W1
; i end address is: 4 (W2)
; ch end address is: 2 (W1)
L__FloatToStr203:
; ch start address is: 2 (W1)
; i start address is: 4 (W2)
0x0DEC	0xE10C60  	CP.B	W1, #0
0x0DEE	0x320011  	BRA Z	L__FloatToStr204
L__FloatToStr301:
0x0DF0	0xB3C200  	MOV.B	#32, W0
0x0DF2	0xE10C00  	CP.B	W1, W0
0x0DF4	0x3A0002  	BRA NZ	L__FloatToStr222
L__FloatToStr302:
0x0DF6	0xB3C301  	MOV.B	#48, W1
; ch end address is: 2 (W1)
0x0DF8	0x370000  	BRA	L__FloatToStr208
L__FloatToStr222:
L__FloatToStr208:
; ch start address is: 2 (W1)
0x0DFA	0x460002  	ADD	W12, W2, W0
0x0DFC	0x784801  	MOV.B	W1, [W0]
; ch end address is: 2 (W1)
0x0DFE	0x90000E  	MOV	[W14+0], W0
0x0E00	0x4000E1  	ADD	W0, #1, W1
0x0E02	0x980701  	MOV	W1, [W14+0]
; i start address is: 6 (W3)
0x0E04	0x4101E1  	ADD	W2, #1, W3
; i end address is: 4 (W2)
0x0E06	0x47006E  	ADD	W14, #14, W0
0x0E08	0x400001  	ADD	W0, W1, W0
; ch start address is: 0 (W0)
0x0E0A	0x784010  	MOV.B	[W0], W0
0x0E0C	0x780103  	MOV	W3, W2
; i end address is: 6 (W3)
; ch end address is: 0 (W0)
0x0E0E	0x784080  	MOV.B	W0, W1
0x0E10	0x37FFED  	BRA	L__FloatToStr203
L__FloatToStr204:
; i start address is: 4 (W2)
0x0E12	0x460082  	ADD	W12, W2, W1
; i end address is: 4 (W2)
0x0E14	0xEF2000  	CLR	W0
0x0E16	0x784880  	MOV.B	W0, [W1]
L_end_FloatToStr:
0x0E18	0xFA8000  	ULNK
0x0E1A	0x060000  	RETURN
; end of _FloatToStr
_LongIntToStr:
0x097C	0xFA0000  	LNK	#0
0x097E	0x200000  	MOV	#0, W0
0x0980	0x280001  	MOV	#32768, W1
0x0982	0xE15000  	CP	W10, W0
0x0984	0xE1D801  	CPB	W11, W1
0x0986	0x3A001A  	BRA NZ	L__LongIntToStr104
L__LongIntToStr262:
0x0988	0x78008C  	MOV	W12, W1
0x098A	0xB3C2D0  	MOV.B	#45, W0
0x098C	0x785880  	MOV.B	W0, [W1++]
0x098E	0xB3C320  	MOV.B	#50, W0
0x0990	0x785880  	MOV.B	W0, [W1++]
0x0992	0xB3C310  	MOV.B	#49, W0
0x0994	0x785880  	MOV.B	W0, [W1++]
0x0996	0xB3C340  	MOV.B	#52, W0
0x0998	0x785880  	MOV.B	W0, [W1++]
0x099A	0xB3C370  	MOV.B	#55, W0
0x099C	0x785880  	MOV.B	W0, [W1++]
0x099E	0xB3C340  	MOV.B	#52, W0
0x09A0	0x785880  	MOV.B	W0, [W1++]
0x09A2	0xB3C380  	MOV.B	#56, W0
0x09A4	0x785880  	MOV.B	W0, [W1++]
0x09A6	0xB3C330  	MOV.B	#51, W0
0x09A8	0x785880  	MOV.B	W0, [W1++]
0x09AA	0xB3C360  	MOV.B	#54, W0
0x09AC	0x785880  	MOV.B	W0, [W1++]
0x09AE	0xB3C340  	MOV.B	#52, W0
0x09B0	0x785880  	MOV.B	W0, [W1++]
0x09B2	0xB3C380  	MOV.B	#56, W0
0x09B4	0x785880  	MOV.B	W0, [W1++]
0x09B6	0xEF2000  	CLR	W0
0x09B8	0x785880  	MOV.B	W0, [W1++]
0x09BA	0x370047  	BRA	L_end__LongIntToStr
L__LongIntToStr104:
; negative start address is: 8 (W4)
0x09BC	0xEF2008  	CLR	W4
0x09BE	0xE15060  	CP	W10, #0
0x09C0	0xE1D860  	CPB	W11, #0
0x09C2	0x3D0005  	BRA GE	L__LongIntToStr214
L__LongIntToStr263:
0x09C4	0x2FFFF4  	MOV	#65535, W4
0x09C6	0x150060  	SUBR	W10, #0, W0
0x09C8	0x1D80E0  	SUBBR	W11, #0, W1
0x09CA	0xBE0500  	MOV.D	W0, W10
; negative end address is: 8 (W4)
0x09CC	0x370000  	BRA	L__LongIntToStr107
L__LongIntToStr214:
L__LongIntToStr107:
; negative start address is: 8 (W4)
0x09CE	0x78008C  	MOV	W12, W1
0x09D0	0xB3C200  	MOV.B	#32, W0
0x09D2	0x785880  	MOV.B	W0, [W1++]
0x09D4	0xB3C200  	MOV.B	#32, W0
0x09D6	0x785880  	MOV.B	W0, [W1++]
0x09D8	0xB3C200  	MOV.B	#32, W0
0x09DA	0x785880  	MOV.B	W0, [W1++]
0x09DC	0xB3C200  	MOV.B	#32, W0
0x09DE	0x785880  	MOV.B	W0, [W1++]
0x09E0	0xB3C200  	MOV.B	#32, W0
0x09E2	0x785880  	MOV.B	W0, [W1++]
0x09E4	0xB3C200  	MOV.B	#32, W0
0x09E6	0x785880  	MOV.B	W0, [W1++]
0x09E8	0xB3C200  	MOV.B	#32, W0
0x09EA	0x785880  	MOV.B	W0, [W1++]
0x09EC	0xB3C200  	MOV.B	#32, W0
0x09EE	0x785880  	MOV.B	W0, [W1++]
0x09F0	0xB3C200  	MOV.B	#32, W0
0x09F2	0x785880  	MOV.B	W0, [W1++]
0x09F4	0xB3C200  	MOV.B	#32, W0
0x09F6	0x785880  	MOV.B	W0, [W1++]
0x09F8	0xB3C300  	MOV.B	#48, W0
0x09FA	0x785880  	MOV.B	W0, [W1++]
0x09FC	0xEF2000  	CLR	W0
0x09FE	0x785880  	MOV.B	W0, [W1++]
; ptr start address is: 10 (W5)
0x0A00	0x4602EA  	ADD	W12, #10, W5
; negative end address is: 8 (W4)
; ptr end address is: 10 (W5)
L__LongIntToStr110:
; ptr start address is: 10 (W5)
; negative start address is: 8 (W4)
0x0A02	0xE15060  	CP	W10, #0
0x0A04	0xE1D860  	CPB	W11, #0
0x0A06	0x32001D  	BRA Z	L__LongIntToStr111
L__LongIntToStr264:
0x0A08	0xBE9F84  	PUSH.D	W4
0x0A0A	0x781F8C  	PUSH	W12
0x0A0C	0xBE9F8A  	PUSH.D	W10
0x0A0E	0x2000A2  	MOV	#10, W2
0x0A10	0x200003  	MOV	#0, W3
0x0A12	0xBE000A  	MOV.D	W10, W0
0x0A14	0xEB8200  	SETM	W4
0x0A16	0x07FF46  	RCALL	__Modulus_32x32
0x0A18	0xBE054F  	POP.D	W10
0x0A1A	0x78064F  	POP	W12
0x0A1C	0xBE024F  	POP.D	W4
0x0A1E	0x200302  	MOV	#48, W2
0x0A20	0x200003  	MOV	#0, W3
0x0A22	0x400002  	ADD	W0, W2, W0
0x0A24	0x784A80  	MOV.B	W0, [W5]
0x0A26	0xBE9F84  	PUSH.D	W4
0x0A28	0x781F8C  	PUSH	W12
0x0A2A	0xBE9F8A  	PUSH.D	W10
0x0A2C	0x2000A2  	MOV	#10, W2
0x0A2E	0x200003  	MOV	#0, W3
0x0A30	0xBE000A  	MOV.D	W10, W0
0x0A32	0xEB8200  	SETM	W4
0x0A34	0x07FF6F  	RCALL	__Divide_32x32
0x0A36	0xBE054F  	POP.D	W10
0x0A38	0x78064F  	POP	W12
0x0A3A	0xBE024F  	POP.D	W4
0x0A3C	0xBE0500  	MOV.D	W0, W10
0x0A3E	0xED200A  	DEC	W5
0x0A40	0x37FFE0  	BRA	L__LongIntToStr110
L__LongIntToStr111:
0x0A42	0xE20008  	CP0	W4
0x0A44	0x320002  	BRA Z	L__LongIntToStr115
L__LongIntToStr265:
; negative end address is: 8 (W4)
0x0A46	0xB3C2D0  	MOV.B	#45, W0
0x0A48	0x784A80  	MOV.B	W0, [W5]
; ptr end address is: 10 (W5)
L__LongIntToStr115:
L_end__LongIntToStr:
L_end_LongIntToStr:
0x0A4A	0xFA8000  	ULNK
0x0A4C	0x060000  	RETURN
; end of _LongIntToStr
__Float2Longint:
0x03F2	0xFA0000  	LNK	#0
0x03F4	0x070002  	RCALL	Float2Longint__fixsfsi
0x03F6	0x000000040466  	GOTO	the_end__Float2Longint
Float2Longint__fixsfsi:
0x03FA	0xBE8100  	MOV.D	W0, W2
0x03FC	0x07001F  	RCALL	Float2Longint__funpack
0x03FE	0xA77004  	BTSC	W4, #7
0x0400	0xA1F003  	BCLR	W3, #15
0x0402	0xB10965  	SUB	#150, W5
0x0404	0x320016  	BRA Z	Float2Longint_setsign
0x0406	0x35000D  	BRA LT	Float2Longint_shiftright
0x0408	0xE12868  	CP	W5, #8
0x040A	0x350006  	BRA LT	Float2Longint_shiftleft
0x040C	0x2FFFF0  	MOV	#65535, W0
0x040E	0x27FFF1  	MOV	#32767, W1
0x0410	0xE20006  	CP0	W3
0x0412	0x3B0013  	BRA NN	Float2Longint_exit
0x0414	0x280001  	MOV	#32768, W1
0x0416	0x050000  	RETLW	#0, W0
Float2Longint_shiftleft:
0x0418	0x400000  	ADD	W0, W0, W0
0x041A	0x488081  	ADDC	W1, W1, W1
0x041C	0xE90285  	DEC	W5, W5
0x041E	0x3AFFFC  	BRA NZ	Float2Longint_shiftleft
0x0420	0x370008  	BRA	Float2Longint_setsign
Float2Longint_shiftright:
0x0422	0x428FF8  	ADD	W5, #24, [W15]
0x0424	0x3C0002  	BRA GT	Float2Longint_shiftrightloop
0x0426	0xEB0080  	CLR	W1
0x0428	0x050000  	RETLW	#0, W0
Float2Longint_shiftrightloop:
0x042A	0xD10081  	LSR	W1, W1
0x042C	0xD38000  	RRC	W0, W0
0x042E	0xE80285  	INC	W5, W5
0x0430	0x3AFFFC  	BRA NZ	Float2Longint_shiftrightloop
Float2Longint_setsign:
0x0432	0xE20006  	CP0	W3
0x0434	0x3B0002  	BRA NN	Float2Longint_exit
0x0436	0x100060  	SUBR	W0, #0, W0
0x0438	0x1880E0  	SUBBR	W1, #0, W1
Float2Longint_exit:
0x043A	0x060000  	RETURN
Float2Longint__funpack:
0x043C	0xDE0AC7  	LSR	W1, #7, W5
0x043E	0xB207F1  	AND	#127, W1
0x0440	0xB20FF5  	AND	#255, W5
0x0442	0x320008  	BRA Z	Float2Longint_zeroorsub
0x0444	0x42CFE1  	ADD.B	W5, #1, [W15]
0x0446	0x320002  	BRA Z	Float2Longint_nanorinf
Float2Longint_finitereturn:
0x0448	0xA8E002  	BSET	W1, #7
0x044A	0x050024  	RETLW	#2, W4
Float2Longint_nanorinf:
0x044C	0x700F81  	IOR	W0, W1, [W15]
0x044E	0x320001  	BRA Z	Float2Longint_infinite
0x0450	0x050804  	RETLW	#128, W4
Float2Longint_infinite:
0x0452	0x050044  	RETLW	#4, W4
Float2Longint_zeroorsub:
0x0454	0x700F81  	IOR	W0, W1, [W15]
0x0456	0x3A0002  	BRA NZ	Float2Longint_subnormal
0x0458	0x050014  	RETLW	#1, W4
Float2Longint_normalize:
0x045A	0xE90285  	DEC	W5, W5
Float2Longint_subnormal:
0x045C	0x400000  	ADD	W0, W0, W0
0x045E	0x48C081  	ADDC.B	W1, W1, W1
0x0460	0x3BFFFC  	BRA NN	Float2Longint_normalize
0x0462	0xA8E002  	BSET	W1, #7
0x0464	0x050024  	RETLW	#2, W4
the_end__Float2Longint:
L_end__Float2Longint:
0x0466	0xFA8000  	ULNK
0x0468	0x060000  	RETURN
; end of __Float2Longint
__Compare_Le_Fp:
0x0F08	0xFA0000  	LNK	#0
0x0F0A	0x200014  	MOV	#1, W4
0x0F0C	0x07F97E  	RCALL	__Compare_Fp
L_end__Compare_Le_Fp:
0x0F0E	0xFA8000  	ULNK
0x0F10	0x060000  	RETURN
; end of __Compare_Le_Fp
__Compare_Fp:
0x020A	0xFA0000  	LNK	#0
0x020C	0x070002  	RCALL	CompareFp__fcompare
0x020E	0x000000040278  	GOTO	the_end__Compare_Fp
CompareFp__fcompare:
0x0212	0x781F84  	MOV	W4, [W15++]
0x0214	0x070014  	RCALL	CompareFp__funpack2
0x0216	0x78004F  	MOV	[--W15], W0
0x0218	0x330011  	BRA N	CompareFp_exit
0x021A	0x2FFFF0  	MOV	#65535, W0
0x021C	0x6C8F83  	XOR	W9, W3, [W15]
0x021E	0x3B0006  	BRA NN	CompareFp_comparemag
0x0220	0x650504  	AND	W10, W4, W10
0x0222	0xA7000A  	BTSC	W10, #0
0x0224	0x370008  	BRA	CompareFp_returnEqual
0x0226	0xA6F009  	BTSS	W9, #15
0x0228	0x200010  	MOV	#1, W0
0x022A	0x370008  	BRA	CompareFp_exit
CompareFp_comparemag:
0x022C	0x540F82  	SUB	W8, W2, [W15]
0x022E	0x5C8F83  	SUBB	W9, W3, [W15]
0x0230	0x390003  	BRA LTU	CompareFp_adjust
0x0232	0x200010  	MOV	#1, W0
0x0234	0x3E0001  	BRA GTU	CompareFp_adjust
CompareFp_returnEqual:
0x0236	0x200000  	MOV	#0, W0
CompareFp_adjust:
0x0238	0xA7F009  	BTSC	W9, #15
0x023A	0xEA0000  	NEG	W0, W0
CompareFp_exit:
0x023C	0x060000  	RETURN
CompareFp__funpack2:
0x023E	0xBE8400  	MOV.D	W0, W8
0x0240	0x070006  	RCALL	CompareFp__funpack
0x0242	0xBE8300  	MOV.D	W0, W6
0x0244	0xBE8504  	MOV.D	W4, W10
0x0246	0xBE8002  	MOV.D	W2, W0
0x0248	0x070002  	RCALL	CompareFp__funpack
0x024A	0x754F84  	IOR.B	W10, W4, [W15]
0x024C	0x060000  	RETURN
CompareFp__funpack:
0x024E	0xDE0AC7  	LSR	W1, #7, W5
0x0250	0xB207F1  	AND	#127, W1
0x0252	0xB20FF5  	AND	#255, W5
0x0254	0x320008  	BRA Z	CompareFp_zeroorsub
0x0256	0x42CFE1  	ADD.B	W5, #1, [W15]
0x0258	0x320002  	BRA Z	CompareFp_nanorinf
CompareFp_finitereturn:
0x025A	0xA8E002  	BSET	W1, #7
0x025C	0x050024  	RETLW	#2, W4
CompareFp_nanorinf:
0x025E	0x700F81  	IOR	W0, W1, [W15]
0x0260	0x320001  	BRA Z	CompareFp_infinite
0x0262	0x050804  	RETLW	#128, W4
CompareFp_infinite:
0x0264	0x050044  	RETLW	#4, W4
CompareFp_zeroorsub:
0x0266	0x700F81  	IOR	W0, W1, [W15]
0x0268	0x3A0002  	BRA NZ	CompareFp_subnormal
0x026A	0x050014  	RETLW	#1, W4
CompareFp_normalize:
0x026C	0xE90285  	DEC	W5, W5
CompareFp_subnormal:
0x026E	0x400000  	ADD	W0, W0, W0
0x0270	0x48C081  	ADDC.B	W1, W1, W1
0x0272	0x3BFFFC  	BRA NN	CompareFp_normalize
0x0274	0xA8E002  	BSET	W1, #7
0x0276	0x050024  	RETLW	#2, W4
the_end__Compare_Fp:
L_end__Compare_Fp:
0x0278	0xFA8000  	ULNK
0x027A	0x060000  	RETURN
; end of __Compare_Fp
__Long2Float:
0x046A	0xFA0000  	LNK	#0
0x046C	0x070002  	RCALL	LL_intro_Long2Float
0x046E	0x00000004051C  	GOTO	the_end__Long2Float
LL_intro_Long2Float:
0x0472	0xE20004  	CP0	W2
0x0474	0x3A0006  	BRA NZ	Longint2Float__floatsisf
Longword2Float__floatuisf:
0x0476	0xEB0500  	CLR	W10
0x0478	0xE20002  	CP0	W1
0x047A	0x3E000F  	BRA GTU	Long2Float_notspecial
0x047C	0xE20000  	CP0	W0
0x047E	0x320027  	BRA Z	Long2Float_return0
0x0480	0x37000C  	BRA	Long2Float_notspecial
Longint2Float__floatsisf:
0x0482	0x8800A1  	MOV	W1, W10
0x0484	0xE20002  	CP0	W1
0x0486	0x350004  	BRA LT	Longint2Float_negative
0x0488	0x3C0008  	BRA GT	Long2Float_notspecial
0x048A	0xE20000  	CP0	W0
0x048C	0x320020  	BRA Z	Long2Float_return0
0x048E	0x370005  	BRA	Long2Float_notspecial
Longint2Float_negative:
0x0490	0x100060  	SUBR	W0, #0, W0
0x0492	0x1880E0  	SUBBR	W1, #0, W1
0x0494	0x3B0002  	BRA NN	Long2Float_notspecial
0x0496	0x2CF001  	MOV	#52992, W1
0x0498	0x37001A  	BRA	Long2Float_return0
Long2Float_notspecial:
0x049A	0xBE8400  	MOV.D	W0, W8
0x049C	0xB81160  	MUL.UU	W2, #0, W2
0x049E	0x20096B  	MOV	#150, W11
0x04A0	0xCF8209  	FF1L	W9, W4
0x04A2	0x390002  	BRA NC	Long2Float_fixshift
0x04A4	0xCF8208  	FF1L	W8, W4
0x04A6	0xB04104  	ADD.B	#16, W4
Long2Float_fixshift:
0x04A8	0x524269  	SUB.B	W4, #9, W4
0x04AA	0x32000E  	BRA Z	Long2Float_round
0x04AC	0x3B0008  	BRA NN	Long2Float_shiftleft
Long2Float_shiftright:
0x04AE	0x718182  	IOR	W3, W2, W3
0x04B0	0x640161  	AND	W8, #1, W2
0x04B2	0xD10489  	LSR	W9, W9
0x04B4	0xD38408  	RRC	W8, W8
0x04B6	0xE8058B  	INC	W11, W11
0x04B8	0xE84204  	INC.B	W4, W4
0x04BA	0x3AFFF9  	BRA NZ	Long2Float_shiftright
0x04BC	0x370005  	BRA	Long2Float_round
Long2Float_shiftleft:
0x04BE	0x440408  	ADD	W8, W8, W8
0x04C0	0x4C8489  	ADDC	W9, W9, W9
0x04C2	0xE9058B  	DEC	W11, W11
0x04C4	0xE94204  	DEC.B	W4, W4
0x04C6	0x3AFFFB  	BRA NZ	Long2Float_shiftleft
Long2Float_round:
0x04C8	0x070003  	RCALL	Long2Float__fpack
0x04CA	0xA7F00A  	BTSC	W10, #15
0x04CC	0xA8E003  	BSET	W1, #15
Long2Float_return0:
0x04CE	0x060000  	RETURN
Long2Float__fpack:
0x04D0	0x200081  	MOV	#8, W1
0x04D2	0x558061  	SUB	W11, #1, W0
0x04D4	0x3D000B  	BRA GE	Long2Float_notsubnormal
0x04D6	0x20000B  	MOV	#0, W11
0x04D8	0x2FFE61  	MOV	#65510, W1
0x04DA	0xE10001  	CP	W0, W1
0x04DC	0x34001D  	BRA LE	Long2Float_zerosig
Long2Float_subnormal:
0x04DE	0x718182  	IOR	W3, W2, W3
0x04E0	0x640161  	AND	W8, #1, W2
0x04E2	0xD10489  	LSR	W9, W9
0x04E4	0xD38408  	RRC	W8, W8
0x04E6	0xE80000  	INC	W0, W0
0x04E8	0x3AFFFA  	BRA NZ	Long2Float_subnormal
0x04EA	0x200071  	MOV	#7, W1
Long2Float_notsubnormal:
0x04EC	0x640061  	AND	W8, #1, W0
0x04EE	0x700003  	IOR	W0, W3, W0
0x04F0	0x600002  	AND	W0, W2, W0
0x04F2	0x320009  	BRA Z	Long2Float_packupandgo
0x04F4	0x440461  	ADD	W8, #1, W8
0x04F6	0x4C84E0  	ADDC	W9, #0, W9
0x04F8	0xA58809  	BTST.Z	W9, W1
0x04FA	0x320005  	BRA Z	Long2Float_packupandgo
0x04FC	0xE8058B  	INC	W11, W11
0x04FE	0xE10868  	CP	W1, #8
0x0500	0x3A0002  	BRA NZ	Long2Float_packupandgo
0x0502	0xD10489  	LSR	W9, W9
0x0504	0xD38408  	RRC	W8, W8
Long2Float_packupandgo:
0x0506	0x200FF2  	MOV	#255, W2
0x0508	0xE15802  	CP	W11, W2
0x050A	0x3D0005  	BRA GE	Long2Float_overflow
0x050C	0xDD5DC7  	SL	W11, #7, W11
0x050E	0xB207F9  	AND	#127, W9
0x0510	0x758089  	IOR	W11, W9, W1
0x0512	0x880008  	MOV	W8, W0
0x0514	0x060000  	RETURN
Long2Float_overflow:
0x0516	0x27F80B  	MOV	#32640, W11
Long2Float_zerosig:
0x0518	0x88001B  	MOV	W11, W1
0x051A	0x050000  	RETLW	#0, W0
the_end__Long2Float:
L_end__Long2Float:
0x051C	0xFA8000  	ULNK
0x051E	0x060000  	RETURN
; end of __Long2Float
__Sub_FP:
0x03E8	0xFA0000  	LNK	#0
0x03EA	0xAAE007  	BTG	W3, #15
0x03EC	0x07FF47  	RCALL	__AddSub_FP
L_end__Sub_FP:
0x03EE	0xFA8000  	ULNK
0x03F0	0x060000  	RETURN
; end of __Sub_FP
__AddSub_FP:
0x027C	0xFA0000  	LNK	#0
0x027E	0x070002  	RCALL	AddSubFP__addsf3
0x0280	0x0000000403E4  	GOTO	the_end__AddSub_FP
AddSubFP__addsf3:
0x0284	0xBE9F88  	MOV.D	W8, [W15++]
0x0286	0xBE9F8A  	MOV.D	W10, [W15++]
0x0288	0x781F8C  	MOV	W12, [W15++]
0x028A	0x070059  	RCALL	AddSubFP__funpack2
0x028C	0x330060  	BRA N	AddSubFP__fPropagateNaN
0x028E	0xE15064  	CP	W10, #4
0x0290	0x32004F  	BRA Z	AddSubFP_aisinfinite
AddSubFP_checkspecialb:
0x0292	0xE12064  	CP	W4, #4
0x0294	0x320052  	BRA Z	AddSubFP_return2_3
0x0296	0x6C8203  	XOR	W9, W3, W4
0x0298	0x3B0007  	BRA NN	AddSubFP_getsign
0x029A	0xD00509  	SL	W9, W10
0x029C	0xD00603  	SL	W3, W12
0x029E	0x540F82  	SUB	W8, W2, [W15]
0x02A0	0x5D060C  	SUBB	W10, W12, W12
0x02A2	0x390002  	BRA NC	AddSubFP_getsign
0x02A4	0x320002  	BRA Z	AddSubFP_gotsign
0x02A6	0x880039  	MOV	W9, W3
AddSubFP_getsign:
0x02A8	0x8800C3  	MOV	W3, W12
AddSubFP_gotsign:
0x02AA	0x558285  	SUB	W11, W5, W5
0x02AC	0x3D0004  	BRA GE	AddSubFP_expcanonical
0x02AE	0xFD0300  	EXCH	W0, W6
0x02B0	0xFD0381  	EXCH	W1, W7
0x02B2	0xEA0285  	NEG	W5, W5
0x02B4	0x42858B  	ADD	W5, W11, W11
AddSubFP_expcanonical:
0x02B6	0x720F84  	IOR	W4, W4, [W15]
0x02B8	0x3B0002  	BRA NN	AddSubFP_nonegate
0x02BA	0x100060  	SUBR	W0, #0, W0
0x02BC	0x1880E0  	SUBBR	W1, #0, W1
AddSubFP_nonegate:
0x02BE	0xB81160  	MUL.UU	W2, #0, W2
0x02C0	0xEB0500  	CLR	W10
0x02C2	0xE1287A  	CP	W5, #26
0x02C4	0x39000A  	BRA NC	AddSubFP_aligniter
0x02C6	0x880006  	MOV	W6, W0
0x02C8	0xDD5DC7  	SL	W11, #7, W11
0x02CA	0xB207F7  	AND	#127, W7
0x02CC	0x758087  	IOR	W11, W7, W1
0x02CE	0x37002D  	BRA	AddSubFP_signoff
AddSubFP_align:
0x02D0	0x718182  	IOR	W3, W2, W3
0x02D2	0x88002A  	MOV	W10, W2
0x02D4	0x600561  	AND	W0, #1, W10
0x02D6	0xD18081  	ASR	W1, W1
0x02D8	0xD38000  	RRC	W0, W0
AddSubFP_aligniter:
0x02DA	0xE90285  	DEC	W5, W5
0x02DC	0x3BFFF9  	BRA NN	AddSubFP_align
AddSubFP_aligned:
0x02DE	0x400406  	ADD	W0, W6, W8
0x02E0	0x488487  	ADDC	W1, W7, W9
0x02E2	0x3B0002  	BRA NN	AddSubFP_normalizesum
0x02E4	0x140460  	SUBR	W8, #0, W8
0x02E6	0x1C84E0  	SUBBR	W9, #0, W9
AddSubFP_normalizesum:
0x02E8	0xA38809  	BTST.Z	W9, #8
0x02EA	0x320007  	BRA Z	AddSubFP_checknormal
0x02EC	0x71818A  	IOR	W3, W10, W3
0x02EE	0x718182  	IOR	W3, W2, W3
0x02F0	0x640161  	AND	W8, #1, W2
0x02F2	0xD10489  	LSR	W9, W9
0x02F4	0xD38408  	RRC	W8, W8
0x02F6	0xE8058B  	INC	W11, W11
0x02F8	0x370017  	BRA	AddSubFP_round
AddSubFP_checknormal:
0x02FA	0xA37809  	BTST.Z	W9, #7
0x02FC	0x3A0013  	BRA NZ	AddSubFP_discardguard
AddSubFP_underflow:
0x02FE	0xE20016  	CP0	W11
0x0300	0x340013  	BRA LE	AddSubFP_round
0x0302	0xE9058B  	DEC	W11, W11
0x0304	0x440408  	ADD	W8, W8, W8
0x0306	0x4C8489  	ADDC	W9, W9, W9
0x0308	0x74440A  	IOR.B	W8, W10, W8
0x030A	0xA37809  	BTST.Z	W9, #7
0x030C	0x3A000D  	BRA NZ	AddSubFP_round
AddSubFP_normalizeloop:
0x030E	0xE20016  	CP0	W11
0x0310	0x340007  	BRA LE	AddSubFP_normalizeexit
0x0312	0xE9058B  	DEC	W11, W11
0x0314	0x440408  	ADD	W8, W8, W8
0x0316	0x4C8489  	ADDC	W9, W9, W9
0x0318	0x3A0001  	BRA NZ	AddSubFP_normalizetest
0x031A	0x20000B  	MOV	#0, W11
AddSubFP_normalizetest:
0x031C	0xA37809  	BTST.Z	W9, #7
0x031E	0x32FFF7  	BRA Z	AddSubFP_normalizeloop
AddSubFP_normalizeexit:
0x0320	0xEB0100  	CLR	W2
0x0322	0x370002  	BRA	AddSubFP_round
AddSubFP_discardguard:
0x0324	0x718182  	IOR	W3, W2, W3
0x0326	0x88002A  	MOV	W10, W2
AddSubFP_round:
0x0328	0x070022  	RCALL	AddSubFP__fpack
AddSubFP_signoff:
0x032A	0xA7F00C  	BTSC	W12, #15
0x032C	0xA8E003  	BSET	W1, #15
0x032E	0x370018  	BRA	AddSubFP__fbopExit
AddSubFP_aisinfinite:
0x0330	0xE12064  	CP	W4, #4
0x0332	0x3A0002  	BRA NZ	AddSubFP_return8_3
0x0334	0x6C8F83  	XOR	W9, W3, [W15]
0x0336	0x330018  	BRA N	AddSubFP__fbopReturnNaN
AddSubFP_return8_3:
0x0338	0xBE8108  	MOV.D	W8, W2
AddSubFP_return2_3:
0x033A	0xBE8002  	MOV.D	W2, W0
0x033C	0x370011  	BRA	AddSubFP__fbopExit
AddSubFP__funpack2:
0x033E	0xBE8400  	MOV.D	W0, W8
0x0340	0x07003C  	RCALL	AddSubFP__funpack
0x0342	0xBE8300  	MOV.D	W0, W6
0x0344	0xBE8504  	MOV.D	W4, W10
0x0346	0xBE8002  	MOV.D	W2, W0
0x0348	0x070038  	RCALL	AddSubFP__funpack
0x034A	0x754F84  	IOR.B	W10, W4, [W15]
0x034C	0x060000  	RETURN
AddSubFP__fPropagateNaN:
0x034E	0xBE8002  	MOV.D	W2, W0
0x0350	0xE15064  	CP	W10, #4
0x0352	0x360005  	BRA LEU	AddSubFP_return0_1
0x0354	0xE12064  	CP	W4, #4
0x0356	0x360002  	BRA LEU	AddSubFP_return8_1
0x0358	0xA36809  	BTST.Z	W9, #6
0x035A	0x3A0001  	BRA NZ	AddSubFP_return0_1
AddSubFP_return8_1:
0x035C	0xBE8008  	MOV.D	W8, W0
AddSubFP_return0_1:
0x035E	0xA8C002  	BSET	W1, #6
AddSubFP__fbopExit:
0x0360	0x78064F  	MOV	[--W15], W12
0x0362	0xBE054F  	MOV.D	[--W15], W10
0x0364	0xBE044F  	MOV.D	[--W15], W8
0x0366	0x060000  	RETURN
AddSubFP__fbopReturnNaN:
0x0368	0x2FFFF0  	MOV	#65535, W0
0x036A	0x27FFF1  	MOV	#32767, W1
0x036C	0x37FFF9  	BRA	AddSubFP__fbopExit
AddSubFP__fpack:
0x036E	0x200081  	MOV	#8, W1
0x0370	0x558061  	SUB	W11, #1, W0
0x0372	0x3D000B  	BRA GE	AddSubFP_notsubnormal_1
0x0374	0x20000B  	MOV	#0, W11
0x0376	0x2FFE61  	MOV	#65510, W1
0x0378	0xE10001  	CP	W0, W1
0x037A	0x34001D  	BRA LE	AddSubFP_zerosig
AddSubFP_subnormal_1:
0x037C	0x718182  	IOR	W3, W2, W3
0x037E	0x640161  	AND	W8, #1, W2
0x0380	0xD10489  	LSR	W9, W9
0x0382	0xD38408  	RRC	W8, W8
0x0384	0xE80000  	INC	W0, W0
0x0386	0x3AFFFA  	BRA NZ	AddSubFP_subnormal_1
0x0388	0x200071  	MOV	#7, W1
AddSubFP_notsubnormal_1:
0x038A	0x640061  	AND	W8, #1, W0
0x038C	0x700003  	IOR	W0, W3, W0
0x038E	0x600002  	AND	W0, W2, W0
0x0390	0x320009  	BRA Z	AddSubFP_packupandgo
0x0392	0x440461  	ADD	W8, #1, W8
0x0394	0x4C84E0  	ADDC	W9, #0, W9
0x0396	0xA58809  	BTST.Z	W9, W1
0x0398	0x320005  	BRA Z	AddSubFP_packupandgo
0x039A	0xE8058B  	INC	W11, W11
0x039C	0xE10868  	CP	W1, #8
0x039E	0x3A0002  	BRA NZ	AddSubFP_packupandgo
0x03A0	0xD10489  	LSR	W9, W9
0x03A2	0xD38408  	RRC	W8, W8
AddSubFP_packupandgo:
0x03A4	0x200FF2  	MOV	#255, W2
0x03A6	0xE15802  	CP	W11, W2
0x03A8	0x3D0005  	BRA GE	AddSubFP_overflow
0x03AA	0xDD5DC7  	SL	W11, #7, W11
0x03AC	0xB207F9  	AND	#127, W9
0x03AE	0x758089  	IOR	W11, W9, W1
0x03B0	0x880008  	MOV	W8, W0
0x03B2	0x060000  	RETURN
AddSubFP_overflow:
0x03B4	0x27F80B  	MOV	#32640, W11
AddSubFP_zerosig:
0x03B6	0x88001B  	MOV	W11, W1
0x03B8	0x050000  	RETLW	#0, W0
AddSubFP__funpack:
0x03BA	0xDE0AC7  	LSR	W1, #7, W5
0x03BC	0xB207F1  	AND	#127, W1
0x03BE	0xB20FF5  	AND	#255, W5
0x03C0	0x320008  	BRA Z	AddSubFP_zeroorsub
0x03C2	0x42CFE1  	ADD.B	W5, #1, [W15]
0x03C4	0x320002  	BRA Z	AddSubFP_nanorinf
AddSubFP_finitereturn:
0x03C6	0xA8E002  	BSET	W1, #7
0x03C8	0x050024  	RETLW	#2, W4
AddSubFP_nanorinf:
0x03CA	0x700F81  	IOR	W0, W1, [W15]
0x03CC	0x320001  	BRA Z	AddSubFP_infinite
0x03CE	0x050804  	RETLW	#128, W4
AddSubFP_infinite:
0x03D0	0x050044  	RETLW	#4, W4
AddSubFP_zeroorsub:
0x03D2	0x700F81  	IOR	W0, W1, [W15]
0x03D4	0x3A0002  	BRA NZ	AddSubFP_subnormal_2
0x03D6	0x050014  	RETLW	#1, W4
AddSubFP_normalize:
0x03D8	0xE90285  	DEC	W5, W5
AddSubFP_subnormal_2:
0x03DA	0x400000  	ADD	W0, W0, W0
0x03DC	0x48C081  	ADDC.B	W1, W1, W1
0x03DE	0x3BFFFC  	BRA NN	AddSubFP_normalize
0x03E0	0xA8E002  	BSET	W1, #7
0x03E2	0x050024  	RETLW	#2, W4
the_end__AddSub_FP:
L_end__AddSub_FP:
0x03E4	0xFA8000  	ULNK
0x03E6	0x060000  	RETURN
; end of __AddSub_FP
__Mul_FP:
0x0520	0xFA0000  	LNK	#0
0x0522	0x070002  	RCALL	MulFP___mulsf3
0x0524	0x000000040636  	GOTO	the_end__Mul_FP
MulFP___mulsf3:
0x0528	0xBE9F88  	MOV.D	W8, [W15++]
0x052A	0xBE9F8A  	MOV.D	W10, [W15++]
0x052C	0x781F8C  	MOV	W12, [W15++]
0x052E	0x070030  	RCALL	MulFP__funpack2
0x0530	0x330037  	BRA N	MulFP__fPropagateNaN
0x0532	0x6C8603  	XOR	W9, W3, W12
0x0534	0xE15064  	CP	W10, #4
0x0536	0x320024  	BRA Z	MulFP_aisinfinite
0x0538	0xE12064  	CP	W4, #4
0x053A	0x320027  	BRA Z	MulFP_bisinfinite
0x053C	0xE15061  	CP	W10, #1
0x053E	0x320022  	BRA Z	MulFP_return8_1
0x0540	0xE12061  	CP	W4, #1
0x0542	0x320021  	BRA Z	MulFP_return2_1
0x0544	0x42858B  	ADD	W5, W11, W11
0x0546	0xB107EB  	SUB	#126, W11
0x0548	0xB83401  	MUL.UU	W6, W1, W8
0x054A	0xB83A00  	MUL.UU	W7, W0, W4
0x054C	0x420408  	ADD	W4, W8, W8
0x054E	0x4A8489  	ADDC	W5, W9, W9
0x0550	0xB83A01  	MUL.UU	W7, W1, W4
0x0552	0xB83000  	MUL.UU	W6, W0, W0
0x0554	0x408088  	ADD	W1, W8, W1
0x0556	0x4A0109  	ADDC	W4, W9, W2
0x0558	0x330004  	BRA N	MulFP_formsticky
0x055A	0x400000  	ADD	W0, W0, W0
0x055C	0x488081  	ADDC	W1, W1, W1
0x055E	0x490102  	ADDC	W2, W2, W2
0x0560	0xE9058B  	DEC	W11, W11
MulFP_formsticky:
0x0562	0xDD09C9  	SL	W1, #9, W3
0x0564	0x700183  	IOR	W0, W3, W3
0x0566	0x320001  	BRA Z	MulFP_formRandSig
0x0568	0x200013  	MOV	#1, W3
MulFP_formRandSig:
0x056A	0xDE14C8  	LSR	W2, #8, W9
0x056C	0xDD1448  	SL	W2, #8, W8
0x056E	0xDE0947  	LSR	W1, #7, W2
0x0570	0xB20012  	AND	#1, W2
0x0572	0xDE08C8  	LSR	W1, #8, W1
0x0574	0x708408  	IOR	W1, W8, W8
0x0576	0x070024  	RCALL	MulFP__fpack
MulFP_return0_1:
0x0578	0xA1F001  	BCLR	W1, #15
0x057A	0xA7F00C  	BTSC	W12, #15
0x057C	0xA8E003  	BSET	W1, #15
0x057E	0x370019  	BRA	MulFP__fbopExit
MulFP_aisinfinite:
0x0580	0xE12061  	CP	W4, #1
0x0582	0x32001B  	BRA Z	MulFP__fbopReturnNaN
MulFP_return8_1:
0x0584	0xBE8108  	MOV.D	W8, W2
MulFP_return2_1:
0x0586	0xBE8002  	MOV.D	W2, W0
0x0588	0x37FFF7  	BRA	MulFP_return0_1
MulFP_bisinfinite:
0x058A	0xE15061  	CP	W10, #1
0x058C	0x3AFFFC  	BRA NZ	MulFP_return2_1
0x058E	0x370015  	BRA	MulFP__fbopReturnNaN
MulFP__funpack2:
0x0590	0xBE8400  	MOV.D	W0, W8
0x0592	0x07003C  	RCALL	MulFP__funpack
0x0594	0xBE8300  	MOV.D	W0, W6
0x0596	0xBE8504  	MOV.D	W4, W10
0x0598	0xBE8002  	MOV.D	W2, W0
0x059A	0x070038  	RCALL	MulFP__funpack
0x059C	0x754F84  	IOR.B	W10, W4, [W15]
0x059E	0x060000  	RETURN
MulFP__fPropagateNaN:
0x05A0	0xBE8002  	MOV.D	W2, W0
0x05A2	0xE15064  	CP	W10, #4
0x05A4	0x360005  	BRA LEU	MulFP_return0_2
0x05A6	0xE12064  	CP	W4, #4
0x05A8	0x360002  	BRA LEU	MulFP_return8_2
0x05AA	0xA36809  	BTST.Z	W9, #6
0x05AC	0x3A0001  	BRA NZ	MulFP_return0_2
MulFP_return8_2:
0x05AE	0xBE8008  	MOV.D	W8, W0
MulFP_return0_2:
0x05B0	0xA8C002  	BSET	W1, #6
MulFP__fbopExit:
0x05B2	0x78064F  	MOV	[--W15], W12
0x05B4	0xBE054F  	MOV.D	[--W15], W10
0x05B6	0xBE044F  	MOV.D	[--W15], W8
0x05B8	0x060000  	RETURN
MulFP__fbopReturnNaN:
0x05BA	0x2FFFF0  	MOV	#65535, W0
0x05BC	0x27FFF1  	MOV	#32767, W1
0x05BE	0x37FFF9  	BRA	MulFP__fbopExit
MulFP__fpack:
0x05C0	0x200081  	MOV	#8, W1
0x05C2	0x558061  	SUB	W11, #1, W0
0x05C4	0x3D000B  	BRA GE	MulFP_notsubnormal
0x05C6	0x20000B  	MOV	#0, W11
0x05C8	0x2FFE61  	MOV	#65510, W1
0x05CA	0xE10001  	CP	W0, W1
0x05CC	0x34001D  	BRA LE	MulFP_zerosig
MulFP_subnormal1:
0x05CE	0x718182  	IOR	W3, W2, W3
0x05D0	0x640161  	AND	W8, #1, W2
0x05D2	0xD10489  	LSR	W9, W9
0x05D4	0xD38408  	RRC	W8, W8
0x05D6	0xE80000  	INC	W0, W0
0x05D8	0x3AFFFA  	BRA NZ	MulFP_subnormal1
0x05DA	0x200071  	MOV	#7, W1
MulFP_notsubnormal:
0x05DC	0x640061  	AND	W8, #1, W0
0x05DE	0x700003  	IOR	W0, W3, W0
0x05E0	0x600002  	AND	W0, W2, W0
0x05E2	0x320009  	BRA Z	MulFP_packupandgo
0x05E4	0x440461  	ADD	W8, #1, W8
0x05E6	0x4C84E0  	ADDC	W9, #0, W9
0x05E8	0xA58809  	BTST.Z	W9, W1
0x05EA	0x320005  	BRA Z	MulFP_packupandgo
0x05EC	0xE8058B  	INC	W11, W11
0x05EE	0xE10868  	CP	W1, #8
0x05F0	0x3A0002  	BRA NZ	MulFP_packupandgo
0x05F2	0xD10489  	LSR	W9, W9
0x05F4	0xD38408  	RRC	W8, W8
MulFP_packupandgo:
0x05F6	0x200FF2  	MOV	#255, W2
0x05F8	0xE15802  	CP	W11, W2
0x05FA	0x3D0005  	BRA GE	MulFP_overflow
0x05FC	0xDD5DC7  	SL	W11, #7, W11
0x05FE	0xB207F9  	AND	#127, W9
0x0600	0x758089  	IOR	W11, W9, W1
0x0602	0x880008  	MOV	W8, W0
0x0604	0x060000  	RETURN
MulFP_overflow:
0x0606	0x27F80B  	MOV	#32640, W11
MulFP_zerosig:
0x0608	0x88001B  	MOV	W11, W1
0x060A	0x050000  	RETLW	#0, W0
MulFP__funpack:
0x060C	0xDE0AC7  	LSR	W1, #7, W5
0x060E	0xB207F1  	AND	#127, W1
0x0610	0xB20FF5  	AND	#255, W5
0x0612	0x320008  	BRA Z	MulFP_zeroorsub
0x0614	0x42CFE1  	ADD.B	W5, #1, [W15]
0x0616	0x320002  	BRA Z	MulFP_nanorinf
MulFP_finitereturn:
0x0618	0xA8E002  	BSET	W1, #7
0x061A	0x050024  	RETLW	#2, W4
MulFP_nanorinf:
0x061C	0x700F81  	IOR	W0, W1, [W15]
0x061E	0x320001  	BRA Z	MulFP_infinite
0x0620	0x050804  	RETLW	#128, W4
MulFP_infinite:
0x0622	0x050044  	RETLW	#4, W4
MulFP_zeroorsub:
0x0624	0x700F81  	IOR	W0, W1, [W15]
0x0626	0x3A0002  	BRA NZ	MulFP_subnormal2
0x0628	0x050014  	RETLW	#1, W4
MulFP_normalize:
0x062A	0xE90285  	DEC	W5, W5
MulFP_subnormal2:
0x062C	0x400000  	ADD	W0, W0, W0
0x062E	0x48C081  	ADDC.B	W1, W1, W1
0x0630	0x3BFFFC  	BRA NN	MulFP_normalize
0x0632	0xA8E002  	BSET	W1, #7
0x0634	0x050024  	RETLW	#2, W4
the_end__Mul_FP:
L_end__Mul_FP:
0x0636	0xFA8000  	ULNK
0x0638	0x060000  	RETURN
; end of __Mul_FP
_LongWordToStr:
0x0E44	0xFA0002  	LNK	#2
0x0E46	0x78008C  	MOV	W12, W1
0x0E48	0xB3C200  	MOV.B	#32, W0
0x0E4A	0x785880  	MOV.B	W0, [W1++]
0x0E4C	0xB3C200  	MOV.B	#32, W0
0x0E4E	0x785880  	MOV.B	W0, [W1++]
0x0E50	0xB3C200  	MOV.B	#32, W0
0x0E52	0x785880  	MOV.B	W0, [W1++]
0x0E54	0xB3C200  	MOV.B	#32, W0
0x0E56	0x785880  	MOV.B	W0, [W1++]
0x0E58	0xB3C200  	MOV.B	#32, W0
0x0E5A	0x785880  	MOV.B	W0, [W1++]
0x0E5C	0xB3C200  	MOV.B	#32, W0
0x0E5E	0x785880  	MOV.B	W0, [W1++]
0x0E60	0xB3C200  	MOV.B	#32, W0
0x0E62	0x785880  	MOV.B	W0, [W1++]
0x0E64	0xB3C200  	MOV.B	#32, W0
0x0E66	0x785880  	MOV.B	W0, [W1++]
0x0E68	0xB3C200  	MOV.B	#32, W0
0x0E6A	0x785880  	MOV.B	W0, [W1++]
0x0E6C	0xB3C300  	MOV.B	#48, W0
0x0E6E	0x785880  	MOV.B	W0, [W1++]
0x0E70	0xEF2000  	CLR	W0
0x0E72	0x785880  	MOV.B	W0, [W1++]
0x0E74	0x470060  	ADD	W14, #0, W0
0x0E76	0x460869  	ADD	W12, #9, [W0]
L__LongWordToStr92:
0x0E78	0xE15060  	CP	W10, #0
0x0E7A	0xE1D860  	CPB	W11, #0
0x0E7C	0x32001A  	BRA Z	L__LongWordToStr93
L__LongWordToStr258:
0x0E7E	0x781F8C  	PUSH	W12
0x0E80	0xBE9F8A  	PUSH.D	W10
0x0E82	0x2000A2  	MOV	#10, W2
0x0E84	0x200003  	MOV	#0, W3
0x0E86	0xBE000A  	MOV.D	W10, W0
0x0E88	0xEB0200  	CLR	W4
0x0E8A	0x07FD0C  	RCALL	__Modulus_32x32
0x0E8C	0xBE054F  	POP.D	W10
0x0E8E	0x200302  	MOV	#48, W2
0x0E90	0x200003  	MOV	#0, W3
0x0E92	0x400102  	ADD	W0, W2, W2
0x0E94	0x90000E  	MOV	[W14+0], W0
0x0E96	0x784802  	MOV.B	W2, [W0]
0x0E98	0xBE9F8A  	PUSH.D	W10
0x0E9A	0x2000A2  	MOV	#10, W2
0x0E9C	0x200003  	MOV	#0, W3
0x0E9E	0xBE000A  	MOV.D	W10, W0
0x0EA0	0xEB0200  	CLR	W4
0x0EA2	0x07FD38  	RCALL	__Divide_32x32
0x0EA4	0xBE054F  	POP.D	W10
0x0EA6	0x78064F  	POP	W12
0x0EA8	0xBE0500  	MOV.D	W0, W10
0x0EAA	0x90008E  	MOV	[W14+0], W1
0x0EAC	0x470060  	ADD	W14, #0, W0
0x0EAE	0x508861  	SUB	W1, #1, [W0]
0x0EB0	0x37FFE3  	BRA	L__LongWordToStr92
L__LongWordToStr93:
L_end_LongWordToStr:
0x0EB2	0xFA8000  	ULNK
0x0EB4	0x060000  	RETURN
; end of _LongWordToStr
_WordToStr:
0x0C24	0xFA0000  	LNK	#0
0x0C26	0x78008B  	MOV	W11, W1
0x0C28	0xB3C200  	MOV.B	#32, W0
0x0C2A	0x785880  	MOV.B	W0, [W1++]
0x0C2C	0xB3C200  	MOV.B	#32, W0
0x0C2E	0x785880  	MOV.B	W0, [W1++]
0x0C30	0xB3C200  	MOV.B	#32, W0
0x0C32	0x785880  	MOV.B	W0, [W1++]
0x0C34	0xB3C200  	MOV.B	#32, W0
0x0C36	0x785880  	MOV.B	W0, [W1++]
0x0C38	0xB3C300  	MOV.B	#48, W0
0x0C3A	0x785880  	MOV.B	W0, [W1++]
0x0C3C	0xEF2000  	CLR	W0
0x0C3E	0x785880  	MOV.B	W0, [W1++]
; ptr start address is: 6 (W3)
0x0C40	0x4581E4  	ADD	W11, #4, W3
; ptr end address is: 6 (W3)
L__WordToStr20:
; ptr start address is: 6 (W3)
0x0C42	0xE15060  	CP	W10, #0
0x0C44	0x32000C  	BRA Z	L__WordToStr21
L__WordToStr234:
0x0C46	0x2000A2  	MOV	#10, W2
0x0C48	0x090011  	REPEAT	#17
0x0C4A	0xD88502  	DIV.U	W10, W2
0x0C4C	0x200300  	MOV	#48, W0
0x0C4E	0x408000  	ADD	W1, W0, W0
0x0C50	0x784980  	MOV.B	W0, [W3]
0x0C52	0x2000A2  	MOV	#10, W2
0x0C54	0x090011  	REPEAT	#17
0x0C56	0xD88502  	DIV.U	W10, W2
0x0C58	0x780500  	MOV	W0, W10
0x0C5A	0xED2006  	DEC	W3
; ptr end address is: 6 (W3)
0x0C5C	0x37FFF2  	BRA	L__WordToStr20
L__WordToStr21:
L_end_WordToStr:
0x0C5E	0xFA8000  	ULNK
0x0C60	0x060000  	RETURN
; end of _WordToStr
_UART_Write_Text:
0x07E6	0xFA0002  	LNK	#2
0x07E8	0xEF2000  	CLR	W0
0x07EA	0x984700  	MOV.B	W0, [W14+0]
0x07EC	0x78401A  	MOV.B	[W10], W0
; data_ start address is: 2 (W1)
0x07EE	0x784080  	MOV.B	W0, W1
; data_ end address is: 2 (W1)
0x07F0	0x784001  	MOV.B	W1, W0
L__UART_Write_Text77:
; data_ start address is: 0 (W0)
0x07F2	0xE10460  	CP.B	W0, #0
0x07F4	0x32000D  	BRA Z	L__UART_Write_Text78
L__UART_Write_Text152:
0x07F6	0x781F8A  	PUSH	W10
; data_ end address is: 0 (W0)
0x07F8	0xFB8500  	ZE	W0, W10
0x07FA	0x07FD02  	RCALL	_UART_Write
0x07FC	0x78054F  	POP	W10
0x07FE	0x90408E  	MOV.B	[W14+0], W1
0x0800	0x470060  	ADD	W14, #0, W0
0x0802	0x40C861  	ADD.B	W1, #1, [W0]
0x0804	0x470060  	ADD	W14, #0, W0
0x0806	0xFB8010  	ZE	[W0], W0
0x0808	0x450000  	ADD	W10, W0, W0
; data_ start address is: 2 (W1)
0x080A	0x784090  	MOV.B	[W0], W1
0x080C	0x784001  	MOV.B	W1, W0
; data_ end address is: 2 (W1)
0x080E	0x37FFF1  	BRA	L__UART_Write_Text77
L__UART_Write_Text78:
L_end_UART_Write_Text:
0x0810	0xFA8000  	ULNK
0x0812	0x060000  	RETURN
; end of _UART_Write_Text
_UART_Write:
0x0200	0xFA0000  	LNK	#0
0x0202	0x8041E0  	MOV	_UART_Wr_Ptr, W0
0x0204	0x010000  	CALL	W0
L_end_UART_Write:
0x0206	0xFA8000  	ULNK
0x0208	0x060000  	RETURN
; end of _UART_Write
_IntToStr:
0x0814	0xFA0000  	LNK	#0
0x0816	0x280000  	MOV	#32768, W0
0x0818	0xE15000  	CP	W10, W0
0x081A	0x3A0010  	BRA NZ	L__IntToStr62
L__IntToStr248:
0x081C	0x78008B  	MOV	W11, W1
0x081E	0xB3C2D0  	MOV.B	#45, W0
0x0820	0x785880  	MOV.B	W0, [W1++]
0x0822	0xB3C330  	MOV.B	#51, W0
0x0824	0x785880  	MOV.B	W0, [W1++]
0x0826	0xB3C320  	MOV.B	#50, W0
0x0828	0x785880  	MOV.B	W0, [W1++]
0x082A	0xB3C370  	MOV.B	#55, W0
0x082C	0x785880  	MOV.B	W0, [W1++]
0x082E	0xB3C360  	MOV.B	#54, W0
0x0830	0x785880  	MOV.B	W0, [W1++]
0x0832	0xB3C380  	MOV.B	#56, W0
0x0834	0x785880  	MOV.B	W0, [W1++]
0x0836	0xEF2000  	CLR	W0
0x0838	0x785880  	MOV.B	W0, [W1++]
0x083A	0x370029  	BRA	L_end__IntToStr
L__IntToStr62:
; negative start address is: 6 (W3)
0x083C	0xEF2006  	CLR	W3
0x083E	0xE15060  	CP	W10, #0
0x0840	0x3D0004  	BRA GE	L__IntToStr212
L__IntToStr249:
0x0842	0x2FFFF3  	MOV	#65535, W3
0x0844	0x150060  	SUBR	W10, #0, W0
0x0846	0x780500  	MOV	W0, W10
; negative end address is: 6 (W3)
0x0848	0x370000  	BRA	L__IntToStr65
L__IntToStr212:
L__IntToStr65:
; negative start address is: 6 (W3)
0x084A	0x78008B  	MOV	W11, W1
0x084C	0xB3C200  	MOV.B	#32, W0
0x084E	0x785880  	MOV.B	W0, [W1++]
0x0850	0xB3C200  	MOV.B	#32, W0
0x0852	0x785880  	MOV.B	W0, [W1++]
0x0854	0xB3C200  	MOV.B	#32, W0
0x0856	0x785880  	MOV.B	W0, [W1++]
0x0858	0xB3C200  	MOV.B	#32, W0
0x085A	0x785880  	MOV.B	W0, [W1++]
0x085C	0xB3C200  	MOV.B	#32, W0
0x085E	0x785880  	MOV.B	W0, [W1++]
0x0860	0xB3C300  	MOV.B	#48, W0
0x0862	0x785880  	MOV.B	W0, [W1++]
0x0864	0xEF2000  	CLR	W0
0x0866	0x785880  	MOV.B	W0, [W1++]
; ptr start address is: 8 (W4)
0x0868	0x458265  	ADD	W11, #5, W4
; negative end address is: 6 (W3)
; ptr end address is: 8 (W4)
L__IntToStr68:
; ptr start address is: 8 (W4)
; negative start address is: 6 (W3)
0x086A	0xE15060  	CP	W10, #0
0x086C	0x32000C  	BRA Z	L__IntToStr69
L__IntToStr250:
0x086E	0x2000A2  	MOV	#10, W2
0x0870	0x090011  	REPEAT	#17
0x0872	0xD80502  	DIV.S	W10, W2
0x0874	0x200300  	MOV	#48, W0
0x0876	0x408000  	ADD	W1, W0, W0
0x0878	0x784A00  	MOV.B	W0, [W4]
0x087A	0x2000A2  	MOV	#10, W2
0x087C	0x090011  	REPEAT	#17
0x087E	0xD80502  	DIV.S	W10, W2
0x0880	0x780500  	MOV	W0, W10
0x0882	0xED2008  	DEC	W4
0x0884	0x37FFF2  	BRA	L__IntToStr68
L__IntToStr69:
0x0886	0xE20006  	CP0	W3
0x0888	0x320002  	BRA Z	L__IntToStr73
L__IntToStr251:
; negative end address is: 6 (W3)
0x088A	0xB3C2D0  	MOV.B	#45, W0
0x088C	0x784A00  	MOV.B	W0, [W4]
; ptr end address is: 8 (W4)
L__IntToStr73:
L_end__IntToStr:
L_end_IntToStr:
0x088E	0xFA8000  	ULNK
0x0890	0x060000  	RETURN
; end of _IntToStr
_interrupt_PinChangeNotification:
0x0F9A	0xFA0006  	LNK	#6
0x0F9C	0xF80034  	PUSH	PSVPAG
0x0F9E	0xF80036  	PUSH	RCOUNT
0x0FA0	0x781F80  	PUSH	W0
0x0FA2	0x200020  	MOV	#2, W0
0x0FA4	0x09000C  	REPEAT	#12
0x0FA6	0x781FB0  	PUSH	[W0++]
0x0FA8	0x781F8A  	PUSH	W10
0x0FAA	0x781F8B  	PUSH	W11
0x0FAC	0x781F8C  	PUSH	W12
; PortCopy start address is: 0 (W0)
0x0FAE	0xBF82C2  	MOV	PORTA, WREG
0x0FB0	0xAE0000  	BTSS	W0, #0
0x0FB2	0x37008E  	BRA	L__interrupt_PinChangeNotification25
; PortCopy end address is: 0 (W0)
0x0FB4	0xA9E141  	BCLR	CCPON_CCP1CON1L_bit, BitPos(CCPON_CCP1CON1L_bit+0)
0x0FB6	0xBF8152  	MOV	CCP1TMRH, WREG
0x0FB8	0x980710  	MOV	W0, [W14+2]
0x0FBA	0xBF8150  	MOV	CCP1TMRL, WREG
0x0FBC	0x980700  	MOV	W0, [W14+0]
0x0FBE	0xEF2152  	CLR	CCP1TMRH
0x0FC0	0xEF2150  	CLR	CCP1TMRL
0x0FC2	0xA9E084  	BCLR	CCT1IF_bit, BitPos(CCT1IF_bit+0)
0x0FC4	0xA8E141  	BSET	CCPON_CCP1CON1L_bit, BitPos(CCPON_CCP1CON1L_bit+0)
0x0FC6	0x804240  	MOV	_State, W0
0x0FC8	0xE10060  	CP	W0, #0
0x0FCA	0x3A0007  	BRA NZ	L__interrupt_PinChangeNotification28
L__interrupt_PinChangeNotification86:
0x0FCC	0xEF2000  	CLR	W0
0x0FCE	0xEF2002  	CLR	W1
0x0FD0	0x8841F0  	MOV	W0, _Last_RPM_Global
0x0FD2	0x884201  	MOV	W1, _Last_RPM_Global+2
; LastDistributorPeriod start address is: 4 (W2)
0x0FD4	0xEF2004  	CLR	W2
0x0FD6	0xEF2006  	CLR	W3
; LastDistributorPeriod end address is: 4 (W2)
0x0FD8	0x37000B  	BRA	L__interrupt_PinChangeNotification29
L__interrupt_PinChangeNotification28:
0x0FDA	0x20001C  	MOV	#1, W12
0x0FDC	0x90050E  	MOV	[W14+0], W10
0x0FDE	0x90059E  	MOV	[W14+2], W11
0x0FE0	0x07FF6A  	RCALL	_TimerCounts_To_Time
; LastDistributorPeriod start address is: 4 (W2)
0x0FE2	0xBE0100  	MOV.D	W0, W2
0x0FE4	0xBE9F82  	PUSH.D	W2
0x0FE6	0xBE0500  	MOV.D	W0, W10
0x0FE8	0x07FF6E  	RCALL	_Distributor_Period_To_RPM
0x0FEA	0xBE014F  	POP.D	W2
0x0FEC	0x8841F0  	MOV	W0, _Last_RPM_Global
0x0FEE	0x884201  	MOV	W1, _Last_RPM_Global+2
; LastDistributorPeriod end address is: 4 (W2)
L__interrupt_PinChangeNotification29:
; LastDistributorPeriod start address is: 4 (W2)
0x0FF0	0x804240  	MOV	_State, W0
0x0FF2	0xE10060  	CP	W0, #0
0x0FF4	0x3A000D  	BRA NZ	L__interrupt_PinChangeNotification33
L__interrupt_PinChangeNotification87:
; LastDistributorPeriod end address is: 4 (W2)
0x0FF6	0xEF2000  	CLR	W0
0x0FF8	0x8841D0  	MOV	W0, _Stable_Cranking_RPM_Count_Global
0x0FFA	0xEF2000  	CLR	W0
0x0FFC	0x8841C0  	MOV	W0, _Distributor_Period_Filter_Counter
0x0FFE	0xEF2000  	CLR	W0
0x1000	0xEF2002  	CLR	W1
0x1002	0x8841F0  	MOV	W0, _Last_RPM_Global
0x1004	0x884201  	MOV	W1, _Last_RPM_Global+2
0x1006	0x07FDA9  	RCALL	_PrintState
0x1008	0x200010  	MOV	#1, W0
0x100A	0x884240  	MOV	W0, _State
0x100C	0x07FDA6  	RCALL	_PrintState
0x100E	0x370060  	BRA	L__interrupt_PinChangeNotification30
L__interrupt_PinChangeNotification33:
; LastDistributorPeriod start address is: 4 (W2)
0x1010	0x804240  	MOV	_State, W0
0x1012	0xE10061  	CP	W0, #1
0x1014	0x3A0036  	BRA NZ	L__interrupt_PinChangeNotification36
L__interrupt_PinChangeNotification88:
0x1016	0xBE9F82  	PUSH.D	W2
0x1018	0x200002  	MOV	#0, W2
0x101A	0x242483  	MOV	#16968, W3
0x101C	0x8041F0  	MOV	_Last_RPM_Global, W0
0x101E	0x804201  	MOV	_Last_RPM_Global+2, W1
0x1020	0x07FBDD  	RCALL	__Compare_Ge_Fp
0x1022	0xE00000  	CP0	W0
0x1024	0xEF2000  	CLR	W0
0x1026	0x340001  	BRA LE	L__interrupt_PinChangeNotification89
0x1028	0xEEA000  	COM	W0
L__interrupt_PinChangeNotification89:
0x102A	0x980720  	MOV	W0, [W14+4]
0x102C	0x2C0002  	MOV	#49152, W2
0x102E	0x245DA3  	MOV	#17882, W3
0x1030	0x8041F0  	MOV	_Last_RPM_Global, W0
0x1032	0x804201  	MOV	_Last_RPM_Global+2, W1
0x1034	0x07FF69  	RCALL	__Compare_Le_Fp
0x1036	0xE00000  	CP0	W0
0x1038	0xEF2000  	CLR	W0
0x103A	0x3D0001  	BRA GE	L__interrupt_PinChangeNotification90
0x103C	0xEEA000  	COM	W0
L__interrupt_PinChangeNotification90:
0x103E	0xBE014F  	POP.D	W2
0x1040	0x9000AE  	MOV	[W14+4], W1
0x1042	0x608000  	AND	W1, W0, W0
0x1044	0x32000E  	BRA Z	L__interrupt_PinChangeNotification38
L__interrupt_PinChangeNotification91:
0x1046	0xBE0502  	MOV.D	W2, W10
0x1048	0x07FD02  	RCALL	_UpdateDistributorArray
0x104A	0x233330  	MOV	#13107, W0
0x104C	0x23EB31  	MOV	#16051, W1
0x104E	0x07FA68  	RCALL	__Mul_FP
; LastDistributorPeriod end address is: 4 (W2)
0x1050	0x20001C  	MOV	#1, W12
0x1052	0xBE0500  	MOV.D	W0, W10
0x1054	0x07FDC6  	RCALL	_Time_To_TimerCounts
0x1056	0xBE0500  	MOV.D	W0, W10
0x1058	0x07FD90  	RCALL	_Delay_Cyc_Long
0x105A	0x200011  	MOV	#1, W1
0x105C	0x2083A0  	MOV	#lo_addr(_Stable_Cranking_RPM_Count_Global), W0
0x105E	0x408810  	ADD	W1, [W0], [W0]
0x1060	0x370009  	BRA	L__interrupt_PinChangeNotification39
L__interrupt_PinChangeNotification38:
0x1062	0x20001C  	MOV	#1, W12
0x1064	0x20A3EA  	MOV	#2622, W10
0x1066	0x23CD7B  	MOV	#15575, W11
0x1068	0x07FDBC  	RCALL	_Time_To_TimerCounts
0x106A	0xBE0500  	MOV.D	W0, W10
0x106C	0x07FD86  	RCALL	_Delay_Cyc_Long
0x106E	0x200011  	MOV	#1, W1
0x1070	0x2083A0  	MOV	#lo_addr(_Stable_Cranking_RPM_Count_Global), W0
0x1072	0x108810  	SUBR	W1, [W0], [W0]
L__interrupt_PinChangeNotification39:
0x1074	0x8041D0  	MOV	_Stable_Cranking_RPM_Count_Global, W0
0x1076	0xE10068  	CP	W0, #8
0x1078	0x350003  	BRA LT	L__interrupt_PinChangeNotification41
L__interrupt_PinChangeNotification92:
0x107A	0x200020  	MOV	#2, W0
0x107C	0x884240  	MOV	W0, _State
0x107E	0x07FD6D  	RCALL	_PrintState
L__interrupt_PinChangeNotification41:
0x1080	0x370027  	BRA	L__interrupt_PinChangeNotification30
L__interrupt_PinChangeNotification36:
; LastDistributorPeriod start address is: 4 (W2)
0x1082	0x804240  	MOV	_State, W0
0x1084	0xE10062  	CP	W0, #2
0x1086	0x3A0004  	BRA NZ	L__interrupt_PinChangeNotification45
L__interrupt_PinChangeNotification93:
; LastDistributorPeriod end address is: 4 (W2)
L__interrupt_PinChangeNotification50:
0x1088	0x200030  	MOV	#3, W0
0x108A	0x884240  	MOV	W0, _State
0x108C	0x07FD66  	RCALL	_PrintState
0x108E	0x370020  	BRA	L__interrupt_PinChangeNotification30
L__interrupt_PinChangeNotification45:
; LastDistributorPeriod start address is: 4 (W2)
0x1090	0x804240  	MOV	_State, W0
0x1092	0xE10063  	CP	W0, #3
0x1094	0x3A0013  	BRA NZ	L__interrupt_PinChangeNotification53
L__interrupt_PinChangeNotification94:
0x1096	0xBE0502  	MOV.D	W2, W10
0x1098	0x07FCDA  	RCALL	_UpdateDistributorArray
0x109A	0xBE0502  	MOV.D	W2, W10
; LastDistributorPeriod end address is: 4 (W2)
0x109C	0x07FDB1  	RCALL	_TriggerOutput_With_Wait
0x109E	0x200002  	MOV	#0, W2
0x10A0	0x243C83  	MOV	#17352, W3
0x10A2	0x8041F0  	MOV	_Last_RPM_Global, W0
0x10A4	0x804201  	MOV	_Last_RPM_Global+2, W1
0x10A6	0x07FB9A  	RCALL	__Compare_Ge_Fp
0x10A8	0xE00000  	CP0	W0
0x10AA	0xEF2000  	CLR	W0
0x10AC	0x340001  	BRA LE	L__interrupt_PinChangeNotification95
0x10AE	0xEEA000  	COM	W0
L__interrupt_PinChangeNotification95:
0x10B0	0xE20000  	CP0	W0
0x10B2	0x320003  	BRA Z	L__interrupt_PinChangeNotification55
L__interrupt_PinChangeNotification96:
0x10B4	0x200040  	MOV	#4, W0
0x10B6	0x884240  	MOV	W0, _State
0x10B8	0x07FD50  	RCALL	_PrintState
L__interrupt_PinChangeNotification55:
0x10BA	0x37000A  	BRA	L__interrupt_PinChangeNotification30
L__interrupt_PinChangeNotification53:
; LastDistributorPeriod start address is: 4 (W2)
0x10BC	0x804240  	MOV	_State, W0
0x10BE	0xE10064  	CP	W0, #4
0x10C0	0x3A0005  	BRA NZ	L__interrupt_PinChangeNotification59
L__interrupt_PinChangeNotification97:
0x10C2	0xBE0502  	MOV.D	W2, W10
0x10C4	0x07FCC4  	RCALL	_UpdateDistributorArray
0x10C6	0xBE0502  	MOV.D	W2, W10
; LastDistributorPeriod end address is: 4 (W2)
0x10C8	0x07FD9B  	RCALL	_TriggerOutput_With_Wait
0x10CA	0x370002  	BRA	L__interrupt_PinChangeNotification30
L__interrupt_PinChangeNotification59:
0x10CC	0xEF2000  	CLR	W0
0x10CE	0x884240  	MOV	W0, _State
L__interrupt_PinChangeNotification30:
L__interrupt_PinChangeNotification25:
0x10D0	0xA96086  	BCLR	CNIF_bit, BitPos(CNIF_bit+0)
L_end_interrupt_PinChangeNotification:
0x10D2	0x78064F  	POP	W12
0x10D4	0x7805CF  	POP	W11
0x10D6	0x78054F  	POP	W10
0x10D8	0x2001A0  	MOV	#26, W0
0x10DA	0x09000C  	REPEAT	#12
0x10DC	0x78104F  	POP	[W0--]
0x10DE	0x78004F  	POP	W0
0x10E0	0xF90036  	POP	RCOUNT
0x10E2	0xF90034  	POP	PSVPAG
0x10E4	0xFA8000  	ULNK
0x10E6	0x064000  	RETFIE
; end of _interrupt_PinChangeNotification
_TimerCounts_To_Time:
0x0EB6	0xBE000A  	MOV.D	W10, W0
0x0EB8	0x07FAD8  	RCALL	__Long2Float
0x0EBA	0x237BD2  	MOV	#14269, W2
0x0EBC	0x233863  	MOV	#13190, W3
0x0EBE	0x07FB30  	RCALL	__Mul_FP
; Result start address is: 4 (W2)
0x0EC0	0xBE0100  	MOV.D	W0, W2
0x0EC2	0xBE0002  	MOV.D	W2, W0
; Result end address is: 4 (W2)
L_end_TimerCounts_To_Time:
0x0EC4	0x060000  	RETURN
; end of _TimerCounts_To_Time
_Distributor_Period_To_RPM:
0x0EC6	0xFA0004  	LNK	#4
0x0EC8	0xEF2000  	CLR	W0
0x0ECA	0xEF2002  	CLR	W1
0x0ECC	0x980700  	MOV	W0, [W14+0]
0x0ECE	0x980711  	MOV	W1, [W14+2]
0x0ED0	0xBE9F8A  	PUSH.D	W10
0x0ED2	0xEF2004  	CLR	W2
0x0ED4	0xEF2006  	CLR	W3
0x0ED6	0xBE000A  	MOV.D	W10, W0
0x0ED8	0x07FC81  	RCALL	__Compare_Ge_Fp
0x0EDA	0xE00000  	CP0	W0
0x0EDC	0xEF2000  	CLR	W0
0x0EDE	0x340001  	BRA LE	L__Distributor_Period_To_RPM75
0x0EE0	0xEEA000  	COM	W0
L__Distributor_Period_To_RPM75:
0x0EE2	0xBE054F  	POP.D	W10
0x0EE4	0xE20000  	CP0	W0
0x0EE6	0x32000C  	BRA Z	L__Distributor_Period_To_RPM7
L__Distributor_Period_To_RPM76:
0x0EE8	0xBE010A  	MOV.D	W10, W2
0x0EEA	0x200000  	MOV	#0, W0
0x0EEC	0x242701  	MOV	#17008, W1
0x0EEE	0x07FBA5  	RCALL	__Div_FP
0x0EF0	0x200002  	MOV	#0, W2
0x0EF2	0x241003  	MOV	#16640, W3
0x0EF4	0x07FBA2  	RCALL	__Div_FP
0x0EF6	0x200002  	MOV	#0, W2
0x0EF8	0x240003  	MOV	#16384, W3
0x0EFA	0x07FB12  	RCALL	__Mul_FP
0x0EFC	0x980700  	MOV	W0, [W14+0]
0x0EFE	0x980711  	MOV	W1, [W14+2]
L__Distributor_Period_To_RPM7:
0x0F00	0x90000E  	MOV	[W14+0], W0
0x0F02	0x90009E  	MOV	[W14+2], W1
L_end_Distributor_Period_To_RPM:
0x0F04	0xFA8000  	ULNK
0x0F06	0x060000  	RETURN
; end of _Distributor_Period_To_RPM
__Compare_Ge_Fp:
0x07DC	0xFA0000  	LNK	#0
0x07DE	0x2FFFF4  	MOV	#65535, W4
0x07E0	0x07FD14  	RCALL	__Compare_Fp
L_end__Compare_Ge_Fp:
0x07E2	0xFA8000  	ULNK
0x07E4	0x060000  	RETURN
; end of __Compare_Ge_Fp
__Div_FP:
0x063A	0xFA0000  	LNK	#0
0x063C	0x070002  	RCALL	DivFP___divsf3
0x063E	0x00000004076C  	GOTO	the_end__Div_FP
DivFP___divsf3:
0x0642	0xBE9F88  	MOV.D	W8, [W15++]
0x0644	0xBE9F8A  	MOV.D	W10, [W15++]
0x0646	0x781F8C  	MOV	W12, [W15++]
0x0648	0x07003E  	RCALL	DivFP__funpack2
0x064A	0x330045  	BRA N	DivFP__fPropagateNaN
0x064C	0x6C8603  	XOR	W9, W3, W12
0x064E	0xE15064  	CP	W10, #4
0x0650	0x32002E  	BRA Z	DivFP_aisinfinite
0x0652	0xE12064  	CP	W4, #4
0x0654	0x320033  	BRA Z	DivFP_returnZero
0x0656	0xE15061  	CP	W10, #1
0x0658	0x32002F  	BRA Z	DivFP_aiszero
0x065A	0xE12061  	CP	W4, #1
0x065C	0x320031  	BRA Z	DivFP_returnInf
DivFP_finitenonzero:
0x065E	0x558585  	SUB	W11, W5, W11
0x0660	0xB007EB  	ADD	#126, W11
0x0662	0x200009  	MOV	#0, W9
0x0664	0x200408  	MOV	#64, W8
0x0666	0x370005  	BRA	DivFP_diventry
DivFP_divnext:
0x0668	0x440408  	ADD	W8, W8, W8
0x066A	0x4C8489  	ADDC	W9, W9, W9
0x066C	0x31000A  	BRA C	DivFP_divdone
DivFP_divloop:
0x066E	0x430306  	ADD	W6, W6, W6
0x0670	0x4B8387  	ADDC	W7, W7, W7
DivFP_diventry:
0x0672	0x530100  	SUB	W6, W0, W2
0x0674	0x5B8181  	SUBB	W7, W1, W3
0x0676	0x33FFF8  	BRA N	DivFP_divnext
0x0678	0xBE8302  	MOV.D	W2, W6
0x067A	0xA80010  	BSET	W8, #0
0x067C	0x440408  	ADD	W8, W8, W8
0x067E	0x4C8489  	ADDC	W9, W9, W9
0x0680	0x39FFF6  	BRA NC	DivFP_divloop
DivFP_divdone:
0x0682	0xDD39C6  	SL	W7, #6, W3
0x0684	0x730183  	IOR	W6, W3, W3
0x0686	0x320001  	BRA Z	DivFP_stickyok
0x0688	0x200013  	MOV	#1, W3
DivFP_stickyok:
0x068A	0xD10489  	LSR	W9, W9
0x068C	0xD38408  	RRC	W8, W8
0x068E	0xA39809  	BTST.Z	W9, #9
0x0690	0x320005  	BRA Z	DivFP_guardused
0x0692	0xA70008  	BTSC	W8, #0
0x0694	0xA80006  	BSET	W3, #0
0x0696	0xD10489  	LSR	W9, W9
0x0698	0xD38408  	RRC	W8, W8
0x069A	0xE8058B  	INC	W11, W11
DivFP_guardused:
0x069C	0xD10489  	LSR	W9, W9
0x069E	0xD38408  	RRC	W8, W8
0x06A0	0xEB0100  	CLR	W2
0x06A2	0xD28102  	RLC	W2, W2
0x06A4	0x070028  	RCALL	DivFP__fpack
DivFP_return0_1:
0x06A6	0xA1F001  	BCLR	W1, #15
0x06A8	0xA7F00C  	BTSC	W12, #15
0x06AA	0xA8E003  	BSET	W1, #15
0x06AC	0x37001D  	BRA	DivFP__fbopExit
DivFP_aisinfinite:
0x06AE	0xE12064  	CP	W4, #4
0x06B0	0x32001F  	BRA Z	DivFP__fbopReturnNaN
DivFP_return8_1:
0x06B2	0xBE8108  	MOV.D	W8, W2
DivFP_return2_1:
0x06B4	0xBE8002  	MOV.D	W2, W0
0x06B6	0x37FFF7  	BRA	DivFP_return0_1
DivFP_aiszero:
0x06B8	0xE12061  	CP	W4, #1
0x06BA	0x32001A  	BRA Z	DivFP__fbopReturnNaN
DivFP_returnZero:
0x06BC	0xB80060  	MUL.UU	W0, #0, W0
0x06BE	0x37FFF3  	BRA	DivFP_return0_1
DivFP_returnInf:
0x06C0	0x200000  	MOV	#0, W0
0x06C2	0x27F801  	MOV	#32640, W1
0x06C4	0x37FFF0  	BRA	DivFP_return0_1
DivFP__funpack2:
0x06C6	0xBE8400  	MOV.D	W0, W8
0x06C8	0x07003C  	RCALL	DivFP__funpack
0x06CA	0xBE8300  	MOV.D	W0, W6
0x06CC	0xBE8504  	MOV.D	W4, W10
0x06CE	0xBE8002  	MOV.D	W2, W0
0x06D0	0x070038  	RCALL	DivFP__funpack
0x06D2	0x754F84  	IOR.B	W10, W4, [W15]
0x06D4	0x060000  	RETURN
DivFP__fPropagateNaN:
0x06D6	0xBE8002  	MOV.D	W2, W0
0x06D8	0xE15064  	CP	W10, #4
0x06DA	0x360005  	BRA LEU	DivFP_return0
0x06DC	0xE12064  	CP	W4, #4
0x06DE	0x360002  	BRA LEU	DivFP_return8
0x06E0	0xA36809  	BTST.Z	W9, #6
0x06E2	0x3A0001  	BRA NZ	DivFP_return0
DivFP_return8:
0x06E4	0xBE8008  	MOV.D	W8, W0
DivFP_return0:
0x06E6	0xA8C002  	BSET	W1, #6
DivFP__fbopExit:
0x06E8	0x78064F  	MOV	[--W15], W12
0x06EA	0xBE054F  	MOV.D	[--W15], W10
0x06EC	0xBE044F  	MOV.D	[--W15], W8
0x06EE	0x060000  	RETURN
DivFP__fbopReturnNaN:
0x06F0	0x2FFFF0  	MOV	#65535, W0
0x06F2	0x27FFF1  	MOV	#32767, W1
0x06F4	0x37FFF9  	BRA	DivFP__fbopExit
DivFP__fpack:
0x06F6	0x200081  	MOV	#8, W1
0x06F8	0x558061  	SUB	W11, #1, W0
0x06FA	0x3D000B  	BRA GE	DivFP_notsubnormal
0x06FC	0x20000B  	MOV	#0, W11
0x06FE	0x2FFE61  	MOV	#65510, W1
0x0700	0xE10001  	CP	W0, W1
0x0702	0x34001D  	BRA LE	DivFP_zerosig
DivFP_subnormal:
0x0704	0x718182  	IOR	W3, W2, W3
0x0706	0x640161  	AND	W8, #1, W2
0x0708	0xD10489  	LSR	W9, W9
0x070A	0xD38408  	RRC	W8, W8
0x070C	0xE80000  	INC	W0, W0
0x070E	0x3AFFFA  	BRA NZ	DivFP_subnormal
0x0710	0x200071  	MOV	#7, W1
DivFP_notsubnormal:
0x0712	0x640061  	AND	W8, #1, W0
0x0714	0x700003  	IOR	W0, W3, W0
0x0716	0x600002  	AND	W0, W2, W0
0x0718	0x320009  	BRA Z	DivFP_packupandgo
0x071A	0x440461  	ADD	W8, #1, W8
0x071C	0x4C84E0  	ADDC	W9, #0, W9
0x071E	0xA58809  	BTST.Z	W9, W1
0x0720	0x320005  	BRA Z	DivFP_packupandgo
0x0722	0xE8058B  	INC	W11, W11
0x0724	0xE10868  	CP	W1, #8
0x0726	0x3A0002  	BRA NZ	DivFP_packupandgo
0x0728	0xD10489  	LSR	W9, W9
0x072A	0xD38408  	RRC	W8, W8
DivFP_packupandgo:
0x072C	0x200FF2  	MOV	#255, W2
0x072E	0xE15802  	CP	W11, W2
0x0730	0x3D0005  	BRA GE	DivFP_overflow
0x0732	0xDD5DC7  	SL	W11, #7, W11
0x0734	0xB207F9  	AND	#127, W9
0x0736	0x758089  	IOR	W11, W9, W1
0x0738	0x880008  	MOV	W8, W0
0x073A	0x060000  	RETURN
DivFP_overflow:
0x073C	0x27F80B  	MOV	#32640, W11
DivFP_zerosig:
0x073E	0x88001B  	MOV	W11, W1
0x0740	0x050000  	RETLW	#0, W0
DivFP__funpack:
0x0742	0xDE0AC7  	LSR	W1, #7, W5
0x0744	0xB207F1  	AND	#127, W1
0x0746	0xB20FF5  	AND	#255, W5
0x0748	0x320008  	BRA Z	DivFP_zeroorsub
0x074A	0x42CFE1  	ADD.B	W5, #1, [W15]
0x074C	0x320002  	BRA Z	DivFP_nanorinf
DivFP_finitereturn:
0x074E	0xA8E002  	BSET	W1, #7
0x0750	0x050024  	RETLW	#2, W4
DivFP_nanorinf:
0x0752	0x700F81  	IOR	W0, W1, [W15]
0x0754	0x320001  	BRA Z	DivFP_infinite
0x0756	0x050804  	RETLW	#128, W4
DivFP_infinite:
0x0758	0x050044  	RETLW	#4, W4
DivFP_zeroorsub:
0x075A	0x700F81  	IOR	W0, W1, [W15]
0x075C	0x3A0002  	BRA NZ	DivFP_subnormal2
0x075E	0x050014  	RETLW	#1, W4
DivFP_normalize:
0x0760	0xE90285  	DEC	W5, W5
DivFP_subnormal2:
0x0762	0x400000  	ADD	W0, W0, W0
0x0764	0x48C081  	ADDC.B	W1, W1, W1
0x0766	0x3BFFFC  	BRA NN	DivFP_normalize
0x0768	0xA8E002  	BSET	W1, #7
0x076A	0x050024  	RETLW	#2, W4
the_end__Div_FP:
L_end__Div_FP:
0x076C	0xFA8000  	ULNK
0x076E	0x060000  	RETURN
; end of __Div_FP
_PrintState:
0x0B5A	0xFA0008  	LNK	#8
0x0B5C	0x781F8A  	PUSH	W10
0x0B5E	0x781F8B  	PUSH	W11
0x0B60	0x470060  	ADD	W14, #0, W0
0x0B62	0x780580  	MOV	W0, W11
0x0B64	0x80424A  	MOV	_State, W10
0x0B66	0x07FE56  	RCALL	_IntToStr
0x0B68	0x470060  	ADD	W14, #0, W0
0x0B6A	0x780500  	MOV	W0, W10
0x0B6C	0x07FE3C  	RCALL	_UART_Write_Text
0x0B6E	0x2000DA  	MOV	#13, W10
0x0B70	0x07FEFA  	RCALL	_UART1_Write
L_end_PrintState:
0x0B72	0x7805CF  	POP	W11
0x0B74	0x78054F  	POP	W10
0x0B76	0xFA8000  	ULNK
0x0B78	0x060000  	RETURN
; end of _PrintState
_UpdateDistributorArray:
0x0A4E	0x8041C0  	MOV	_Distributor_Period_Filter_Counter, W0
0x0A50	0xDD00C2  	SL	W0, #2, W1
0x0A52	0x208180  	MOV	#lo_addr(_Distributor_Period_Filter_Array), W0
0x0A54	0x400001  	ADD	W0, W1, W0
0x0A56	0xBE880A  	MOV.D	W10, [W0]
0x0A58	0x200011  	MOV	#1, W1
0x0A5A	0x208380  	MOV	#lo_addr(_Distributor_Period_Filter_Counter), W0
0x0A5C	0x408810  	ADD	W1, [W0], [W0]
0x0A5E	0x8041C0  	MOV	_Distributor_Period_Filter_Counter, W0
0x0A60	0xE10068  	CP	W0, #8
0x0A62	0x350002  	BRA LT	L__UpdateDistributorArray13
L__UpdateDistributorArray80:
0x0A64	0xEF2000  	CLR	W0
0x0A66	0x8841C0  	MOV	W0, _Distributor_Period_Filter_Counter
L__UpdateDistributorArray13:
L_end_UpdateDistributorArray:
0x0A68	0x060000  	RETURN
; end of _UpdateDistributorArray
_Time_To_TimerCounts:
0x0BE2	0xBE9F8A  	PUSH.D	W10
0x0BE4	0x78000C  	MOV	W12, W0
0x0BE6	0xEB0080  	CLR	W1
0x0BE8	0x07FC40  	RCALL	__Long2Float
0x0BEA	0x237BD2  	MOV	#14269, W2
0x0BEC	0x233863  	MOV	#13190, W3
0x0BEE	0x07FC98  	RCALL	__Mul_FP
0x0BF0	0xBE054F  	POP.D	W10
0x0BF2	0xBE0100  	MOV.D	W0, W2
0x0BF4	0xBE000A  	MOV.D	W10, W0
0x0BF6	0x07FD21  	RCALL	__Div_FP
0x0BF8	0x07FDBB  	RCALL	__Float2Longword
; Result start address is: 4 (W2)
0x0BFA	0xBE0100  	MOV.D	W0, W2
0x0BFC	0xBE0002  	MOV.D	W2, W0
; Result end address is: 4 (W2)
L_end_Time_To_TimerCounts:
0x0BFE	0x060000  	RETURN
; end of _Time_To_TimerCounts
__Float2Longword:
0x0770	0xFA0000  	LNK	#0
0x0772	0x070002  	RCALL	Float2Longword_fixunssfsi
0x0774	0x0000000407D8  	GOTO	the_end__Float2Longword
Float2Longword_fixunssfsi:
0x0778	0xBE8100  	MOV.D	W0, W2
0x077A	0x070019  	RCALL	Float2Longword_funpack
0x077C	0xA77004  	BTSC	W4, #7
0x077E	0xA1F003  	BCLR	W3, #15
0x0780	0xA3F803  	BTST.Z	W3, #15
0x0782	0x3A0013  	BRA NZ	Float2Longword_returnzero
0x0784	0xB10965  	SUB	#150, W5
0x0786	0x320010  	BRA Z	Float2Longword_exit
0x0788	0x350009  	BRA LT	Float2Longword_shiftright
0x078A	0xE12869  	CP	W5, #9
0x078C	0x350002  	BRA LT	Float2Longword_shiftleft
0x078E	0x280001  	MOV	#32768, W1
0x0790	0x050000  	RETLW	#0, W0
Float2Longword_shiftleft:
0x0792	0x400000  	ADD	W0, W0, W0
0x0794	0x488081  	ADDC	W1, W1, W1
0x0796	0xE90285  	DEC	W5, W5
0x0798	0x3AFFFC  	BRA NZ	Float2Longword_shiftleft
0x079A	0x060000  	RETURN
Float2Longword_shiftright:
0x079C	0x428FF8  	ADD	W5, #24, [W15]
0x079E	0x350005  	BRA LT	Float2Longword_returnzero
Float2Longword_shiftrightloop:
0x07A0	0xD10081  	LSR	W1, W1
0x07A2	0xD38000  	RRC	W0, W0
0x07A4	0xE80285  	INC	W5, W5
0x07A6	0x3AFFFC  	BRA NZ	Float2Longword_shiftrightloop
Float2Longword_exit:
0x07A8	0x060000  	RETURN
Float2Longword_returnzero:
0x07AA	0xEB0080  	CLR	W1
0x07AC	0x050000  	RETLW	#0, W0
Float2Longword_funpack:
0x07AE	0xDE0AC7  	LSR	W1, #7, W5
0x07B0	0xB207F1  	AND	#127, W1
0x07B2	0xB20FF5  	AND	#255, W5
0x07B4	0x320008  	BRA Z	Float2Longword_zeroorsub
0x07B6	0x42CFE1  	ADD.B	W5, #1, [W15]
0x07B8	0x320002  	BRA Z	Float2Longword_nanorinf
Float2Longword_finitereturn:
0x07BA	0xA8E002  	BSET	W1, #7
0x07BC	0x050024  	RETLW	#2, W4
Float2Longword_nanorinf:
0x07BE	0x700F81  	IOR	W0, W1, [W15]
0x07C0	0x320001  	BRA Z	Float2Longword_infinite
0x07C2	0x050804  	RETLW	#128, W4
Float2Longword_infinite:
0x07C4	0x050044  	RETLW	#4, W4
Float2Longword_zeroorsub:
0x07C6	0x700F81  	IOR	W0, W1, [W15]
0x07C8	0x3A0002  	BRA NZ	Float2Longword_subnormal
0x07CA	0x050014  	RETLW	#1, W4
Float2Longword_normalize:
0x07CC	0xE90285  	DEC	W5, W5
Float2Longword_subnormal:
0x07CE	0x400000  	ADD	W0, W0, W0
0x07D0	0x48C081  	ADDC.B	W1, W1, W1
0x07D2	0x3BFFFC  	BRA NN	Float2Longword_normalize
0x07D4	0xA8E002  	BSET	W1, #7
0x07D6	0x050024  	RETLW	#2, W4
the_end__Float2Longword:
L_end__Float2Longword:
0x07D8	0xFA8000  	ULNK
0x07DA	0x060000  	RETURN
; end of __Float2Longword
_Delay_Cyc_Long:
0x0B7A	0x78040A  	MOV	W10, W8
0x0B7C	0x78048B  	MOV	W11, W9
0x0B7E	0xF80010  	PUSH	W8
0x0B80	0x2000E7  	MOV	#14, W7
Label1:
0x0B82	0xE90387  	DEC	W7, W7
0x0B84	0x350003  	BRA LT	Label2
0x0B86	0xD10489  	LSR	W9, W9
0x0B88	0xD38408  	RRC	W8, W8
0x0B8A	0x37FFFB  	BRA	Label1
Label2:
0x0B8C	0xF90012  	POP	W9
0x0B8E	0x23FFF7  	MOV	#16383, W7
0x0B90	0x648487  	AND	W9, W7, W9
Delay_Cyc_loop:
0x0B92	0xE20010  	CP0	W8
0x0B94	0x320004  	BRA Z	Delay_Cyc_rem
0x0B96	0x093FF9  	REPEAT	#16377
0x0B98	0x000000  	NOP
0x0B9A	0xE90408  	DEC	W8, W8
0x0B9C	0x37FFFA  	BRA	Delay_Cyc_loop
Delay_Cyc_rem:
0x0B9E	0x098009  	REPEAT	W9
0x0BA0	0x000000  	NOP
L_end_Delay_Cyc_Long:
0x0BA2	0x060000  	RETURN
; end of _Delay_Cyc_Long
_RPM_To_Distributor_Period:
0x0BA4	0xFA0004  	LNK	#4
0x0BA6	0xEF2000  	CLR	W0
0x0BA8	0xEF2002  	CLR	W1
0x0BAA	0x980700  	MOV	W0, [W14+0]
0x0BAC	0x980711  	MOV	W1, [W14+2]
0x0BAE	0xBE9F8A  	PUSH.D	W10
0x0BB0	0xEF2004  	CLR	W2
0x0BB2	0xEF2006  	CLR	W3
0x0BB4	0xBE000A  	MOV.D	W10, W0
0x0BB6	0x07FE12  	RCALL	__Compare_Ge_Fp
0x0BB8	0xE00000  	CP0	W0
0x0BBA	0xEF2000  	CLR	W0
0x0BBC	0x340001  	BRA LE	L__RPM_To_Distributor_Period72
0x0BBE	0xEEA000  	COM	W0
L__RPM_To_Distributor_Period72:
0x0BC0	0xBE054F  	POP.D	W10
0x0BC2	0xE20000  	CP0	W0
0x0BC4	0x32000A  	BRA Z	L__RPM_To_Distributor_Period3
L__RPM_To_Distributor_Period73:
0x0BC6	0xBE000A  	MOV.D	W10, W0
0x0BC8	0x200002  	MOV	#0, W2
0x0BCA	0x241003  	MOV	#16640, W3
0x0BCC	0x07FCA9  	RCALL	__Mul_FP
0x0BCE	0xBE0100  	MOV.D	W0, W2
0x0BD0	0x200000  	MOV	#0, W0
0x0BD2	0x242F01  	MOV	#17136, W1
0x0BD4	0x07FD32  	RCALL	__Div_FP
0x0BD6	0x980700  	MOV	W0, [W14+0]
0x0BD8	0x980711  	MOV	W1, [W14+2]
L__RPM_To_Distributor_Period3:
0x0BDA	0x90000E  	MOV	[W14+0], W0
0x0BDC	0x90009E  	MOV	[W14+2], W1
L_end_RPM_To_Distributor_Period:
0x0BDE	0xFA8000  	ULNK
0x0BE0	0x060000  	RETURN
; end of _RPM_To_Distributor_Period
_TriggerOutput_With_Wait:
0x0C00	0x781F8A  	PUSH	W10
0x0C02	0x781F8B  	PUSH	W11
0x0C04	0x781F8C  	PUSH	W12
0x0C06	0xA922CD  	BCLR	LATB9_bit, BitPos(LATB9_bit+0)
0x0C08	0xBE000A  	MOV.D	W10, W0
0x0C0A	0x233332  	MOV	#13107, W2
0x0C0C	0x23EB33  	MOV	#16051, W3
0x0C0E	0x07FC88  	RCALL	__Mul_FP
0x0C10	0x20001C  	MOV	#1, W12
0x0C12	0xBE0500  	MOV.D	W0, W10
0x0C14	0x07FFE6  	RCALL	_Time_To_TimerCounts
0x0C16	0xBE0500  	MOV.D	W0, W10
0x0C18	0x07FFB0  	RCALL	_Delay_Cyc_Long
0x0C1A	0xA822CD  	BSET	LATB9_bit, BitPos(LATB9_bit+0)
L_end_TriggerOutput_With_Wait:
0x0C1C	0x78064F  	POP	W12
0x0C1E	0x7805CF  	POP	W11
0x0C20	0x78054F  	POP	W10
0x0C22	0x060000  	RETURN
; end of _TriggerOutput_With_Wait
_interrupt_CCT1_RPM_Measurment_And_Stall_Timer:
0x0F12	0xFA0014  	LNK	#20
0x0F14	0xF80034  	PUSH	PSVPAG
0x0F16	0xF80036  	PUSH	RCOUNT
0x0F18	0x781F80  	PUSH	W0
0x0F1A	0x200020  	MOV	#2, W0
0x0F1C	0x09000C  	REPEAT	#12
0x0F1E	0x781FB0  	PUSH	[W0++]
0x0F20	0x781F8A  	PUSH	W10
0x0F22	0xA9E141  	BCLR	CCPON_CCP1CON1L_bit, BitPos(CCPON_CCP1CON1L_bit+0)
0x0F24	0xEF2152  	CLR	CCP1TMRH
0x0F26	0xEF2150  	CLR	CCP1TMRL
0x0F28	0xA9E084  	BCLR	CCT1IF_bit, BitPos(CCT1IF_bit+0)
0x0F2A	0xA8E141  	BSET	CCPON_CCP1CON1L_bit, BitPos(CCPON_CCP1CON1L_bit+0)
0x0F2C	0xEF2000  	CLR	W0
0x0F2E	0x884240  	MOV	W0, _State
0x0F30	0x4700E0  	ADD	W14, #0, W1
0x0F32	0xB3C530  	MOV.B	#83, W0
0x0F34	0x785880  	MOV.B	W0, [W1++]
0x0F36	0xB3C740  	MOV.B	#116, W0
0x0F38	0x785880  	MOV.B	W0, [W1++]
0x0F3A	0xB3C610  	MOV.B	#97, W0
0x0F3C	0x785880  	MOV.B	W0, [W1++]
0x0F3E	0xB3C6C0  	MOV.B	#108, W0
0x0F40	0x785880  	MOV.B	W0, [W1++]
0x0F42	0xB3C6C0  	MOV.B	#108, W0
0x0F44	0x785880  	MOV.B	W0, [W1++]
0x0F46	0xB3C200  	MOV.B	#32, W0
0x0F48	0x785880  	MOV.B	W0, [W1++]
0x0F4A	0xB3C440  	MOV.B	#68, W0
0x0F4C	0x785880  	MOV.B	W0, [W1++]
0x0F4E	0xB3C650  	MOV.B	#101, W0
0x0F50	0x785880  	MOV.B	W0, [W1++]
0x0F52	0xB3C740  	MOV.B	#116, W0
0x0F54	0x785880  	MOV.B	W0, [W1++]
0x0F56	0xB3C650  	MOV.B	#101, W0
0x0F58	0x785880  	MOV.B	W0, [W1++]
0x0F5A	0xB3C630  	MOV.B	#99, W0
0x0F5C	0x785880  	MOV.B	W0, [W1++]
0x0F5E	0xB3C740  	MOV.B	#116, W0
0x0F60	0x785880  	MOV.B	W0, [W1++]
0x0F62	0xB3C650  	MOV.B	#101, W0
0x0F64	0x785880  	MOV.B	W0, [W1++]
0x0F66	0xB3C640  	MOV.B	#100, W0
0x0F68	0x785880  	MOV.B	W0, [W1++]
0x0F6A	0xB3C200  	MOV.B	#32, W0
0x0F6C	0x785880  	MOV.B	W0, [W1++]
0x0F6E	0xB3C490  	MOV.B	#73, W0
0x0F70	0x785880  	MOV.B	W0, [W1++]
0x0F72	0xB3C520  	MOV.B	#82, W0
0x0F74	0x785880  	MOV.B	W0, [W1++]
0x0F76	0xB3C510  	MOV.B	#81, W0
0x0F78	0x785880  	MOV.B	W0, [W1++]
0x0F7A	0xEF2000  	CLR	W0
0x0F7C	0x785880  	MOV.B	W0, [W1++]
0x0F7E	0x470060  	ADD	W14, #0, W0
0x0F80	0x780500  	MOV	W0, W10
0x0F82	0x07FF4C  	RCALL	_UART1_Write_Text
0x0F84	0x2000DA  	MOV	#13, W10
0x0F86	0x07FCEF  	RCALL	_UART1_Write
L_end_interrupt_CCT1_RPM_Measurment_And_Stall_Timer:
0x0F88	0x78054F  	POP	W10
0x0F8A	0x2001A0  	MOV	#26, W0
0x0F8C	0x09000C  	REPEAT	#12
0x0F8E	0x78104F  	POP	[W0--]
0x0F90	0x78004F  	POP	W0
0x0F92	0xF90036  	POP	RCOUNT
0x0F94	0xF90034  	POP	PSVPAG
0x0F96	0xFA8000  	ULNK
0x0F98	0x064000  	RETFIE
; end of _interrupt_CCT1_RPM_Measurment_And_Stall_Timer
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0200      [10]    _UART_Write
0x020A     [114]    __Compare_Fp
0x027C     [364]    __AddSub_FP
0x03E8      [10]    __Sub_FP
0x03F2     [120]    __Float2Longint
0x046A     [182]    __Long2Float
0x0520     [282]    __Mul_FP
0x063A     [310]    __Div_FP
0x0770     [108]    __Float2Longword
0x07DC      [10]    __Compare_Ge_Fp
0x07E6      [46]    _UART_Write_Text
0x0814     [126]    _IntToStr
0x0892      [18]    __Multiply_32x32
0x08A4      [88]    __Modulus_32x32
0x08FC      [10]    _Delay_10ms
0x0906       [8]    _Get_Fosc_kHz
0x090E       [6]    _Get_Fosc_Per_Cyc
0x0914      [82]    __Divide_32x32
0x0966      [22]    _UART1_Write
0x097C     [210]    _LongIntToStr
0x0A4E      [28]    _UpdateDistributorArray
0x0A6A     [240]    _UART1_Init
0x0B5A      [32]    _PrintState
0x0B7A      [42]    _Delay_Cyc_Long
0x0BA4      [62]    _RPM_To_Distributor_Period
0x0BE2      [30]    _Time_To_TimerCounts
0x0C00      [36]    _TriggerOutput_With_Wait
0x0C24      [62]    _WordToStr
0x0C62     [442]    _FloatToStr
0x0E1C      [40]    _UART1_Write_Text
0x0E44     [114]    _LongWordToStr
0x0EB6      [16]    _TimerCounts_To_Time
0x0EC6      [66]    _Distributor_Period_To_RPM
0x0F08      [10]    __Compare_Le_Fp
0x0F12     [136]    _interrupt_CCT1_RPM_Measurment_And_Stall_Timer
0x0F9A     [334]    _interrupt_PinChangeNotification
0x10E8     [666]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0062       [0]    CN2IE_bit
0x0800      [24]    _StrBuffer
0x0094       [0]    CCT1IE_bit
0x00AC       [0]    CNIP_0_bit
0x0086       [0]    CNIF_bit
0x00AC       [0]    CNIP_2_bit
0x00AC       [0]    CNIP_1_bit
0x0084       [0]    CCT1IF_bit
0x0154       [2]    CCP1PRL
0x0150       [2]    CCP1TMRL
0x0152       [2]    CCP1TMRH
0x0156       [2]    CCP1PRH
0x00A8       [0]    CCT2IP_2_bit
0x00A6       [0]    CCT1IP_1_bit
0x00A6       [0]    CCT1IP_0_bit
0x0818      [32]    _Distributor_Period_Filter_Array
0x0224       [2]    U1TXREG
0x0228       [2]    U1BRG
0x0838       [2]    _Distributor_Period_Filter_Counter
0x083A       [2]    _Stable_Cranking_RPM_Count_Global
0x02C2       [2]    PORTA
0x02C2       [2]    CoilNeg_Port
0x0222       [2]    U1STA
0x083C       [2]    _UART_Wr_Ptr
0x083E       [4]    _Last_RPM_Global
0x0096       [0]    CNIE_bit
0x0842       [2]    _UART_Rd_Ptr
0x0220       [2]    U1MODE
0x0844       [2]    _UART_TX_Idle_Ptr
0x0846       [2]    _UART_Rdy_Ptr
0x0140       [0]    TMRPS_1_CCP1CON1L_bit
0x02C0       [0]    TRISA0_bit
0x02C0       [0]    CoilNeg_TRIS
0x02C4       [0]    LATA2_bit
0x02C8       [0]    TachOut_TRIS
0x02C0       [0]    TRISA3_bit
0x02C0       [0]    HeartBeat_TRIS
0x02C8       [0]    TRISB9_bit
0x02C4       [0]    Debug_Pin
0x0848       [2]    _State
0x04E2       [2]    ANSB
0x04E0       [2]    ANSA
0x02CC       [0]    TachOut_Pin
0x02C4       [0]    LATA3_bit
0x02C4       [0]    HeartBeat_Pin
0x02CC       [0]    LATB9_bit
0x0140       [0]    TMR32_CCP1CON1L_bit
0x0142       [0]    SYNC_4_CCP1CON1H_bit
0x0142       [0]    SYNC_3_CCP1CON1H_bit
0x0140       [0]    CLKSEL_0_CCP1CON1L_bit
0x0140       [0]    TMRPS_0_CCP1CON1L_bit
0x0140       [0]    CLKSEL_2_CCP1CON1L_bit
0x0140       [0]    CLKSEL_1_CCP1CON1L_bit
0x0142       [0]    SYNC_2_CCP1CON1H_bit
0x0744       [2]    CLKDIV
0x02C0       [0]    TRISA2_bit
0x02C0       [0]    Debug_TRIS
0x0140       [0]    CCPON_CCP1CON1L_bit
0x0142       [0]    SYNC_1_CCP1CON1H_bit
0x0142       [0]    SYNC_0_CCP1CON1H_bit
0x0142       [0]    TRIGEN_CCP1CON1H_bit
0x0150       [2]    CCP1TMRL
0x0152       [2]    CCP1TMRH
0x0154       [2]    CCP1PRL
0x0156       [2]    CCP1PRH
0x0014       [2]    FARG_UART_Write_data_
0x0220       [2]    U1MODE
0x0222       [2]    U1STA
0x0224       [2]    U1TXREG
0x0228       [2]    U1BRG
0x02C2       [2]    PORTA
0x02C2       [2]    CoilNeg_Port
0x04E0       [2]    ANSA
0x04E2       [2]    ANSB
0x0744       [2]    CLKDIV
0x0014       [2]    FARG_UART_Write_Text_uart_text
0x0014       [2]    FARG_IntToStr_input
0x0016       [2]    FARG_IntToStr_output
0x0014       [2]    FARG_UART1_Write_data_
0x0014       [4]    FARG_LongIntToStr_input
0x0018       [2]    FARG_LongIntToStr_output
0x0014       [4]    FARG_UpdateDistributorArray_NewDistributorTime
0x0014       [4]    FARG_UART1_Init_baud_rate
0x0014       [4]    FARG_Delay_Cyc_Long_CycNo
0x0014       [4]    FARG_RPM_To_Distributor_Period_RPM
0x0014       [4]    FARG_Time_To_TimerCounts_Time
0x0018       [2]    FARG_Time_To_TimerCounts_Divider
0x0014       [4]    FARG_TriggerOutput_With_Wait_BlankingTime
0x0014       [2]    FARG_WordToStr_input
0x0016       [2]    FARG_WordToStr_output
0x0014       [4]    FARG_FloatToStr_input
0x0018       [2]    FARG_FloatToStr_output
0x0014       [2]    FARG_UART1_Write_Text_uart_text
0x0014       [4]    FARG_LongWordToStr_input
0x0018       [2]    FARG_LongWordToStr_output
0x0014       [4]    FARG_TimerCounts_To_Time_TimerCounts
0x0018       [2]    FARG_TimerCounts_To_Time_Divider
0x0014       [4]    FARG_Distributor_Period_To_RPM_Distributor_Period
