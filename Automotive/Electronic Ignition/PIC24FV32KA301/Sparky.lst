;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 11/22/2017 5:03:15 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x000000040B26  	GOTO	_main
0x0004	0x000000  	0
0x0006	0x000000  	0
0x0008	0x000000  	0
0x000A	0x000000  	0
0x000C	0x000000  	0
0x000E	0x000000  	0
0x0010	0x000000  	0
0x0012	0x000000  	0
0x0014	0x000000  	0
0x0016	0x000000  	0
0x0018	0x000000  	0
0x001A	0x00099A  	2458
0x001C	0x000000  	0
0x001E	0x000000  	0
0x0020	0x000000  	0
0x0022	0x000000  	0
0x0024	0x0009B8  	2488
0x0026	0x000000  	0
0x0028	0x000000  	0
0x002A	0x000000  	0
0x002C	0x000000  	0
0x002E	0x000000  	0
0x0030	0x000000  	0
0x0032	0x000000  	0
0x0034	0x000000  	0
0x0036	0x000000  	0
0x0038	0x000000  	0
0x003A	0x0009D8  	2520
0x003C	0x000000  	0
0x003E	0x000000  	0
0x0040	0x000000  	0
0x0042	0x000000  	0
0x0044	0x000000  	0
0x0046	0x000000  	0
0x0048	0x000000  	0
0x004A	0x000000  	0
0x004C	0x000AEA  	2794
0x004E	0x000000  	0
0x0050	0x000000  	0
0x0052	0x000000  	0
0x0054	0x000000  	0
0x0056	0x000000  	0
0x0058	0x000000  	0
0x005A	0x000000  	0
0x005C	0x000000  	0
0x005E	0x000000  	0
0x0060	0x000000  	0
0x0062	0x000000  	0
0x0064	0x000000  	0
0x0066	0x000000  	0
0x0068	0x000000  	0
0x006A	0x000000  	0
0x006C	0x000000  	0
0x006E	0x000000  	0
0x0070	0x000000  	0
0x0072	0x000000  	0
0x0074	0x000000  	0
0x0076	0x000000  	0
0x0078	0x000000  	0
0x007A	0x000000  	0
0x007C	0x000000  	0
0x007E	0x000000  	0
0x0080	0x000000  	0
0x0082	0x000000  	0
0x0084	0x000000  	0
0x0086	0x000000  	0
0x0088	0x000000  	0
0x008A	0x000000  	0
0x008C	0x000000  	0
0x008E	0x000000  	0
0x0090	0x000000  	0
0x0092	0x000000  	0
0x0094	0x000000  	0
0x0096	0x000000  	0
0x0098	0x000000  	0
0x009A	0x000000  	0
0x009C	0x000000  	0
0x009E	0x000000  	0
0x00A0	0x000000  	0
0x00A2	0x000000  	0
0x00A4	0x000000  	0
0x00A6	0x000000  	0
0x00A8	0x000000  	0
0x00AA	0x000000  	0
0x00AC	0x000000  	0
0x00AE	0x000000  	0
0x00B0	0x000000  	0
0x00B2	0x000000  	0
0x00B4	0x000000  	0
0x00B6	0x000000  	0
0x00B8	0x000000  	0
0x00BA	0x000000  	0
0x00BC	0x000000  	0
0x00BE	0x000000  	0
0x00C0	0x000000  	0
0x00C2	0x000000  	0
0x00C4	0x000000  	0
0x00C6	0x000000  	0
0x00C8	0x000000  	0
0x00CA	0x000000  	0
0x00CC	0x000000  	0
0x00CE	0x000000  	0
0x00D0	0x000000  	0
0x00D2	0x000000  	0
0x00D4	0x000000  	0
0x00D6	0x000000  	0
0x00D8	0x000000  	0
0x00DA	0x000000  	0
0x00DC	0x000000  	0
0x00DE	0x000000  	0
0x00E0	0x000000  	0
0x00E2	0x000000  	0
0x00E4	0x000000  	0
0x00E6	0x000000  	0
0x00E8	0x000000  	0
0x00EA	0x000000  	0
0x00EC	0x000000  	0
0x00EE	0x000000  	0
0x00F0	0x000000  	0
0x00F2	0x000000  	0
0x00F4	0x000000  	0
0x00F6	0x000000  	0
0x00F8	0x000000  	0
0x00FA	0x000000  	0
0x00FC	0x000000  	0
0x00FE	0x000000  	0
0x0100	0x000000  	0
0x0102	0x000000  	0
0x0104	0x000000  	0
0x0106	0x000000  	0
0x0108	0x000000  	0
0x010A	0x000000  	0
0x010C	0x000000  	0
0x010E	0x000000  	0
0x0110	0x000000  	0
0x0112	0x000000  	0
0x0114	0x000000  	0
0x0116	0x000000  	0
0x0118	0x000000  	0
0x011A	0x000000  	0
0x011C	0x000000  	0
0x011E	0x000000  	0
0x0120	0x000000  	0
0x0122	0x000000  	0
0x0124	0x000000  	0
0x0126	0x000000  	0
0x0128	0x000000  	0
0x012A	0x000000  	0
0x012C	0x000000  	0
0x012E	0x000000  	0
0x0130	0x000000  	0
0x0132	0x000000  	0
0x0134	0x000000  	0
0x0136	0x000000  	0
0x0138	0x000000  	0
0x013A	0x000000  	0
0x013C	0x000000  	0
0x013E	0x000000  	0
0x0140	0x000000  	0
0x0142	0x000000  	0
0x0144	0x000000  	0
0x0146	0x000000  	0
0x0148	0x000000  	0
0x014A	0x000000  	0
0x014C	0x000000  	0
0x014E	0x000000  	0
0x0150	0x000000  	0
0x0152	0x000000  	0
0x0154	0x000000  	0
0x0156	0x000000  	0
0x0158	0x000000  	0
0x015A	0x000000  	0
0x015C	0x000000  	0
0x015E	0x000000  	0
0x0160	0x000000  	0
0x0162	0x000000  	0
0x0164	0x000000  	0
0x0166	0x000000  	0
0x0168	0x000000  	0
0x016A	0x000000  	0
0x016C	0x000000  	0
0x016E	0x000000  	0
0x0170	0x000000  	0
0x0172	0x000000  	0
0x0174	0x000000  	0
0x0176	0x000000  	0
0x0178	0x000000  	0
0x017A	0x000000  	0
0x017C	0x000000  	0
0x017E	0x000000  	0
0x0180	0x000000  	0
0x0182	0x000000  	0
0x0184	0x000000  	0
0x0186	0x000000  	0
0x0188	0x000000  	0
0x018A	0x000000  	0
0x018C	0x000000  	0
0x018E	0x000000  	0
0x0190	0x000000  	0
0x0192	0x000000  	0
0x0194	0x000000  	0
0x0196	0x000000  	0
0x0198	0x000000  	0
0x019A	0x000000  	0
0x019C	0x000000  	0
0x019E	0x000000  	0
0x01A0	0x000000  	0
0x01A2	0x000000  	0
0x01A4	0x000000  	0
0x01A6	0x000000  	0
0x01A8	0x000000  	0
0x01AA	0x000000  	0
0x01AC	0x000000  	0
0x01AE	0x000000  	0
0x01B0	0x000000  	0
0x01B2	0x000000  	0
0x01B4	0x000000  	0
0x01B6	0x000000  	0
0x01B8	0x000000  	0
0x01BA	0x000000  	0
0x01BC	0x000000  	0
0x01BE	0x000000  	0
0x01C0	0x000000  	0
0x01C2	0x000000  	0
0x01C4	0x000000  	0
0x01C6	0x000000  	0
0x01C8	0x000000  	0
0x01CA	0x000000  	0
0x01CC	0x000000  	0
0x01CE	0x000000  	0
0x01D0	0x000000  	0
0x01D2	0x000000  	0
0x01D4	0x000000  	0
0x01D6	0x000000  	0
0x01D8	0x000000  	0
0x01DA	0x000000  	0
0x01DC	0x000000  	0
0x01DE	0x000000  	0
0x01E0	0x000000  	0
0x01E2	0x000000  	0
0x01E4	0x000000  	0
0x01E6	0x000000  	0
0x01E8	0x000000  	0
0x01EA	0x000000  	0
0x01EC	0x000000  	0
0x01EE	0x000000  	0
0x01F0	0x000000  	0
0x01F2	0x000000  	0
0x01F4	0x000000  	0
0x01F6	0x000000  	0
0x01F8	0x000000  	0
0x01FA	0x000000  	0
0x01FC	0x000000  	0
0x01FE	0x000000  	0
_main:
0x0B26	0x20812F  	MOV	#2066, W15
0x0B28	0x20FFF0  	MOV	#4095, W0
0x0B2A	0xB7A020  	MOV	WREG, SPLIM
0x0B2C	0x200000  	MOV	#0, W0
0x0B2E	0xB7A034  	MOV	WREG, PSVPAG
0x0B30	0x200040  	MOV	#4, W0
0x0B32	0xB72044  	IOR	CORCON
0x0B34	0x781F8A  	PUSH	W10
0x0B36	0x781F8B  	PUSH	W11
0x0B38	0xEF24E0  	CLR	ANSA
0x0B3A	0xEF24E2  	CLR	ANSB
0x0B3C	0xA922C4  	BCLR	LATA1_bit, BitPos(LATA1_bit+0)
0x0B3E	0xA902C0  	BCLR	TRISA0_bit, BitPos(TRISA0_bit+0)
0x0B40	0xA922C0  	BCLR	TRISA1_bit, BitPos(TRISA1_bit+0)
0x0B42	0xA822C9  	BSET	TRISB9_bit, BitPos(TRISB9_bit+0)
0x0B44	0xA902C9  	BCLR	TRISB8_bit, BitPos(TRISB8_bit+0)
0x0B46	0xA982C9  	BCLR	TRISB12_bit, BitPos(TRISB12_bit+0)
0x0B48	0xA9A2C9  	BCLR	TRISB13_bit, BitPos(TRISB13_bit+0)
0x0B4A	0xA9C2C9  	BCLR	TRISB14_bit, BitPos(TRISB14_bit+0)
0x0B4C	0xA9E2C8  	BCLR	TRISB7_bit, BitPos(TRISB7_bit+0)
0x0B4E	0xEF2744  	CLR	CLKDIV
0x0B50	0xA8A064  	BSET	CN21IE_bit, BitPos(CN21IE_bit+0)
0x0B52	0xA880AD  	BSET	CNIP_0_bit, BitPos(CNIP_0_bit+0)
0x0B54	0xA8A0AD  	BSET	CNIP_1_bit, BitPos(CNIP_1_bit+0)
0x0B56	0xA8C0AD  	BSET	CNIP_2_bit, BitPos(CNIP_2_bit+0)
0x0B58	0xA96086  	BCLR	CNIF_bit, BitPos(CNIF_bit+0)
0x0B5A	0xA86096  	BSET	CNIE_bit, BitPos(CNIE_bit+0)
0x0B5C	0xEF2100  	CLR	TMR1
0x0B5E	0xA9E105  	BCLR	TON_T1CON_bit, BitPos(TON_T1CON_bit+0)
0x0B60	0xA88104  	BSET	TCKPS_0_bit, BitPos(TCKPS_0_bit+0)
0x0B62	0xA9A104  	BCLR	TCKPS_1_bit, BitPos(TCKPS_1_bit+0)
0x0B64	0x210001  	MOV	#4096, W1
0x0B66	0x200A40  	MOV	#lo_addr(IPC0), W0
0x0B68	0x708810  	IOR	W1, [W0], [W0]
0x0B6A	0xA96084  	BCLR	T1IF_bit, BitPos(T1IF_bit+0)
0x0B6C	0xA86094  	BSET	T1IE_bit, BitPos(T1IE_bit+0)
0x0B6E	0xA8E105  	BSET	TON_T1CON_bit, BitPos(TON_T1CON_bit+0)
0x0B70	0xA86110  	BSET	T32_T2CON_bit, BitPos(T32_T2CON_bit+0)
0x0B72	0xA9E111  	BCLR	TON_T2CON_bit, BitPos(TON_T2CON_bit+0)
0x0B74	0xA98110  	BCLR	TCKPS_0_T2CON_bit, BitPos(TCKPS_0_T2CON_bit+0)
0x0B76	0xA9A110  	BCLR	TCKPS_1_T2CON_bit, BitPos(TCKPS_1_T2CON_bit+0)
0x0B78	0x210001  	MOV	#4096, W1
0x0B7A	0x200A80  	MOV	#lo_addr(IPC2), W0
0x0B7C	0x708810  	IOR	W1, [W0], [W0]
0x0B7E	0xEF210C  	CLR	PR2
0x0B80	0xEF210E  	CLR	PR3
0x0B82	0xEF2108  	CLR	TMR3HLD
0x0B84	0xEF2106  	CLR	TMR2
0x0B86	0xA90085  	BCLR	T3IF_bit, BitPos(T3IF_bit+0)
0x0B88	0xA80095  	BSET	T3IE_bit, BitPos(T3IE_bit+0)
0x0B8A	0xA8E111  	BSET	TON_T2CON_bit, BitPos(TON_T2CON_bit+0)
0x0B8C	0xA8611E  	BSET	T32_T4CON_bit, BitPos(T32_T4CON_bit+0)
0x0B8E	0xA9E11F  	BCLR	TON_T4CON_bit, BitPos(TON_T4CON_bit+0)
0x0B90	0xA9811E  	BCLR	TCKPS_0_T4CON_bit, BitPos(TCKPS_0_T4CON_bit+0)
0x0B92	0xA9A11E  	BCLR	TCKPS_1_T4CON_bit, BitPos(TCKPS_1_T4CON_bit+0)
0x0B94	0x210001  	MOV	#4096, W1
0x0B96	0x200B20  	MOV	#lo_addr(IPC7), W0
0x0B98	0x708810  	IOR	W1, [W0], [W0]
0x0B9A	0x271000  	MOV	#28928, W0
0x0B9C	0xB7A11A  	MOV	WREG, PR4
0x0B9E	0x200020  	MOV	#2, W0
0x0BA0	0xB7A11C  	MOV	WREG, PR5
0x0BA2	0xEF2116  	CLR	TMR5HLD
0x0BA4	0xEF2114  	CLR	TMR4
0x0BA6	0xA98087  	BCLR	T5IF_bit, BitPos(T5IF_bit+0)
0x0BA8	0xA88097  	BSET	T5IE_bit, BitPos(T5IE_bit+0)
0x0BAA	0xA8E11F  	BSET	TON_T4CON_bit, BitPos(TON_T4CON_bit+0)
0x0BAC	0xEF2000  	CLR	W0
0x0BAE	0xEF2002  	CLR	W1
0x0BB0	0x884000  	MOV	W0, _RPM
0x0BB2	0x884011  	MOV	W1, _RPM+2
0x0BB4	0xEF2000  	CLR	W0
0x0BB6	0xEF2002  	CLR	W1
0x0BB8	0x884020  	MOV	W0, _CylinderFiringPeriod
0x0BBA	0x884031  	MOV	W1, _CylinderFiringPeriod+2
0x0BBC	0x2FFFF0  	MOV	#65535, W0
0x0BBE	0x884040  	MOV	W0, _Max_Dwell_Exceeded
L__main24:
0x0BC0	0x22580A  	MOV	#9600, W10
0x0BC2	0x20000B  	MOV	#0, W11
0x0BC4	0x07FD37  	RCALL	_UART1_Init
0x0BC6	0x07FDFA  	RCALL	_UART_Data_Ready
0x0BC8	0xE10060  	CP	W0, #0
0x0BCA	0x360001  	BRA LEU	L__main29
L__main46:
0x0BCC	0x07FDF0  	RCALL	_UART_Read
L__main29:
0x0BCE	0xAAC2CD  	BTG	LATB14_bit, BitPos(LATB14_bit+0)
0x0BD0	0xAAE2CC  	BTG	LATB7_bit, BitPos(LATB7_bit+0)
0x0BD2	0x37FFF6  	BRA	L__main24
L_end_main:
0x0BD4	0x7805CF  	POP	W11
0x0BD6	0x78054F  	POP	W10
L__main_end_loop:
0x0BD8	0x37FFFF  	BRA	L__main_end_loop
; end of _main
_UART1_Init:
0x0634	0xFA0008  	LNK	#8
0x0636	0x2FFFF0  	MOV	#lo_addr(_UART1_Write), W0
0x0638	0x884070  	MOV	W0, _UART_Wr_Ptr
0x063A	0x202180  	MOV	#lo_addr(_UART1_Read), W0
0x063C	0x884080  	MOV	W0, _UART_Rd_Ptr
0x063E	0x202220  	MOV	#lo_addr(_UART1_Data_Ready), W0
0x0640	0x884060  	MOV	W0, _UART_Rdy_Ptr
0x0642	0x202000  	MOV	#lo_addr(_UART1_TX_Idle), W0
0x0644	0x884050  	MOV	W0, _UART_TX_Idle_Ptr
0x0646	0xEF2220  	CLR	U1MODE
0x0648	0x280000  	MOV	#32768, W0
0x064A	0xB7A222  	MOV	WREG, U1STA
0x064C	0xA96220  	BCLR	U1MODE, #3
0x064E	0x07FEF5  	RCALL	_Get_Fosc_kHz
0x0650	0x203E82  	MOV	#1000, W2
0x0652	0x200003  	MOV	#0, W3
0x0654	0x07FEF6  	RCALL	__Multiply_32x32
; tmp start address is: 12 (W6)
0x0656	0xBE0300  	MOV.D	W0, W6
0x0658	0x07FEED  	RCALL	_Get_Fosc_Per_Cyc
0x065A	0xEB0080  	CLR	W1
0x065C	0xD10081  	LSR	W1, W1
0x065E	0xD38000  	RRC	W0, W0
0x0660	0x400264  	ADD	W0, #4, W4
0x0662	0x4882E0  	ADDC	W1, #0, W5
0x0664	0xBE010A  	MOV.D	W10, W2
L__UART1_Init183:
0x0666	0xE90204  	DEC	W4, W4
0x0668	0x350003  	BRA LT	L__UART1_Init184
0x066A	0xD00102  	SL	W2, W2
0x066C	0xD28183  	RLC	W3, W3
0x066E	0x37FFFB  	BRA	L__UART1_Init183
L__UART1_Init184:
0x0670	0x980702  	MOV	W2, [W14+0]
0x0672	0x980713  	MOV	W3, [W14+2]
0x0674	0xBE9F86  	PUSH.D	W6
0x0676	0xBE9F8A  	PUSH.D	W10
0x0678	0xBE0006  	MOV.D	W6, W0
0x067A	0xEB8200  	SETM	W4
0x067C	0x07FF14  	RCALL	__Modulus_32x32
0x067E	0xBE054F  	POP.D	W10
0x0680	0xBE034F  	POP.D	W6
0x0682	0x980720  	MOV	W0, [W14+4]
0x0684	0x980731  	MOV	W1, [W14+6]
0x0686	0xBE9F8A  	PUSH.D	W10
; tmp end address is: 12 (W6)
0x0688	0xBE0006  	MOV.D	W6, W0
0x068A	0x90010E  	MOV	[W14+0], W2
0x068C	0x90019E  	MOV	[W14+2], W3
0x068E	0xEB8200  	SETM	W4
0x0690	0x07FEE1  	RCALL	__Divide_32x32
0x0692	0xBE054F  	POP.D	W10
; tmp start address is: 6 (W3)
0x0694	0x780180  	MOV	W0, W3
0x0696	0x780201  	MOV	W1, W4
0x0698	0x470060  	ADD	W14, #0, W0
0x069A	0xD18150  	ASR	[++W0], W2
0x069C	0xD380C0  	RRC	[--W0], W1
0x069E	0x470064  	ADD	W14, #4, W0
0x06A0	0xE10830  	CP	W1, [W0++]
0x06A2	0xE19020  	CPB	W2, [W0--]
0x06A4	0x3D0003  	BRA GE	L__UART1_Init174
L__UART1_Init185:
; tmp start address is: 2 (W1)
0x06A6	0x4180E1  	ADD	W3, #1, W1
0x06A8	0x4A0160  	ADDC	W4, #0, W2
; tmp end address is: 6 (W3)
; tmp end address is: 2 (W1)
0x06AA	0x370002  	BRA	L__UART1_Init2
L__UART1_Init174:
0x06AC	0x780083  	MOV	W3, W1
0x06AE	0x780104  	MOV	W4, W2
L__UART1_Init2:
; tmp start address is: 2 (W1)
0x06B0	0xE10860  	CP	W1, #0
0x06B2	0xE19060  	CPB	W2, #0
0x06B4	0x3A002F  	BRA NZ	L__UART1_Init176
L__UART1_Init186:
; tmp end address is: 2 (W1)
0x06B6	0x07FEC1  	RCALL	_Get_Fosc_kHz
0x06B8	0x203E82  	MOV	#1000, W2
0x06BA	0x200003  	MOV	#0, W3
0x06BC	0x07FEC2  	RCALL	__Multiply_32x32
; tmp start address is: 12 (W6)
0x06BE	0xBE0300  	MOV.D	W0, W6
0x06C0	0x07FEB9  	RCALL	_Get_Fosc_Per_Cyc
0x06C2	0xEB0080  	CLR	W1
0x06C4	0xD10081  	LSR	W1, W1
0x06C6	0xD38000  	RRC	W0, W0
0x06C8	0x400262  	ADD	W0, #2, W4
0x06CA	0x4882E0  	ADDC	W1, #0, W5
0x06CC	0xBE010A  	MOV.D	W10, W2
L__UART1_Init187:
0x06CE	0xE90204  	DEC	W4, W4
0x06D0	0x350003  	BRA LT	L__UART1_Init188
0x06D2	0xD00102  	SL	W2, W2
0x06D4	0xD28183  	RLC	W3, W3
0x06D6	0x37FFFB  	BRA	L__UART1_Init187
L__UART1_Init188:
0x06D8	0x980702  	MOV	W2, [W14+0]
0x06DA	0x980713  	MOV	W3, [W14+2]
0x06DC	0xBE9F86  	PUSH.D	W6
0x06DE	0xBE0006  	MOV.D	W6, W0
0x06E0	0xEB8200  	SETM	W4
0x06E2	0x07FEE1  	RCALL	__Modulus_32x32
0x06E4	0xBE034F  	POP.D	W6
0x06E6	0x980720  	MOV	W0, [W14+4]
0x06E8	0x980731  	MOV	W1, [W14+6]
0x06EA	0xBE0006  	MOV.D	W6, W0
0x06EC	0x90010E  	MOV	[W14+0], W2
0x06EE	0x90019E  	MOV	[W14+2], W3
0x06F0	0xEB8200  	SETM	W4
0x06F2	0x07FEB0  	RCALL	__Divide_32x32
; tmp end address is: 12 (W6)
; tmp start address is: 6 (W3)
0x06F4	0x780180  	MOV	W0, W3
0x06F6	0x780201  	MOV	W1, W4
0x06F8	0x470060  	ADD	W14, #0, W0
0x06FA	0xD18150  	ASR	[++W0], W2
0x06FC	0xD380C0  	RRC	[--W0], W1
0x06FE	0x470064  	ADD	W14, #4, W0
0x0700	0xE10830  	CP	W1, [W0++]
0x0702	0xE19020  	CPB	W2, [W0--]
0x0704	0x3D0003  	BRA GE	L__UART1_Init175
L__UART1_Init189:
; tmp start address is: 2 (W1)
0x0706	0x4180E1  	ADD	W3, #1, W1
0x0708	0x4A0160  	ADDC	W4, #0, W2
; tmp end address is: 6 (W3)
; tmp end address is: 2 (W1)
0x070A	0x370002  	BRA	L__UART1_Init8
L__UART1_Init175:
0x070C	0x780083  	MOV	W3, W1
0x070E	0x780104  	MOV	W4, W2
L__UART1_Init8:
; tmp start address is: 2 (W1)
0x0710	0xA86220  	BSET	U1MODE, #3
; tmp end address is: 2 (W1)
0x0712	0x370000  	BRA	L__UART1_Init5
L__UART1_Init176:
L__UART1_Init5:
; tmp start address is: 2 (W1)
0x0714	0x202280  	MOV	#lo_addr(U1BRG), W0
0x0716	0x508861  	SUB	W1, #1, [W0]
; tmp end address is: 2 (W1)
0x0718	0xA92222  	BCLR	U1STA, #1
0x071A	0xA8E221  	BSET	U1MODE, #15
0x071C	0xA84223  	BSET	U1STA, #10
0x071E	0x07FE85  	RCALL	_Delay_10ms
L_end_UART1_Init:
0x0720	0xFA8000  	ULNK
0x0722	0x060000  	RETURN
; end of _UART1_Init
_Get_Fosc_kHz:
; Result start address is: 4 (W2)
0x043A	0x27D002  	MOV	#32000, W2
0x043C	0x200003  	MOV	#0, W3
0x043E	0xBE0002  	MOV.D	W2, W0
; Result end address is: 4 (W2)
L_end_Get_Fosc_kHz:
0x0440	0x060000  	RETURN
; end of _Get_Fosc_kHz
_Get_Fosc_Per_Cyc:
; Result start address is: 2 (W1)
0x0434	0x200021  	MOV	#2, W1
0x0436	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_Get_Fosc_Per_Cyc:
0x0438	0x060000  	RETURN
; end of _Get_Fosc_Per_Cyc
_Delay_10ms:
0x042A	0x2D0557  	MOV	#53333, W7
L__Delay_10ms51:
0x042C	0xED200E  	DEC	W7
0x042E	0x3AFFFE  	BRA NZ	L__Delay_10ms51
0x0430	0x000000  	NOP
L_end_Delay_10ms:
0x0432	0x060000  	RETURN
; end of _Delay_10ms
__Multiply_32x32:
0x0442	0xFA0000  	LNK	#0
0x0444	0xB80A02  	MUL.UU	W1, W2, W4
0x0446	0x880050  	MOV	W0, W5
0x0448	0xB80002  	MUL.UU	W0, W2, W0
0x044A	0x420081  	ADD	W4, W1, W1
0x044C	0xB82A03  	MUL.UU	W5, W3, W4
0x044E	0x420081  	ADD	W4, W1, W1
L_end__Multiply_32x32:
0x0450	0xFA8000  	ULNK
0x0452	0x060000  	RETURN
; end of __Multiply_32x32
__Modulus_32x32:
0x04A6	0xFA0000  	LNK	#0
0x04A8	0x070002  	RCALL	Modulus_32x32___testsus
0x04AA	0x0000000404FA  	GOTO	the_end_Modulus_32x32
Modulus_32x32___testsus:
0x04AE	0xE20008  	CP0	W4
0x04B0	0x3A0002  	BRA NZ	Modulus_32x32___modsi3
0x04B2	0x070010  	RCALL	Modulus_32x32___umodsi3
0x04B4	0x060000  	RETURN
Modulus_32x32___modsi3:
0x04B6	0x781F81  	MOV	W1, [W15++]
0x04B8	0xE20002  	CP0	W1
0x04BA	0x3D0002  	BRA GE	Modulus_32x32_modtestb
0x04BC	0x100060  	SUBR	W0, #0, W0
0x04BE	0x1880E0  	SUBBR	W1, #0, W1
Modulus_32x32_modtestb:
0x04C0	0xE20006  	CP0	W3
0x04C2	0x3D0002  	BRA GE	Modulus_32x32_calcrem
0x04C4	0x110160  	SUBR	W2, #0, W2
0x04C6	0x1981E0  	SUBBR	W3, #0, W3
Modulus_32x32_calcrem:
0x04C8	0x070005  	RCALL	Modulus_32x32___umodsi3
0x04CA	0xE0004F  	CP0	[--W15]
0x04CC	0x3B0002  	BRA NN	Modulus_32x32_exitr
0x04CE	0x100060  	SUBR	W0, #0, W0
0x04D0	0x1880E0  	SUBBR	W1, #0, W1
Modulus_32x32_exitr:
0x04D2	0x060000  	RETURN
Modulus_32x32___umodsi3:
0x04D4	0x070002  	RCALL	Modulus_32x32___udivsi3
0x04D6	0xBE8004  	MOV.D	W4, W0
0x04D8	0x060000  	RETURN
Modulus_32x32___udivsi3:
0x04DA	0xB82260  	MUL.UU	W4, #0, W4
0x04DC	0x200206  	MOV	#32, W6
Modulus_32x32_nextbit:
0x04DE	0xD00000  	SL	W0, W0
0x04E0	0xD28081  	RLC	W1, W1
0x04E2	0xD28204  	RLC	W4, W4
0x04E4	0xD28285  	RLC	W5, W5
0x04E6	0xA80000  	BSET	W0, #0
0x04E8	0x520202  	SUB	W4, W2, W4
0x04EA	0x5A8283  	SUBB	W5, W3, W5
0x04EC	0x3B0003  	BRA NN	Modulus_32x32_iterate
0x04EE	0x420202  	ADD	W4, W2, W4
0x04F0	0x4A8283  	ADDC	W5, W3, W5
0x04F2	0xA10000  	BCLR	W0, #0
Modulus_32x32_iterate:
0x04F4	0xE90306  	DEC	W6, W6
0x04F6	0x3AFFF3  	BRA NZ	Modulus_32x32_nextbit
0x04F8	0x060000  	RETURN
the_end_Modulus_32x32:
L_end__Modulus_32x32:
0x04FA	0xFA8000  	ULNK
0x04FC	0x060000  	RETURN
; end of __Modulus_32x32
__Divide_32x32:
0x0454	0xFA0000  	LNK	#0
0x0456	0x070002  	RCALL	Divide_32x32___testsus
0x0458	0x0000000404A2  	GOTO	the_end_Divide_32x32
Divide_32x32___testsus:
0x045C	0xE20008  	CP0	W4
0x045E	0x3A0002  	BRA NZ	Divide_32x32___divsi3
0x0460	0x070010  	RCALL	Divide_32x32___udivsi3
0x0462	0x060000  	RETURN
Divide_32x32___divsi3:
0x0464	0x689F83  	XOR	W1, W3, [W15++]
0x0466	0xE20002  	CP0	W1
0x0468	0x3D0002  	BRA GE	Divide_32x32_divtestb
0x046A	0x100060  	SUBR	W0, #0, W0
0x046C	0x1880E0  	SUBBR	W1, #0, W1
Divide_32x32_divtestb:
0x046E	0xE20006  	CP0	W3
0x0470	0x3D0002  	BRA GE	Divide_32x32_calcquot
0x0472	0x110160  	SUBR	W2, #0, W2
0x0474	0x1981E0  	SUBBR	W3, #0, W3
Divide_32x32_calcquot:
0x0476	0x070005  	RCALL	Divide_32x32___udivsi3
0x0478	0xE0004F  	CP0	[--W15]
0x047A	0x3B0002  	BRA NN	Divide_32x32_returnq
0x047C	0x100060  	SUBR	W0, #0, W0
0x047E	0x1880E0  	SUBBR	W1, #0, W1
Divide_32x32_returnq:
0x0480	0x060000  	RETURN
Divide_32x32___udivsi3:
0x0482	0xB82260  	MUL.UU	W4, #0, W4
0x0484	0x200206  	MOV	#32, W6
Divide_32x32_nextbit:
0x0486	0xD00000  	SL	W0, W0
0x0488	0xD28081  	RLC	W1, W1
0x048A	0xD28204  	RLC	W4, W4
0x048C	0xD28285  	RLC	W5, W5
0x048E	0xA80000  	BSET	W0, #0
0x0490	0x520202  	SUB	W4, W2, W4
0x0492	0x5A8283  	SUBB	W5, W3, W5
0x0494	0x3B0003  	BRA NN	Divide_32x32_iterate
0x0496	0x420202  	ADD	W4, W2, W4
0x0498	0x4A8283  	ADDC	W5, W3, W5
0x049A	0xA10000  	BCLR	W0, #0
Divide_32x32_iterate:
0x049C	0xE90306  	DEC	W6, W6
0x049E	0x3AFFF3  	BRA NZ	Divide_32x32_nextbit
0x04A0	0x060000  	RETURN
the_end_Divide_32x32:
L_end__Divide_32x32:
0x04A2	0xFA8000  	ULNK
0x04A4	0x060000  	RETURN
; end of __Divide_32x32
_UART_Data_Ready:
0x07BC	0xFA0000  	LNK	#0
0x07BE	0x804060  	MOV	_UART_Rdy_Ptr, W0
0x07C0	0x010000  	CALL	W0
; Result start address is: 2 (W1)
0x07C2	0x780080  	MOV	W0, W1
0x07C4	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_UART_Data_Ready:
0x07C6	0xFA8000  	ULNK
0x07C8	0x060000  	RETURN
; end of _UART_Data_Ready
_UART1_Read:
0x0218	0xFA0000  	LNK	#0
; Result start address is: 2 (W1)
0x021A	0x801131  	MOV	U1RXREG, W1
0x021C	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_UART1_Read:
0x021E	0xFA8000  	ULNK
0x0220	0x060000  	RETURN
; end of _UART1_Read
_UART1_Data_Ready:
0x0222	0xFA0000  	LNK	#0
; Result start address is: 2 (W1)
0x0224	0xEF2002  	CLR	W1
0x0226	0xAF0222  	BTSC	U1STA, #0
0x0228	0xEC2002  	INC	W1
0x022A	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_UART1_Data_Ready:
0x022C	0xFA8000  	ULNK
0x022E	0x060000  	RETURN
; end of _UART1_Data_Ready
_UART1_TX_Idle:
0x0200	0xFA0000  	LNK	#0
; Result start address is: 2 (W1)
0x0202	0xEF2002  	CLR	W1
0x0204	0xAF0223  	BTSC	U1STA, #8
0x0206	0xEC2002  	INC	W1
0x0208	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_UART1_TX_Idle:
0x020A	0xFA8000  	ULNK
0x020C	0x060000  	RETURN
; end of _UART1_TX_Idle
_UART2_Read:
0x020E	0xFA0000  	LNK	#0
; Result start address is: 2 (W1)
0x0210	0x8011B1  	MOV	U2RXREG, W1
0x0212	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_UART2_Read:
0x0214	0xFA8000  	ULNK
0x0216	0x060000  	RETURN
; end of _UART2_Read
_UART2_Data_Ready:
0x040E	0xFA0000  	LNK	#0
; Result start address is: 2 (W1)
0x0410	0xEF2002  	CLR	W1
0x0412	0xAF0232  	BTSC	U2STA, #0
0x0414	0xEC2002  	INC	W1
0x0416	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_UART2_Data_Ready:
0x0418	0xFA8000  	ULNK
0x041A	0x060000  	RETURN
; end of _UART2_Data_Ready
_UART2_TX_Idle:
0x041C	0xFA0000  	LNK	#0
; Result start address is: 2 (W1)
0x041E	0xEF2002  	CLR	W1
0x0420	0xAF0233  	BTSC	U2STA, #8
0x0422	0xEC2002  	INC	W1
0x0424	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_UART2_TX_Idle:
0x0426	0xFA8000  	ULNK
0x0428	0x060000  	RETURN
; end of _UART2_TX_Idle
_UART_Read:
0x07AE	0xFA0000  	LNK	#0
0x07B0	0x804080  	MOV	_UART_Rd_Ptr, W0
0x07B2	0x010000  	CALL	W0
; Result start address is: 2 (W1)
0x07B4	0x780080  	MOV	W0, W1
0x07B6	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_UART_Read:
0x07B8	0xFA8000  	ULNK
0x07BA	0x060000  	RETURN
; end of _UART_Read
_interrupt_Timer5_Dwell_Delay:
0x0AEA	0xF80034  	PUSH	PSVPAG
0x0AEC	0xF80036  	PUSH	RCOUNT
0x0AEE	0x781F80  	PUSH	W0
0x0AF0	0x200020  	MOV	#2, W0
0x0AF2	0x09000C  	REPEAT	#12
0x0AF4	0x781FB0  	PUSH	[W0++]
0x0AF6	0x208080  	MOV	#lo_addr(_Max_Dwell_Exceeded), W0
0x0AF8	0xE00010  	CP0	[W0]
0x0AFA	0x320002  	BRA Z	L__interrupt_Timer5_Dwell_Delay3
L__interrupt_Timer5_Dwell_Delay33:
0x0AFC	0xA922C4  	BCLR	LATA1_bit, BitPos(LATA1_bit+0)
0x0AFE	0x370001  	BRA	L__interrupt_Timer5_Dwell_Delay4
L__interrupt_Timer5_Dwell_Delay3:
0x0B00	0xA822C4  	BSET	LATA1_bit, BitPos(LATA1_bit+0)
L__interrupt_Timer5_Dwell_Delay4:
0x0B02	0xA9E11F  	BCLR	TON_T4CON_bit, BitPos(TON_T4CON_bit+0)
0x0B04	0x271000  	MOV	#28928, W0
0x0B06	0xB7A11A  	MOV	WREG, PR4
0x0B08	0x200020  	MOV	#2, W0
0x0B0A	0xB7A11C  	MOV	WREG, PR5
0x0B0C	0xEF2116  	CLR	TMR5HLD
0x0B0E	0xEF2114  	CLR	TMR4
0x0B10	0xA8E11F  	BSET	TON_T4CON_bit, BitPos(TON_T4CON_bit+0)
0x0B12	0x2FFFF0  	MOV	#65535, W0
0x0B14	0x884040  	MOV	W0, _Max_Dwell_Exceeded
0x0B16	0xA98087  	BCLR	T5IF_bit, BitPos(T5IF_bit+0)
L_end_interrupt_Timer5_Dwell_Delay:
0x0B18	0x2001A0  	MOV	#26, W0
0x0B1A	0x09000C  	REPEAT	#12
0x0B1C	0x78104F  	POP	[W0--]
0x0B1E	0x78004F  	POP	W0
0x0B20	0xF90036  	POP	RCOUNT
0x0B22	0xF90034  	POP	PSVPAG
0x0B24	0x064000  	RETFIE
; end of _interrupt_Timer5_Dwell_Delay
_interrupt_PinChangeNotification:
0x09D8	0xFA0010  	LNK	#16
0x09DA	0xF80034  	PUSH	PSVPAG
0x09DC	0xF80036  	PUSH	RCOUNT
0x09DE	0x781F80  	PUSH	W0
0x09E0	0x200020  	MOV	#2, W0
0x09E2	0x09000C  	REPEAT	#12
0x09E4	0x781FB0  	PUSH	[W0++]
; PortCopy start address is: 0 (W0)
0x09E6	0xBF82CA  	MOV	PORTB, WREG
0x09E8	0xAE2001  	BTSS	W0, #9
0x09EA	0x370076  	BRA	L__interrupt_PinChangeNotification8
; PortCopy end address is: 0 (W0)
0x09EC	0xA802CD  	BSET	LATB8_bit, BitPos(LATB8_bit+0)
0x09EE	0xA922C4  	BCLR	LATA1_bit, BitPos(LATA1_bit+0)
0x09F0	0xBF8106  	MOV	TMR2, WREG
0x09F2	0x980700  	MOV	W0, [W14+0]
0x09F4	0xBF8108  	MOV	TMR3HLD, WREG
0x09F6	0x980710  	MOV	W0, [W14+2]
0x09F8	0xEF2108  	CLR	TMR3HLD
0x09FA	0xEF2106  	CLR	TMR2
0x09FC	0x90000E  	MOV	[W14+0], W0
0x09FE	0x90009E  	MOV	[W14+2], W1
0x0A00	0x07FEE4  	RCALL	__Long2Float
0x0A02	0x237BD2  	MOV	#14269, W2
0x0A04	0x233863  	MOV	#13190, W3
0x0A06	0x07FF3C  	RCALL	__Mul_FP
0x0A08	0x980720  	MOV	W0, [W14+4]
0x0A0A	0x980731  	MOV	W1, [W14+6]
0x0A0C	0xEF2004  	CLR	W2
0x0A0E	0xEF2006  	CLR	W3
0x0A10	0x884002  	MOV	W2, _RPM
0x0A12	0x884013  	MOV	W3, _RPM+2
0x0A14	0xEF2004  	CLR	W2
0x0A16	0xEF2006  	CLR	W3
0x0A18	0x07FE85  	RCALL	__Compare_Ge_Fp
0x0A1A	0xE00000  	CP0	W0
0x0A1C	0xEF2000  	CLR	W0
0x0A1E	0x340001  	BRA LE	L__interrupt_PinChangeNotification36
0x0A20	0xEEA000  	COM	W0
L__interrupt_PinChangeNotification36:
0x0A22	0xE20000  	CP0	W0
0x0A24	0x32000D  	BRA Z	L__interrupt_PinChangeNotification11
L__interrupt_PinChangeNotification37:
0x0A26	0x90012E  	MOV	[W14+4], W2
0x0A28	0x9001BE  	MOV	[W14+6], W3
0x0A2A	0x200000  	MOV	#0, W0
0x0A2C	0x242701  	MOV	#17008, W1
0x0A2E	0x07FD67  	RCALL	__Div_FP
0x0A30	0x200002  	MOV	#0, W2
0x0A32	0x241003  	MOV	#16640, W3
0x0A34	0x07FD64  	RCALL	__Div_FP
0x0A36	0x200002  	MOV	#0, W2
0x0A38	0x240003  	MOV	#16384, W3
0x0A3A	0x07FF22  	RCALL	__Mul_FP
0x0A3C	0x884000  	MOV	W0, _RPM
0x0A3E	0x884011  	MOV	W1, _RPM+2
L__interrupt_PinChangeNotification11:
0x0A40	0x200002  	MOV	#0, W2
0x0A42	0x2428C3  	MOV	#17036, W3
0x0A44	0x804000  	MOV	_RPM, W0
0x0A46	0x804011  	MOV	_RPM+2, W1
0x0A48	0x07FEAD  	RCALL	__Compare_Le_Fp
0x0A4A	0xE00000  	CP0	W0
0x0A4C	0xEF2000  	CLR	W0
0x0A4E	0x3D0001  	BRA GE	L__interrupt_PinChangeNotification38
0x0A50	0xEEA000  	COM	W0
L__interrupt_PinChangeNotification38:
0x0A52	0x980770  	MOV	W0, [W14+14]
0x0A54	0x2C0002  	MOV	#49152, W2
0x0A56	0x245DA3  	MOV	#17882, W3
0x0A58	0x804000  	MOV	_RPM, W0
0x0A5A	0x804011  	MOV	_RPM+2, W1
0x0A5C	0x07FE63  	RCALL	__Compare_Ge_Fp
0x0A5E	0xE00000  	CP0	W0
0x0A60	0xEF2000  	CLR	W0
0x0A62	0x340001  	BRA LE	L__interrupt_PinChangeNotification39
0x0A64	0xEEA000  	COM	W0
L__interrupt_PinChangeNotification39:
0x0A66	0x9000FE  	MOV	[W14+14], W1
0x0A68	0x708000  	IOR	W1, W0, W0
0x0A6A	0x320004  	BRA Z	L__interrupt_PinChangeNotification14
L__interrupt_PinChangeNotification40:
0x0A6C	0xEF2000  	CLR	W0
0x0A6E	0xEF2002  	CLR	W1
0x0A70	0x884000  	MOV	W0, _RPM
0x0A72	0x884011  	MOV	W1, _RPM+2
L__interrupt_PinChangeNotification14:
0x0A74	0xEF2004  	CLR	W2
0x0A76	0xEF2006  	CLR	W3
0x0A78	0x804000  	MOV	_RPM, W0
0x0A7A	0x804011  	MOV	_RPM+2, W1
0x0A7C	0x07FE53  	RCALL	__Compare_Ge_Fp
0x0A7E	0xE00000  	CP0	W0
0x0A80	0xEF2000  	CLR	W0
0x0A82	0x340001  	BRA LE	L__interrupt_PinChangeNotification41
0x0A84	0xEEA000  	COM	W0
L__interrupt_PinChangeNotification41:
0x0A86	0xE20000  	CP0	W0
0x0A88	0x320026  	BRA Z	L__interrupt_PinChangeNotification17
L__interrupt_PinChangeNotification42:
0x0A8A	0x90002E  	MOV	[W14+4], W0
0x0A8C	0x9000BE  	MOV	[W14+6], W1
0x0A8E	0x2856A2  	MOV	#34154, W2
0x0A90	0x23B283  	MOV	#15144, W3
0x0A92	0x07FE83  	RCALL	__Sub_FP
0x0A94	0x249522  	MOV	#18770, W2
0x0A96	0x2399D3  	MOV	#14749, W3
0x0A98	0x07FE80  	RCALL	__Sub_FP
0x0A9A	0x980740  	MOV	W0, [W14+8]
0x0A9C	0x980751  	MOV	W1, [W14+10]
0x0A9E	0xEF2004  	CLR	W2
0x0AA0	0xEF2006  	CLR	W3
0x0AA2	0x07FE80  	RCALL	__Compare_Le_Fp
0x0AA4	0xE00000  	CP0	W0
0x0AA6	0xEF2000  	CLR	W0
0x0AA8	0x3C0001  	BRA GT	L__interrupt_PinChangeNotification43
0x0AAA	0xEEA000  	COM	W0
L__interrupt_PinChangeNotification43:
0x0AAC	0xE20000  	CP0	W0
0x0AAE	0x320004  	BRA Z	L__interrupt_PinChangeNotification20
L__interrupt_PinChangeNotification44:
0x0AB0	0x249520  	MOV	#18770, W0
0x0AB2	0x2399D1  	MOV	#14749, W1
0x0AB4	0x980740  	MOV	W0, [W14+8]
0x0AB6	0x980751  	MOV	W1, [W14+10]
L__interrupt_PinChangeNotification20:
0x0AB8	0x237BD2  	MOV	#14269, W2
0x0ABA	0x233863  	MOV	#13190, W3
0x0ABC	0x90004E  	MOV	[W14+8], W0
0x0ABE	0x9000DE  	MOV	[W14+10], W1
0x0AC0	0x07FD1E  	RCALL	__Div_FP
0x0AC2	0x07FE35  	RCALL	__Float2Longword
; Dwell_Delay_Count start address is: 4 (W2)
0x0AC4	0xBE0100  	MOV.D	W0, W2
0x0AC6	0xEF2000  	CLR	W0
0x0AC8	0x884040  	MOV	W0, _Max_Dwell_Exceeded
0x0ACA	0xA9E11F  	BCLR	TON_T4CON_bit, BitPos(TON_T4CON_bit+0)
0x0ACC	0x8808D2  	MOV	W2, PR4
0x0ACE	0x8808E3  	MOV	W3, PR5
; Dwell_Delay_Count end address is: 4 (W2)
0x0AD0	0xEF2116  	CLR	TMR5HLD
0x0AD2	0xEF2114  	CLR	TMR4
0x0AD4	0xA8E11F  	BSET	TON_T4CON_bit, BitPos(TON_T4CON_bit+0)
L__interrupt_PinChangeNotification17:
0x0AD6	0xA902CD  	BCLR	LATB8_bit, BitPos(LATB8_bit+0)
L__interrupt_PinChangeNotification8:
0x0AD8	0xA96086  	BCLR	CNIF_bit, BitPos(CNIF_bit+0)
L_end_interrupt_PinChangeNotification:
0x0ADA	0x2001A0  	MOV	#26, W0
0x0ADC	0x09000C  	REPEAT	#12
0x0ADE	0x78104F  	POP	[W0--]
0x0AE0	0x78004F  	POP	W0
0x0AE2	0xF90036  	POP	RCOUNT
0x0AE4	0xF90034  	POP	PSVPAG
0x0AE6	0xFA8000  	ULNK
0x0AE8	0x064000  	RETFIE
; end of _interrupt_PinChangeNotification
__Long2Float:
0x07CA	0xFA0000  	LNK	#0
0x07CC	0x070002  	RCALL	LL_intro_Long2Float
0x07CE	0x00000004087C  	GOTO	the_end__Long2Float
LL_intro_Long2Float:
0x07D2	0xE20004  	CP0	W2
0x07D4	0x3A0006  	BRA NZ	Longint2Float__floatsisf
Longword2Float__floatuisf:
0x07D6	0xEB0500  	CLR	W10
0x07D8	0xE20002  	CP0	W1
0x07DA	0x3E000F  	BRA GTU	Long2Float_notspecial
0x07DC	0xE20000  	CP0	W0
0x07DE	0x320027  	BRA Z	Long2Float_return0
0x07E0	0x37000C  	BRA	Long2Float_notspecial
Longint2Float__floatsisf:
0x07E2	0x8800A1  	MOV	W1, W10
0x07E4	0xE20002  	CP0	W1
0x07E6	0x350004  	BRA LT	Longint2Float_negative
0x07E8	0x3C0008  	BRA GT	Long2Float_notspecial
0x07EA	0xE20000  	CP0	W0
0x07EC	0x320020  	BRA Z	Long2Float_return0
0x07EE	0x370005  	BRA	Long2Float_notspecial
Longint2Float_negative:
0x07F0	0x100060  	SUBR	W0, #0, W0
0x07F2	0x1880E0  	SUBBR	W1, #0, W1
0x07F4	0x3B0002  	BRA NN	Long2Float_notspecial
0x07F6	0x2CF001  	MOV	#52992, W1
0x07F8	0x37001A  	BRA	Long2Float_return0
Long2Float_notspecial:
0x07FA	0xBE8400  	MOV.D	W0, W8
0x07FC	0xB81160  	MUL.UU	W2, #0, W2
0x07FE	0x20096B  	MOV	#150, W11
0x0800	0xCF8209  	FF1L	W9, W4
0x0802	0x390002  	BRA NC	Long2Float_fixshift
0x0804	0xCF8208  	FF1L	W8, W4
0x0806	0xB04104  	ADD.B	#16, W4
Long2Float_fixshift:
0x0808	0x524269  	SUB.B	W4, #9, W4
0x080A	0x32000E  	BRA Z	Long2Float_round
0x080C	0x3B0008  	BRA NN	Long2Float_shiftleft
Long2Float_shiftright:
0x080E	0x718182  	IOR	W3, W2, W3
0x0810	0x640161  	AND	W8, #1, W2
0x0812	0xD10489  	LSR	W9, W9
0x0814	0xD38408  	RRC	W8, W8
0x0816	0xE8058B  	INC	W11, W11
0x0818	0xE84204  	INC.B	W4, W4
0x081A	0x3AFFF9  	BRA NZ	Long2Float_shiftright
0x081C	0x370005  	BRA	Long2Float_round
Long2Float_shiftleft:
0x081E	0x440408  	ADD	W8, W8, W8
0x0820	0x4C8489  	ADDC	W9, W9, W9
0x0822	0xE9058B  	DEC	W11, W11
0x0824	0xE94204  	DEC.B	W4, W4
0x0826	0x3AFFFB  	BRA NZ	Long2Float_shiftleft
Long2Float_round:
0x0828	0x070003  	RCALL	Long2Float__fpack
0x082A	0xA7F00A  	BTSC	W10, #15
0x082C	0xA8E003  	BSET	W1, #15
Long2Float_return0:
0x082E	0x060000  	RETURN
Long2Float__fpack:
0x0830	0x200081  	MOV	#8, W1
0x0832	0x558061  	SUB	W11, #1, W0
0x0834	0x3D000B  	BRA GE	Long2Float_notsubnormal
0x0836	0x20000B  	MOV	#0, W11
0x0838	0x2FFE61  	MOV	#65510, W1
0x083A	0xE10001  	CP	W0, W1
0x083C	0x34001D  	BRA LE	Long2Float_zerosig
Long2Float_subnormal:
0x083E	0x718182  	IOR	W3, W2, W3
0x0840	0x640161  	AND	W8, #1, W2
0x0842	0xD10489  	LSR	W9, W9
0x0844	0xD38408  	RRC	W8, W8
0x0846	0xE80000  	INC	W0, W0
0x0848	0x3AFFFA  	BRA NZ	Long2Float_subnormal
0x084A	0x200071  	MOV	#7, W1
Long2Float_notsubnormal:
0x084C	0x640061  	AND	W8, #1, W0
0x084E	0x700003  	IOR	W0, W3, W0
0x0850	0x600002  	AND	W0, W2, W0
0x0852	0x320009  	BRA Z	Long2Float_packupandgo
0x0854	0x440461  	ADD	W8, #1, W8
0x0856	0x4C84E0  	ADDC	W9, #0, W9
0x0858	0xA58809  	BTST.Z	W9, W1
0x085A	0x320005  	BRA Z	Long2Float_packupandgo
0x085C	0xE8058B  	INC	W11, W11
0x085E	0xE10868  	CP	W1, #8
0x0860	0x3A0002  	BRA NZ	Long2Float_packupandgo
0x0862	0xD10489  	LSR	W9, W9
0x0864	0xD38408  	RRC	W8, W8
Long2Float_packupandgo:
0x0866	0x200FF2  	MOV	#255, W2
0x0868	0xE15802  	CP	W11, W2
0x086A	0x3D0005  	BRA GE	Long2Float_overflow
0x086C	0xDD5DC7  	SL	W11, #7, W11
0x086E	0xB207F9  	AND	#127, W9
0x0870	0x758089  	IOR	W11, W9, W1
0x0872	0x880008  	MOV	W8, W0
0x0874	0x060000  	RETURN
Long2Float_overflow:
0x0876	0x27F80B  	MOV	#32640, W11
Long2Float_zerosig:
0x0878	0x88001B  	MOV	W11, W1
0x087A	0x050000  	RETLW	#0, W0
the_end__Long2Float:
L_end__Long2Float:
0x087C	0xFA8000  	ULNK
0x087E	0x060000  	RETURN
; end of __Long2Float
__Mul_FP:
0x0880	0xFA0000  	LNK	#0
0x0882	0x070002  	RCALL	MulFP___mulsf3
0x0884	0x000000040996  	GOTO	the_end__Mul_FP
MulFP___mulsf3:
0x0888	0xBE9F88  	MOV.D	W8, [W15++]
0x088A	0xBE9F8A  	MOV.D	W10, [W15++]
0x088C	0x781F8C  	MOV	W12, [W15++]
0x088E	0x070030  	RCALL	MulFP__funpack2
0x0890	0x330037  	BRA N	MulFP__fPropagateNaN
0x0892	0x6C8603  	XOR	W9, W3, W12
0x0894	0xE15064  	CP	W10, #4
0x0896	0x320024  	BRA Z	MulFP_aisinfinite
0x0898	0xE12064  	CP	W4, #4
0x089A	0x320027  	BRA Z	MulFP_bisinfinite
0x089C	0xE15061  	CP	W10, #1
0x089E	0x320022  	BRA Z	MulFP_return8_1
0x08A0	0xE12061  	CP	W4, #1
0x08A2	0x320021  	BRA Z	MulFP_return2_1
0x08A4	0x42858B  	ADD	W5, W11, W11
0x08A6	0xB107EB  	SUB	#126, W11
0x08A8	0xB83401  	MUL.UU	W6, W1, W8
0x08AA	0xB83A00  	MUL.UU	W7, W0, W4
0x08AC	0x420408  	ADD	W4, W8, W8
0x08AE	0x4A8489  	ADDC	W5, W9, W9
0x08B0	0xB83A01  	MUL.UU	W7, W1, W4
0x08B2	0xB83000  	MUL.UU	W6, W0, W0
0x08B4	0x408088  	ADD	W1, W8, W1
0x08B6	0x4A0109  	ADDC	W4, W9, W2
0x08B8	0x330004  	BRA N	MulFP_formsticky
0x08BA	0x400000  	ADD	W0, W0, W0
0x08BC	0x488081  	ADDC	W1, W1, W1
0x08BE	0x490102  	ADDC	W2, W2, W2
0x08C0	0xE9058B  	DEC	W11, W11
MulFP_formsticky:
0x08C2	0xDD09C9  	SL	W1, #9, W3
0x08C4	0x700183  	IOR	W0, W3, W3
0x08C6	0x320001  	BRA Z	MulFP_formRandSig
0x08C8	0x200013  	MOV	#1, W3
MulFP_formRandSig:
0x08CA	0xDE14C8  	LSR	W2, #8, W9
0x08CC	0xDD1448  	SL	W2, #8, W8
0x08CE	0xDE0947  	LSR	W1, #7, W2
0x08D0	0xB20012  	AND	#1, W2
0x08D2	0xDE08C8  	LSR	W1, #8, W1
0x08D4	0x708408  	IOR	W1, W8, W8
0x08D6	0x070024  	RCALL	MulFP__fpack
MulFP_return0_1:
0x08D8	0xA1F001  	BCLR	W1, #15
0x08DA	0xA7F00C  	BTSC	W12, #15
0x08DC	0xA8E003  	BSET	W1, #15
0x08DE	0x370019  	BRA	MulFP__fbopExit
MulFP_aisinfinite:
0x08E0	0xE12061  	CP	W4, #1
0x08E2	0x32001B  	BRA Z	MulFP__fbopReturnNaN
MulFP_return8_1:
0x08E4	0xBE8108  	MOV.D	W8, W2
MulFP_return2_1:
0x08E6	0xBE8002  	MOV.D	W2, W0
0x08E8	0x37FFF7  	BRA	MulFP_return0_1
MulFP_bisinfinite:
0x08EA	0xE15061  	CP	W10, #1
0x08EC	0x3AFFFC  	BRA NZ	MulFP_return2_1
0x08EE	0x370015  	BRA	MulFP__fbopReturnNaN
MulFP__funpack2:
0x08F0	0xBE8400  	MOV.D	W0, W8
0x08F2	0x07003C  	RCALL	MulFP__funpack
0x08F4	0xBE8300  	MOV.D	W0, W6
0x08F6	0xBE8504  	MOV.D	W4, W10
0x08F8	0xBE8002  	MOV.D	W2, W0
0x08FA	0x070038  	RCALL	MulFP__funpack
0x08FC	0x754F84  	IOR.B	W10, W4, [W15]
0x08FE	0x060000  	RETURN
MulFP__fPropagateNaN:
0x0900	0xBE8002  	MOV.D	W2, W0
0x0902	0xE15064  	CP	W10, #4
0x0904	0x360005  	BRA LEU	MulFP_return0_2
0x0906	0xE12064  	CP	W4, #4
0x0908	0x360002  	BRA LEU	MulFP_return8_2
0x090A	0xA36809  	BTST.Z	W9, #6
0x090C	0x3A0001  	BRA NZ	MulFP_return0_2
MulFP_return8_2:
0x090E	0xBE8008  	MOV.D	W8, W0
MulFP_return0_2:
0x0910	0xA8C002  	BSET	W1, #6
MulFP__fbopExit:
0x0912	0x78064F  	MOV	[--W15], W12
0x0914	0xBE054F  	MOV.D	[--W15], W10
0x0916	0xBE044F  	MOV.D	[--W15], W8
0x0918	0x060000  	RETURN
MulFP__fbopReturnNaN:
0x091A	0x2FFFF0  	MOV	#65535, W0
0x091C	0x27FFF1  	MOV	#32767, W1
0x091E	0x37FFF9  	BRA	MulFP__fbopExit
MulFP__fpack:
0x0920	0x200081  	MOV	#8, W1
0x0922	0x558061  	SUB	W11, #1, W0
0x0924	0x3D000B  	BRA GE	MulFP_notsubnormal
0x0926	0x20000B  	MOV	#0, W11
0x0928	0x2FFE61  	MOV	#65510, W1
0x092A	0xE10001  	CP	W0, W1
0x092C	0x34001D  	BRA LE	MulFP_zerosig
MulFP_subnormal1:
0x092E	0x718182  	IOR	W3, W2, W3
0x0930	0x640161  	AND	W8, #1, W2
0x0932	0xD10489  	LSR	W9, W9
0x0934	0xD38408  	RRC	W8, W8
0x0936	0xE80000  	INC	W0, W0
0x0938	0x3AFFFA  	BRA NZ	MulFP_subnormal1
0x093A	0x200071  	MOV	#7, W1
MulFP_notsubnormal:
0x093C	0x640061  	AND	W8, #1, W0
0x093E	0x700003  	IOR	W0, W3, W0
0x0940	0x600002  	AND	W0, W2, W0
0x0942	0x320009  	BRA Z	MulFP_packupandgo
0x0944	0x440461  	ADD	W8, #1, W8
0x0946	0x4C84E0  	ADDC	W9, #0, W9
0x0948	0xA58809  	BTST.Z	W9, W1
0x094A	0x320005  	BRA Z	MulFP_packupandgo
0x094C	0xE8058B  	INC	W11, W11
0x094E	0xE10868  	CP	W1, #8
0x0950	0x3A0002  	BRA NZ	MulFP_packupandgo
0x0952	0xD10489  	LSR	W9, W9
0x0954	0xD38408  	RRC	W8, W8
MulFP_packupandgo:
0x0956	0x200FF2  	MOV	#255, W2
0x0958	0xE15802  	CP	W11, W2
0x095A	0x3D0005  	BRA GE	MulFP_overflow
0x095C	0xDD5DC7  	SL	W11, #7, W11
0x095E	0xB207F9  	AND	#127, W9
0x0960	0x758089  	IOR	W11, W9, W1
0x0962	0x880008  	MOV	W8, W0
0x0964	0x060000  	RETURN
MulFP_overflow:
0x0966	0x27F80B  	MOV	#32640, W11
MulFP_zerosig:
0x0968	0x88001B  	MOV	W11, W1
0x096A	0x050000  	RETLW	#0, W0
MulFP__funpack:
0x096C	0xDE0AC7  	LSR	W1, #7, W5
0x096E	0xB207F1  	AND	#127, W1
0x0970	0xB20FF5  	AND	#255, W5
0x0972	0x320008  	BRA Z	MulFP_zeroorsub
0x0974	0x42CFE1  	ADD.B	W5, #1, [W15]
0x0976	0x320002  	BRA Z	MulFP_nanorinf
MulFP_finitereturn:
0x0978	0xA8E002  	BSET	W1, #7
0x097A	0x050024  	RETLW	#2, W4
MulFP_nanorinf:
0x097C	0x700F81  	IOR	W0, W1, [W15]
0x097E	0x320001  	BRA Z	MulFP_infinite
0x0980	0x050804  	RETLW	#128, W4
MulFP_infinite:
0x0982	0x050044  	RETLW	#4, W4
MulFP_zeroorsub:
0x0984	0x700F81  	IOR	W0, W1, [W15]
0x0986	0x3A0002  	BRA NZ	MulFP_subnormal2
0x0988	0x050014  	RETLW	#1, W4
MulFP_normalize:
0x098A	0xE90285  	DEC	W5, W5
MulFP_subnormal2:
0x098C	0x400000  	ADD	W0, W0, W0
0x098E	0x48C081  	ADDC.B	W1, W1, W1
0x0990	0x3BFFFC  	BRA NN	MulFP_normalize
0x0992	0xA8E002  	BSET	W1, #7
0x0994	0x050024  	RETLW	#2, W4
the_end__Mul_FP:
L_end__Mul_FP:
0x0996	0xFA8000  	ULNK
0x0998	0x060000  	RETURN
; end of __Mul_FP
__Compare_Ge_Fp:
0x0724	0xFA0000  	LNK	#0
0x0726	0x2FFFF4  	MOV	#65535, W4
0x0728	0x07FD83  	RCALL	__Compare_Fp
L_end__Compare_Ge_Fp:
0x072A	0xFA8000  	ULNK
0x072C	0x060000  	RETURN
; end of __Compare_Ge_Fp
__Compare_Fp:
0x0230	0xFA0000  	LNK	#0
0x0232	0x070002  	RCALL	CompareFp__fcompare
0x0234	0x00000004029E  	GOTO	the_end__Compare_Fp
CompareFp__fcompare:
0x0238	0x781F84  	MOV	W4, [W15++]
0x023A	0x070014  	RCALL	CompareFp__funpack2
0x023C	0x78004F  	MOV	[--W15], W0
0x023E	0x330011  	BRA N	CompareFp_exit
0x0240	0x2FFFF0  	MOV	#65535, W0
0x0242	0x6C8F83  	XOR	W9, W3, [W15]
0x0244	0x3B0006  	BRA NN	CompareFp_comparemag
0x0246	0x650504  	AND	W10, W4, W10
0x0248	0xA7000A  	BTSC	W10, #0
0x024A	0x370008  	BRA	CompareFp_returnEqual
0x024C	0xA6F009  	BTSS	W9, #15
0x024E	0x200010  	MOV	#1, W0
0x0250	0x370008  	BRA	CompareFp_exit
CompareFp_comparemag:
0x0252	0x540F82  	SUB	W8, W2, [W15]
0x0254	0x5C8F83  	SUBB	W9, W3, [W15]
0x0256	0x390003  	BRA LTU	CompareFp_adjust
0x0258	0x200010  	MOV	#1, W0
0x025A	0x3E0001  	BRA GTU	CompareFp_adjust
CompareFp_returnEqual:
0x025C	0x200000  	MOV	#0, W0
CompareFp_adjust:
0x025E	0xA7F009  	BTSC	W9, #15
0x0260	0xEA0000  	NEG	W0, W0
CompareFp_exit:
0x0262	0x060000  	RETURN
CompareFp__funpack2:
0x0264	0xBE8400  	MOV.D	W0, W8
0x0266	0x070006  	RCALL	CompareFp__funpack
0x0268	0xBE8300  	MOV.D	W0, W6
0x026A	0xBE8504  	MOV.D	W4, W10
0x026C	0xBE8002  	MOV.D	W2, W0
0x026E	0x070002  	RCALL	CompareFp__funpack
0x0270	0x754F84  	IOR.B	W10, W4, [W15]
0x0272	0x060000  	RETURN
CompareFp__funpack:
0x0274	0xDE0AC7  	LSR	W1, #7, W5
0x0276	0xB207F1  	AND	#127, W1
0x0278	0xB20FF5  	AND	#255, W5
0x027A	0x320008  	BRA Z	CompareFp_zeroorsub
0x027C	0x42CFE1  	ADD.B	W5, #1, [W15]
0x027E	0x320002  	BRA Z	CompareFp_nanorinf
CompareFp_finitereturn:
0x0280	0xA8E002  	BSET	W1, #7
0x0282	0x050024  	RETLW	#2, W4
CompareFp_nanorinf:
0x0284	0x700F81  	IOR	W0, W1, [W15]
0x0286	0x320001  	BRA Z	CompareFp_infinite
0x0288	0x050804  	RETLW	#128, W4
CompareFp_infinite:
0x028A	0x050044  	RETLW	#4, W4
CompareFp_zeroorsub:
0x028C	0x700F81  	IOR	W0, W1, [W15]
0x028E	0x3A0002  	BRA NZ	CompareFp_subnormal
0x0290	0x050014  	RETLW	#1, W4
CompareFp_normalize:
0x0292	0xE90285  	DEC	W5, W5
CompareFp_subnormal:
0x0294	0x400000  	ADD	W0, W0, W0
0x0296	0x48C081  	ADDC.B	W1, W1, W1
0x0298	0x3BFFFC  	BRA NN	CompareFp_normalize
0x029A	0xA8E002  	BSET	W1, #7
0x029C	0x050024  	RETLW	#2, W4
the_end__Compare_Fp:
L_end__Compare_Fp:
0x029E	0xFA8000  	ULNK
0x02A0	0x060000  	RETURN
; end of __Compare_Fp
__Div_FP:
0x04FE	0xFA0000  	LNK	#0
0x0500	0x070002  	RCALL	DivFP___divsf3
0x0502	0x000000040630  	GOTO	the_end__Div_FP
DivFP___divsf3:
0x0506	0xBE9F88  	MOV.D	W8, [W15++]
0x0508	0xBE9F8A  	MOV.D	W10, [W15++]
0x050A	0x781F8C  	MOV	W12, [W15++]
0x050C	0x07003E  	RCALL	DivFP__funpack2
0x050E	0x330045  	BRA N	DivFP__fPropagateNaN
0x0510	0x6C8603  	XOR	W9, W3, W12
0x0512	0xE15064  	CP	W10, #4
0x0514	0x32002E  	BRA Z	DivFP_aisinfinite
0x0516	0xE12064  	CP	W4, #4
0x0518	0x320033  	BRA Z	DivFP_returnZero
0x051A	0xE15061  	CP	W10, #1
0x051C	0x32002F  	BRA Z	DivFP_aiszero
0x051E	0xE12061  	CP	W4, #1
0x0520	0x320031  	BRA Z	DivFP_returnInf
DivFP_finitenonzero:
0x0522	0x558585  	SUB	W11, W5, W11
0x0524	0xB007EB  	ADD	#126, W11
0x0526	0x200009  	MOV	#0, W9
0x0528	0x200408  	MOV	#64, W8
0x052A	0x370005  	BRA	DivFP_diventry
DivFP_divnext:
0x052C	0x440408  	ADD	W8, W8, W8
0x052E	0x4C8489  	ADDC	W9, W9, W9
0x0530	0x31000A  	BRA C	DivFP_divdone
DivFP_divloop:
0x0532	0x430306  	ADD	W6, W6, W6
0x0534	0x4B8387  	ADDC	W7, W7, W7
DivFP_diventry:
0x0536	0x530100  	SUB	W6, W0, W2
0x0538	0x5B8181  	SUBB	W7, W1, W3
0x053A	0x33FFF8  	BRA N	DivFP_divnext
0x053C	0xBE8302  	MOV.D	W2, W6
0x053E	0xA80010  	BSET	W8, #0
0x0540	0x440408  	ADD	W8, W8, W8
0x0542	0x4C8489  	ADDC	W9, W9, W9
0x0544	0x39FFF6  	BRA NC	DivFP_divloop
DivFP_divdone:
0x0546	0xDD39C6  	SL	W7, #6, W3
0x0548	0x730183  	IOR	W6, W3, W3
0x054A	0x320001  	BRA Z	DivFP_stickyok
0x054C	0x200013  	MOV	#1, W3
DivFP_stickyok:
0x054E	0xD10489  	LSR	W9, W9
0x0550	0xD38408  	RRC	W8, W8
0x0552	0xA39809  	BTST.Z	W9, #9
0x0554	0x320005  	BRA Z	DivFP_guardused
0x0556	0xA70008  	BTSC	W8, #0
0x0558	0xA80006  	BSET	W3, #0
0x055A	0xD10489  	LSR	W9, W9
0x055C	0xD38408  	RRC	W8, W8
0x055E	0xE8058B  	INC	W11, W11
DivFP_guardused:
0x0560	0xD10489  	LSR	W9, W9
0x0562	0xD38408  	RRC	W8, W8
0x0564	0xEB0100  	CLR	W2
0x0566	0xD28102  	RLC	W2, W2
0x0568	0x070028  	RCALL	DivFP__fpack
DivFP_return0_1:
0x056A	0xA1F001  	BCLR	W1, #15
0x056C	0xA7F00C  	BTSC	W12, #15
0x056E	0xA8E003  	BSET	W1, #15
0x0570	0x37001D  	BRA	DivFP__fbopExit
DivFP_aisinfinite:
0x0572	0xE12064  	CP	W4, #4
0x0574	0x32001F  	BRA Z	DivFP__fbopReturnNaN
DivFP_return8_1:
0x0576	0xBE8108  	MOV.D	W8, W2
DivFP_return2_1:
0x0578	0xBE8002  	MOV.D	W2, W0
0x057A	0x37FFF7  	BRA	DivFP_return0_1
DivFP_aiszero:
0x057C	0xE12061  	CP	W4, #1
0x057E	0x32001A  	BRA Z	DivFP__fbopReturnNaN
DivFP_returnZero:
0x0580	0xB80060  	MUL.UU	W0, #0, W0
0x0582	0x37FFF3  	BRA	DivFP_return0_1
DivFP_returnInf:
0x0584	0x200000  	MOV	#0, W0
0x0586	0x27F801  	MOV	#32640, W1
0x0588	0x37FFF0  	BRA	DivFP_return0_1
DivFP__funpack2:
0x058A	0xBE8400  	MOV.D	W0, W8
0x058C	0x07003C  	RCALL	DivFP__funpack
0x058E	0xBE8300  	MOV.D	W0, W6
0x0590	0xBE8504  	MOV.D	W4, W10
0x0592	0xBE8002  	MOV.D	W2, W0
0x0594	0x070038  	RCALL	DivFP__funpack
0x0596	0x754F84  	IOR.B	W10, W4, [W15]
0x0598	0x060000  	RETURN
DivFP__fPropagateNaN:
0x059A	0xBE8002  	MOV.D	W2, W0
0x059C	0xE15064  	CP	W10, #4
0x059E	0x360005  	BRA LEU	DivFP_return0
0x05A0	0xE12064  	CP	W4, #4
0x05A2	0x360002  	BRA LEU	DivFP_return8
0x05A4	0xA36809  	BTST.Z	W9, #6
0x05A6	0x3A0001  	BRA NZ	DivFP_return0
DivFP_return8:
0x05A8	0xBE8008  	MOV.D	W8, W0
DivFP_return0:
0x05AA	0xA8C002  	BSET	W1, #6
DivFP__fbopExit:
0x05AC	0x78064F  	MOV	[--W15], W12
0x05AE	0xBE054F  	MOV.D	[--W15], W10
0x05B0	0xBE044F  	MOV.D	[--W15], W8
0x05B2	0x060000  	RETURN
DivFP__fbopReturnNaN:
0x05B4	0x2FFFF0  	MOV	#65535, W0
0x05B6	0x27FFF1  	MOV	#32767, W1
0x05B8	0x37FFF9  	BRA	DivFP__fbopExit
DivFP__fpack:
0x05BA	0x200081  	MOV	#8, W1
0x05BC	0x558061  	SUB	W11, #1, W0
0x05BE	0x3D000B  	BRA GE	DivFP_notsubnormal
0x05C0	0x20000B  	MOV	#0, W11
0x05C2	0x2FFE61  	MOV	#65510, W1
0x05C4	0xE10001  	CP	W0, W1
0x05C6	0x34001D  	BRA LE	DivFP_zerosig
DivFP_subnormal:
0x05C8	0x718182  	IOR	W3, W2, W3
0x05CA	0x640161  	AND	W8, #1, W2
0x05CC	0xD10489  	LSR	W9, W9
0x05CE	0xD38408  	RRC	W8, W8
0x05D0	0xE80000  	INC	W0, W0
0x05D2	0x3AFFFA  	BRA NZ	DivFP_subnormal
0x05D4	0x200071  	MOV	#7, W1
DivFP_notsubnormal:
0x05D6	0x640061  	AND	W8, #1, W0
0x05D8	0x700003  	IOR	W0, W3, W0
0x05DA	0x600002  	AND	W0, W2, W0
0x05DC	0x320009  	BRA Z	DivFP_packupandgo
0x05DE	0x440461  	ADD	W8, #1, W8
0x05E0	0x4C84E0  	ADDC	W9, #0, W9
0x05E2	0xA58809  	BTST.Z	W9, W1
0x05E4	0x320005  	BRA Z	DivFP_packupandgo
0x05E6	0xE8058B  	INC	W11, W11
0x05E8	0xE10868  	CP	W1, #8
0x05EA	0x3A0002  	BRA NZ	DivFP_packupandgo
0x05EC	0xD10489  	LSR	W9, W9
0x05EE	0xD38408  	RRC	W8, W8
DivFP_packupandgo:
0x05F0	0x200FF2  	MOV	#255, W2
0x05F2	0xE15802  	CP	W11, W2
0x05F4	0x3D0005  	BRA GE	DivFP_overflow
0x05F6	0xDD5DC7  	SL	W11, #7, W11
0x05F8	0xB207F9  	AND	#127, W9
0x05FA	0x758089  	IOR	W11, W9, W1
0x05FC	0x880008  	MOV	W8, W0
0x05FE	0x060000  	RETURN
DivFP_overflow:
0x0600	0x27F80B  	MOV	#32640, W11
DivFP_zerosig:
0x0602	0x88001B  	MOV	W11, W1
0x0604	0x050000  	RETLW	#0, W0
DivFP__funpack:
0x0606	0xDE0AC7  	LSR	W1, #7, W5
0x0608	0xB207F1  	AND	#127, W1
0x060A	0xB20FF5  	AND	#255, W5
0x060C	0x320008  	BRA Z	DivFP_zeroorsub
0x060E	0x42CFE1  	ADD.B	W5, #1, [W15]
0x0610	0x320002  	BRA Z	DivFP_nanorinf
DivFP_finitereturn:
0x0612	0xA8E002  	BSET	W1, #7
0x0614	0x050024  	RETLW	#2, W4
DivFP_nanorinf:
0x0616	0x700F81  	IOR	W0, W1, [W15]
0x0618	0x320001  	BRA Z	DivFP_infinite
0x061A	0x050804  	RETLW	#128, W4
DivFP_infinite:
0x061C	0x050044  	RETLW	#4, W4
DivFP_zeroorsub:
0x061E	0x700F81  	IOR	W0, W1, [W15]
0x0620	0x3A0002  	BRA NZ	DivFP_subnormal2
0x0622	0x050014  	RETLW	#1, W4
DivFP_normalize:
0x0624	0xE90285  	DEC	W5, W5
DivFP_subnormal2:
0x0626	0x400000  	ADD	W0, W0, W0
0x0628	0x48C081  	ADDC.B	W1, W1, W1
0x062A	0x3BFFFC  	BRA NN	DivFP_normalize
0x062C	0xA8E002  	BSET	W1, #7
0x062E	0x050024  	RETLW	#2, W4
the_end__Div_FP:
L_end__Div_FP:
0x0630	0xFA8000  	ULNK
0x0632	0x060000  	RETURN
; end of __Div_FP
__Compare_Le_Fp:
0x07A4	0xFA0000  	LNK	#0
0x07A6	0x200014  	MOV	#1, W4
0x07A8	0x07FD43  	RCALL	__Compare_Fp
L_end__Compare_Le_Fp:
0x07AA	0xFA8000  	ULNK
0x07AC	0x060000  	RETURN
; end of __Compare_Le_Fp
__Sub_FP:
0x079A	0xFA0000  	LNK	#0
0x079C	0xAAE007  	BTG	W3, #15
0x079E	0x07FD81  	RCALL	__AddSub_FP
L_end__Sub_FP:
0x07A0	0xFA8000  	ULNK
0x07A2	0x060000  	RETURN
; end of __Sub_FP
__AddSub_FP:
0x02A2	0xFA0000  	LNK	#0
0x02A4	0x070002  	RCALL	AddSubFP__addsf3
0x02A6	0x00000004040A  	GOTO	the_end__AddSub_FP
AddSubFP__addsf3:
0x02AA	0xBE9F88  	MOV.D	W8, [W15++]
0x02AC	0xBE9F8A  	MOV.D	W10, [W15++]
0x02AE	0x781F8C  	MOV	W12, [W15++]
0x02B0	0x070059  	RCALL	AddSubFP__funpack2
0x02B2	0x330060  	BRA N	AddSubFP__fPropagateNaN
0x02B4	0xE15064  	CP	W10, #4
0x02B6	0x32004F  	BRA Z	AddSubFP_aisinfinite
AddSubFP_checkspecialb:
0x02B8	0xE12064  	CP	W4, #4
0x02BA	0x320052  	BRA Z	AddSubFP_return2_3
0x02BC	0x6C8203  	XOR	W9, W3, W4
0x02BE	0x3B0007  	BRA NN	AddSubFP_getsign
0x02C0	0xD00509  	SL	W9, W10
0x02C2	0xD00603  	SL	W3, W12
0x02C4	0x540F82  	SUB	W8, W2, [W15]
0x02C6	0x5D060C  	SUBB	W10, W12, W12
0x02C8	0x390002  	BRA NC	AddSubFP_getsign
0x02CA	0x320002  	BRA Z	AddSubFP_gotsign
0x02CC	0x880039  	MOV	W9, W3
AddSubFP_getsign:
0x02CE	0x8800C3  	MOV	W3, W12
AddSubFP_gotsign:
0x02D0	0x558285  	SUB	W11, W5, W5
0x02D2	0x3D0004  	BRA GE	AddSubFP_expcanonical
0x02D4	0xFD0300  	EXCH	W0, W6
0x02D6	0xFD0381  	EXCH	W1, W7
0x02D8	0xEA0285  	NEG	W5, W5
0x02DA	0x42858B  	ADD	W5, W11, W11
AddSubFP_expcanonical:
0x02DC	0x720F84  	IOR	W4, W4, [W15]
0x02DE	0x3B0002  	BRA NN	AddSubFP_nonegate
0x02E0	0x100060  	SUBR	W0, #0, W0
0x02E2	0x1880E0  	SUBBR	W1, #0, W1
AddSubFP_nonegate:
0x02E4	0xB81160  	MUL.UU	W2, #0, W2
0x02E6	0xEB0500  	CLR	W10
0x02E8	0xE1287A  	CP	W5, #26
0x02EA	0x39000A  	BRA NC	AddSubFP_aligniter
0x02EC	0x880006  	MOV	W6, W0
0x02EE	0xDD5DC7  	SL	W11, #7, W11
0x02F0	0xB207F7  	AND	#127, W7
0x02F2	0x758087  	IOR	W11, W7, W1
0x02F4	0x37002D  	BRA	AddSubFP_signoff
AddSubFP_align:
0x02F6	0x718182  	IOR	W3, W2, W3
0x02F8	0x88002A  	MOV	W10, W2
0x02FA	0x600561  	AND	W0, #1, W10
0x02FC	0xD18081  	ASR	W1, W1
0x02FE	0xD38000  	RRC	W0, W0
AddSubFP_aligniter:
0x0300	0xE90285  	DEC	W5, W5
0x0302	0x3BFFF9  	BRA NN	AddSubFP_align
AddSubFP_aligned:
0x0304	0x400406  	ADD	W0, W6, W8
0x0306	0x488487  	ADDC	W1, W7, W9
0x0308	0x3B0002  	BRA NN	AddSubFP_normalizesum
0x030A	0x140460  	SUBR	W8, #0, W8
0x030C	0x1C84E0  	SUBBR	W9, #0, W9
AddSubFP_normalizesum:
0x030E	0xA38809  	BTST.Z	W9, #8
0x0310	0x320007  	BRA Z	AddSubFP_checknormal
0x0312	0x71818A  	IOR	W3, W10, W3
0x0314	0x718182  	IOR	W3, W2, W3
0x0316	0x640161  	AND	W8, #1, W2
0x0318	0xD10489  	LSR	W9, W9
0x031A	0xD38408  	RRC	W8, W8
0x031C	0xE8058B  	INC	W11, W11
0x031E	0x370017  	BRA	AddSubFP_round
AddSubFP_checknormal:
0x0320	0xA37809  	BTST.Z	W9, #7
0x0322	0x3A0013  	BRA NZ	AddSubFP_discardguard
AddSubFP_underflow:
0x0324	0xE20016  	CP0	W11
0x0326	0x340013  	BRA LE	AddSubFP_round
0x0328	0xE9058B  	DEC	W11, W11
0x032A	0x440408  	ADD	W8, W8, W8
0x032C	0x4C8489  	ADDC	W9, W9, W9
0x032E	0x74440A  	IOR.B	W8, W10, W8
0x0330	0xA37809  	BTST.Z	W9, #7
0x0332	0x3A000D  	BRA NZ	AddSubFP_round
AddSubFP_normalizeloop:
0x0334	0xE20016  	CP0	W11
0x0336	0x340007  	BRA LE	AddSubFP_normalizeexit
0x0338	0xE9058B  	DEC	W11, W11
0x033A	0x440408  	ADD	W8, W8, W8
0x033C	0x4C8489  	ADDC	W9, W9, W9
0x033E	0x3A0001  	BRA NZ	AddSubFP_normalizetest
0x0340	0x20000B  	MOV	#0, W11
AddSubFP_normalizetest:
0x0342	0xA37809  	BTST.Z	W9, #7
0x0344	0x32FFF7  	BRA Z	AddSubFP_normalizeloop
AddSubFP_normalizeexit:
0x0346	0xEB0100  	CLR	W2
0x0348	0x370002  	BRA	AddSubFP_round
AddSubFP_discardguard:
0x034A	0x718182  	IOR	W3, W2, W3
0x034C	0x88002A  	MOV	W10, W2
AddSubFP_round:
0x034E	0x070022  	RCALL	AddSubFP__fpack
AddSubFP_signoff:
0x0350	0xA7F00C  	BTSC	W12, #15
0x0352	0xA8E003  	BSET	W1, #15
0x0354	0x370018  	BRA	AddSubFP__fbopExit
AddSubFP_aisinfinite:
0x0356	0xE12064  	CP	W4, #4
0x0358	0x3A0002  	BRA NZ	AddSubFP_return8_3
0x035A	0x6C8F83  	XOR	W9, W3, [W15]
0x035C	0x330018  	BRA N	AddSubFP__fbopReturnNaN
AddSubFP_return8_3:
0x035E	0xBE8108  	MOV.D	W8, W2
AddSubFP_return2_3:
0x0360	0xBE8002  	MOV.D	W2, W0
0x0362	0x370011  	BRA	AddSubFP__fbopExit
AddSubFP__funpack2:
0x0364	0xBE8400  	MOV.D	W0, W8
0x0366	0x07003C  	RCALL	AddSubFP__funpack
0x0368	0xBE8300  	MOV.D	W0, W6
0x036A	0xBE8504  	MOV.D	W4, W10
0x036C	0xBE8002  	MOV.D	W2, W0
0x036E	0x070038  	RCALL	AddSubFP__funpack
0x0370	0x754F84  	IOR.B	W10, W4, [W15]
0x0372	0x060000  	RETURN
AddSubFP__fPropagateNaN:
0x0374	0xBE8002  	MOV.D	W2, W0
0x0376	0xE15064  	CP	W10, #4
0x0378	0x360005  	BRA LEU	AddSubFP_return0_1
0x037A	0xE12064  	CP	W4, #4
0x037C	0x360002  	BRA LEU	AddSubFP_return8_1
0x037E	0xA36809  	BTST.Z	W9, #6
0x0380	0x3A0001  	BRA NZ	AddSubFP_return0_1
AddSubFP_return8_1:
0x0382	0xBE8008  	MOV.D	W8, W0
AddSubFP_return0_1:
0x0384	0xA8C002  	BSET	W1, #6
AddSubFP__fbopExit:
0x0386	0x78064F  	MOV	[--W15], W12
0x0388	0xBE054F  	MOV.D	[--W15], W10
0x038A	0xBE044F  	MOV.D	[--W15], W8
0x038C	0x060000  	RETURN
AddSubFP__fbopReturnNaN:
0x038E	0x2FFFF0  	MOV	#65535, W0
0x0390	0x27FFF1  	MOV	#32767, W1
0x0392	0x37FFF9  	BRA	AddSubFP__fbopExit
AddSubFP__fpack:
0x0394	0x200081  	MOV	#8, W1
0x0396	0x558061  	SUB	W11, #1, W0
0x0398	0x3D000B  	BRA GE	AddSubFP_notsubnormal_1
0x039A	0x20000B  	MOV	#0, W11
0x039C	0x2FFE61  	MOV	#65510, W1
0x039E	0xE10001  	CP	W0, W1
0x03A0	0x34001D  	BRA LE	AddSubFP_zerosig
AddSubFP_subnormal_1:
0x03A2	0x718182  	IOR	W3, W2, W3
0x03A4	0x640161  	AND	W8, #1, W2
0x03A6	0xD10489  	LSR	W9, W9
0x03A8	0xD38408  	RRC	W8, W8
0x03AA	0xE80000  	INC	W0, W0
0x03AC	0x3AFFFA  	BRA NZ	AddSubFP_subnormal_1
0x03AE	0x200071  	MOV	#7, W1
AddSubFP_notsubnormal_1:
0x03B0	0x640061  	AND	W8, #1, W0
0x03B2	0x700003  	IOR	W0, W3, W0
0x03B4	0x600002  	AND	W0, W2, W0
0x03B6	0x320009  	BRA Z	AddSubFP_packupandgo
0x03B8	0x440461  	ADD	W8, #1, W8
0x03BA	0x4C84E0  	ADDC	W9, #0, W9
0x03BC	0xA58809  	BTST.Z	W9, W1
0x03BE	0x320005  	BRA Z	AddSubFP_packupandgo
0x03C0	0xE8058B  	INC	W11, W11
0x03C2	0xE10868  	CP	W1, #8
0x03C4	0x3A0002  	BRA NZ	AddSubFP_packupandgo
0x03C6	0xD10489  	LSR	W9, W9
0x03C8	0xD38408  	RRC	W8, W8
AddSubFP_packupandgo:
0x03CA	0x200FF2  	MOV	#255, W2
0x03CC	0xE15802  	CP	W11, W2
0x03CE	0x3D0005  	BRA GE	AddSubFP_overflow
0x03D0	0xDD5DC7  	SL	W11, #7, W11
0x03D2	0xB207F9  	AND	#127, W9
0x03D4	0x758089  	IOR	W11, W9, W1
0x03D6	0x880008  	MOV	W8, W0
0x03D8	0x060000  	RETURN
AddSubFP_overflow:
0x03DA	0x27F80B  	MOV	#32640, W11
AddSubFP_zerosig:
0x03DC	0x88001B  	MOV	W11, W1
0x03DE	0x050000  	RETLW	#0, W0
AddSubFP__funpack:
0x03E0	0xDE0AC7  	LSR	W1, #7, W5
0x03E2	0xB207F1  	AND	#127, W1
0x03E4	0xB20FF5  	AND	#255, W5
0x03E6	0x320008  	BRA Z	AddSubFP_zeroorsub
0x03E8	0x42CFE1  	ADD.B	W5, #1, [W15]
0x03EA	0x320002  	BRA Z	AddSubFP_nanorinf
AddSubFP_finitereturn:
0x03EC	0xA8E002  	BSET	W1, #7
0x03EE	0x050024  	RETLW	#2, W4
AddSubFP_nanorinf:
0x03F0	0x700F81  	IOR	W0, W1, [W15]
0x03F2	0x320001  	BRA Z	AddSubFP_infinite
0x03F4	0x050804  	RETLW	#128, W4
AddSubFP_infinite:
0x03F6	0x050044  	RETLW	#4, W4
AddSubFP_zeroorsub:
0x03F8	0x700F81  	IOR	W0, W1, [W15]
0x03FA	0x3A0002  	BRA NZ	AddSubFP_subnormal_2
0x03FC	0x050014  	RETLW	#1, W4
AddSubFP_normalize:
0x03FE	0xE90285  	DEC	W5, W5
AddSubFP_subnormal_2:
0x0400	0x400000  	ADD	W0, W0, W0
0x0402	0x48C081  	ADDC.B	W1, W1, W1
0x0404	0x3BFFFC  	BRA NN	AddSubFP_normalize
0x0406	0xA8E002  	BSET	W1, #7
0x0408	0x050024  	RETLW	#2, W4
the_end__AddSub_FP:
L_end__AddSub_FP:
0x040A	0xFA8000  	ULNK
0x040C	0x060000  	RETURN
; end of __AddSub_FP
__Float2Longword:
0x072E	0xFA0000  	LNK	#0
0x0730	0x070002  	RCALL	Float2Longword_fixunssfsi
0x0732	0x000000040796  	GOTO	the_end__Float2Longword
Float2Longword_fixunssfsi:
0x0736	0xBE8100  	MOV.D	W0, W2
0x0738	0x070019  	RCALL	Float2Longword_funpack
0x073A	0xA77004  	BTSC	W4, #7
0x073C	0xA1F003  	BCLR	W3, #15
0x073E	0xA3F803  	BTST.Z	W3, #15
0x0740	0x3A0013  	BRA NZ	Float2Longword_returnzero
0x0742	0xB10965  	SUB	#150, W5
0x0744	0x320010  	BRA Z	Float2Longword_exit
0x0746	0x350009  	BRA LT	Float2Longword_shiftright
0x0748	0xE12869  	CP	W5, #9
0x074A	0x350002  	BRA LT	Float2Longword_shiftleft
0x074C	0x280001  	MOV	#32768, W1
0x074E	0x050000  	RETLW	#0, W0
Float2Longword_shiftleft:
0x0750	0x400000  	ADD	W0, W0, W0
0x0752	0x488081  	ADDC	W1, W1, W1
0x0754	0xE90285  	DEC	W5, W5
0x0756	0x3AFFFC  	BRA NZ	Float2Longword_shiftleft
0x0758	0x060000  	RETURN
Float2Longword_shiftright:
0x075A	0x428FF8  	ADD	W5, #24, [W15]
0x075C	0x350005  	BRA LT	Float2Longword_returnzero
Float2Longword_shiftrightloop:
0x075E	0xD10081  	LSR	W1, W1
0x0760	0xD38000  	RRC	W0, W0
0x0762	0xE80285  	INC	W5, W5
0x0764	0x3AFFFC  	BRA NZ	Float2Longword_shiftrightloop
Float2Longword_exit:
0x0766	0x060000  	RETURN
Float2Longword_returnzero:
0x0768	0xEB0080  	CLR	W1
0x076A	0x050000  	RETLW	#0, W0
Float2Longword_funpack:
0x076C	0xDE0AC7  	LSR	W1, #7, W5
0x076E	0xB207F1  	AND	#127, W1
0x0770	0xB20FF5  	AND	#255, W5
0x0772	0x320008  	BRA Z	Float2Longword_zeroorsub
0x0774	0x42CFE1  	ADD.B	W5, #1, [W15]
0x0776	0x320002  	BRA Z	Float2Longword_nanorinf
Float2Longword_finitereturn:
0x0778	0xA8E002  	BSET	W1, #7
0x077A	0x050024  	RETLW	#2, W4
Float2Longword_nanorinf:
0x077C	0x700F81  	IOR	W0, W1, [W15]
0x077E	0x320001  	BRA Z	Float2Longword_infinite
0x0780	0x050804  	RETLW	#128, W4
Float2Longword_infinite:
0x0782	0x050044  	RETLW	#4, W4
Float2Longword_zeroorsub:
0x0784	0x700F81  	IOR	W0, W1, [W15]
0x0786	0x3A0002  	BRA NZ	Float2Longword_subnormal
0x0788	0x050014  	RETLW	#1, W4
Float2Longword_normalize:
0x078A	0xE90285  	DEC	W5, W5
Float2Longword_subnormal:
0x078C	0x400000  	ADD	W0, W0, W0
0x078E	0x48C081  	ADDC.B	W1, W1, W1
0x0790	0x3BFFFC  	BRA NN	Float2Longword_normalize
0x0792	0xA8E002  	BSET	W1, #7
0x0794	0x050024  	RETLW	#2, W4
the_end__Float2Longword:
L_end__Float2Longword:
0x0796	0xFA8000  	ULNK
0x0798	0x060000  	RETURN
; end of __Float2Longword
_interrupt_Timer3_RPM_Measurement:
0x09B8	0xF80034  	PUSH	PSVPAG
0x09BA	0xF80036  	PUSH	RCOUNT
0x09BC	0x781F80  	PUSH	W0
0x09BE	0x200020  	MOV	#2, W0
0x09C0	0x09000C  	REPEAT	#12
0x09C2	0x781FB0  	PUSH	[W0++]
0x09C4	0xA90085  	BCLR	T3IF_bit, BitPos(T3IF_bit+0)
0x09C6	0xAA02C4  	BTG	LATA0_bit, BitPos(LATA0_bit+0)
0x09C8	0xA9E111  	BCLR	TON_T2CON_bit, BitPos(TON_T2CON_bit+0)
L_end_interrupt_Timer3_RPM_Measurement:
0x09CA	0x2001A0  	MOV	#26, W0
0x09CC	0x09000C  	REPEAT	#12
0x09CE	0x78104F  	POP	[W0--]
0x09D0	0x78004F  	POP	W0
0x09D2	0xF90036  	POP	RCOUNT
0x09D4	0xF90034  	POP	PSVPAG
0x09D6	0x064000  	RETFIE
; end of _interrupt_Timer3_RPM_Measurement
_interrupt_Timer1:
0x099A	0xF80034  	PUSH	PSVPAG
0x099C	0xF80036  	PUSH	RCOUNT
0x099E	0x781F80  	PUSH	W0
0x09A0	0x200020  	MOV	#2, W0
0x09A2	0x09000C  	REPEAT	#12
0x09A4	0x781FB0  	PUSH	[W0++]
0x09A6	0xA96084  	BCLR	T1IF_bit, BitPos(T1IF_bit+0)
0x09A8	0xAA82CD  	BTG	LATB12_bit, BitPos(LATB12_bit+0)
L_end_interrupt_Timer1:
0x09AA	0x2001A0  	MOV	#26, W0
0x09AC	0x09000C  	REPEAT	#12
0x09AE	0x78104F  	POP	[W0--]
0x09B0	0x78004F  	POP	W0
0x09B2	0xF90036  	POP	RCOUNT
0x09B4	0xF90034  	POP	PSVPAG
0x09B6	0x064000  	RETFIE
; end of _interrupt_Timer1
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0200      [14]    _UART1_TX_Idle
0x020E      [10]    _UART2_Read
0x0218      [10]    _UART1_Read
0x0222      [14]    _UART1_Data_Ready
0x0230     [114]    __Compare_Fp
0x02A2     [364]    __AddSub_FP
0x040E      [14]    _UART2_Data_Ready
0x041C      [14]    _UART2_TX_Idle
0x042A      [10]    _Delay_10ms
0x0434       [6]    _Get_Fosc_Per_Cyc
0x043A       [8]    _Get_Fosc_kHz
0x0442      [18]    __Multiply_32x32
0x0454      [82]    __Divide_32x32
0x04A6      [88]    __Modulus_32x32
0x04FE     [310]    __Div_FP
0x0634     [240]    _UART1_Init
0x0724      [10]    __Compare_Ge_Fp
0x072E     [108]    __Float2Longword
0x079A      [10]    __Sub_FP
0x07A4      [10]    __Compare_Le_Fp
0x07AE      [14]    _UART_Read
0x07BC      [14]    _UART_Data_Ready
0x07CA     [182]    __Long2Float
0x0880     [282]    __Mul_FP
0x099A      [30]    _interrupt_Timer1
0x09B8      [32]    _interrupt_Timer3_RPM_Measurement
0x09D8     [274]    _interrupt_PinChangeNotification
0x0AEA      [60]    _interrupt_Timer5_Dwell_Delay
0x0B26     [180]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0116       [2]    TMR5HLD
0x0114       [2]    TMR4
0x011A       [2]    PR4
0x011C       [2]    PR5
0x0800       [4]    _RPM
0x0804       [4]    _CylinderFiringPeriod
0x0086       [0]    T5IF_bit
0x0096       [0]    T5IE_bit
0x0094       [0]    T3IE_bit
0x011E       [0]    T32_T4CON_bit
0x0106       [2]    TMR2
0x0084       [0]    T3IF_bit
0x011E       [0]    TCKPS_1_T4CON_bit
0x00B2       [2]    IPC7
0x011E       [0]    TON_T4CON_bit
0x011E       [0]    TCKPS_0_T4CON_bit
0x0808       [2]    _Max_Dwell_Exceeded
0x0228       [2]    U1BRG
0x0226       [2]    U1RXREG
0x080A       [2]    _UART_TX_Idle_Ptr
0x0220       [2]    U1MODE
0x02C4       [0]    LATA0_bit
0x02CC       [0]    LATB12_bit
0x02CA       [2]    PORTB
0x02CC       [0]    LATB8_bit
0x0232       [2]    U2STA
0x0236       [2]    U2RXREG
0x02CC       [0]    LATB14_bit
0x02CC       [0]    LATB7_bit
0x080C       [2]    _UART_Rdy_Ptr
0x080E       [2]    _UART_Wr_Ptr
0x0810       [2]    _UART_Rd_Ptr
0x0222       [2]    U1STA
0x02C8       [0]    TRISB7_bit
0x0744       [2]    CLKDIV
0x02C8       [0]    TRISB13_bit
0x02C8       [0]    TRISB14_bit
0x00AC       [0]    CNIP_1_bit
0x00AC       [0]    CNIP_2_bit
0x0064       [0]    CN21IE_bit
0x00AC       [0]    CNIP_0_bit
0x02C4       [0]    LATA1_bit
0x02C0       [0]    TRISA0_bit
0x04E0       [2]    ANSA
0x04E2       [2]    ANSB
0x02C8       [0]    TRISB8_bit
0x02C8       [0]    TRISB12_bit
0x02C0       [0]    TRISA1_bit
0x02C8       [0]    TRISB9_bit
0x0086       [0]    CNIF_bit
0x0110       [0]    TCKPS_0_T2CON_bit
0x0110       [0]    TCKPS_1_T2CON_bit
0x0110       [0]    T32_T2CON_bit
0x0110       [0]    TON_T2CON_bit
0x010E       [2]    PR3
0x0108       [2]    TMR3HLD
0x00A8       [2]    IPC2
0x010C       [2]    PR2
0x0104       [0]    TON_T1CON_bit
0x0104       [0]    TCKPS_0_bit
0x0096       [0]    CNIE_bit
0x0100       [2]    TMR1
0x0084       [0]    T1IF_bit
0x0094       [0]    T1IE_bit
0x0104       [0]    TCKPS_1_bit
0x00A4       [2]    IPC0
0x00A4       [2]    IPC0
0x00A8       [2]    IPC2
0x00B2       [2]    IPC7
0x0100       [2]    TMR1
0x0106       [2]    TMR2
0x0108       [2]    TMR3HLD
0x010C       [2]    PR2
0x010E       [2]    PR3
0x0114       [2]    TMR4
0x0116       [2]    TMR5HLD
0x011A       [2]    PR4
0x011C       [2]    PR5
0x0220       [2]    U1MODE
0x0222       [2]    U1STA
0x0226       [2]    U1RXREG
0x0228       [2]    U1BRG
0x0232       [2]    U2STA
0x0236       [2]    U2RXREG
0x02CA       [2]    PORTB
0x04E0       [2]    ANSA
0x04E2       [2]    ANSB
0x0014       [4]    FARG_UART1_Init_baud_rate
0x0744       [2]    CLKDIV
