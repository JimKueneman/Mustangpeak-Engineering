unit bootloader_userdebug;

// Version 0.1
//
// The contents of this file are subject to the Mozilla Public License
// Version 1.1 (the "License"); you may not use this file except in compliance
// with the License. You may obtain a copy of the License at http://www.mozilla.org/MPL/
//
// Alternatively, you may redistribute this library, use and/or modify it under the terms of the
// GNU Lesser General Public License as published by the Free Software Foundation;
// either version 2.1 of the License, or (at your option) any later version.
// You may obtain a copy of the LGPL at http://www.gnu.org/copyleft/.
//
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for the
// specific language governing rights and limitations under the License.
//
// The initial developer of this code is Jim Kueneman <jimkueneman@yahoo.com> and Vcc
//

type
  TMessageStr = string[64];

procedure InitDebugLink;
procedure FinalizeDebugLink;
procedure SendDebugStr(var AMessage: TMessageStr);
procedure SendDebugText(var AMessage: TMessageStr);
procedure ToggleDebugPin(PinID: Byte);

var
  s1: string[64];

implementation

procedure InitDebugLink;
begin

  // Setup the UART mapping to the programmable pins
  PPS_Mapping(108, _INPUT, _U1RX);
  PPS_Mapping(109, _OUTPUT, _U1TX);
  
  UART1_Init(230400);
  Delay_ms(500);
  UART1_Write_Text('UART5 online' + #13+#10);
  UART1_Write_Text('Link' + #13+#10);

  TRISF1_bit := 0;
end;

procedure FinalizeDebugLink;
begin
end;

procedure SendDebugStr(var AMessage: TMessageStr);
begin
  UART1_Write_Text(AMessage + #13+#10);
end;

procedure SendDebugText(var AMessage: TMessageStr);
begin
  UART1_Write_Text(AMessage);
end;

procedure ToggleDebugPin(PinID: Byte);
begin
  case PinID of
    0 : begin LATF1_bit := not LATF1_bit end;
    1 : begin end;
    2 : begin end;
  end;
end;

end.