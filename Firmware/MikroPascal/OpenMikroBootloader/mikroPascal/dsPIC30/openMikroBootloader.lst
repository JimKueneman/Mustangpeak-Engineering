;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 11/3/2015 8:24:00 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x000000047100  	GOTO	_main
0x0004	0x000000  	0
0x0006	0x000000  	0
0x0008	0x000000  	0
0x000A	0x000000  	0
0x000C	0x000000  	0
0x000E	0x000000  	0
0x0010	0x000000  	0
0x0012	0x000000  	0
0x0014	0x000000  	0
0x0016	0x000000  	0
0x0018	0x000000  	0
0x001A	0x000000  	0
0x001C	0x000000  	0
0x001E	0x000000  	0
0x0020	0x000000  	0
0x0022	0x000000  	0
0x0024	0x000000  	0
0x0026	0x000000  	0
0x0028	0x000000  	0
0x002A	0x000000  	0
0x002C	0x000000  	0
0x002E	0x000000  	0
0x0030	0x000000  	0
0x0032	0x000000  	0
0x0034	0x000000  	0
0x0036	0x000000  	0
0x0038	0x000000  	0
0x003A	0x000000  	0
0x003C	0x000000  	0
0x003E	0x000000  	0
0x0040	0x000000  	0
0x0042	0x000000  	0
0x0044	0x000000  	0
0x0046	0x000000  	0
0x0048	0x000000  	0
0x004A	0x000000  	0
0x004C	0x000000  	0
0x004E	0x000000  	0
0x0050	0x000000  	0
0x0052	0x000000  	0
0x0054	0x000000  	0
0x0056	0x000000  	0
0x0058	0x000000  	0
0x005A	0x000000  	0
0x005C	0x000000  	0
0x005E	0x000000  	0
0x0060	0x000000  	0
0x0062	0x000000  	0
0x0064	0x000000  	0
0x0066	0x000000  	0
0x0068	0x000000  	0
0x006A	0x000000  	0
0x006C	0x000000  	0
0x006E	0x000000  	0
0x0070	0x000000  	0
0x0072	0x000000  	0
0x0074	0x000000  	0
0x0076	0x000000  	0
0x0078	0x000000  	0
0x007A	0x000000  	0
0x007C	0x000000  	0
0x007E	0x000000  	0
0x0080	0x000000  	0
0x0082	0x000000  	0
0x0084	0x000000  	0
0x0086	0x000000  	0
0x0088	0x000000  	0
0x008A	0x000000  	0
0x008C	0x000000  	0
0x008E	0x000000  	0
0x0090	0x000000  	0
0x0092	0x000000  	0
0x0094	0x000000  	0
0x0096	0x000000  	0
0x0098	0x000000  	0
0x009A	0x000000  	0
0x009C	0x000000  	0
0x009E	0x000000  	0
0x00A0	0x000000  	0
0x00A2	0x000000  	0
0x00A4	0x000000  	0
0x00A6	0x000000  	0
0x00A8	0x000000  	0
0x00AA	0x000000  	0
0x00AC	0x000000  	0
0x00AE	0x000000  	0
0x00B0	0x000000  	0
0x00B2	0x000000  	0
0x00B4	0x000000  	0
0x00B6	0x000000  	0
0x00B8	0x000000  	0
0x00BA	0x000000  	0
0x00BC	0x000000  	0
0x00BE	0x000000  	0
0x00C0	0x000000  	0
0x00C2	0x000000  	0
0x00C4	0x000000  	0
0x00C6	0x000000  	0
0x00C8	0x000000  	0
0x00CA	0x000000  	0
0x00CC	0x000000  	0
0x00CE	0x000000  	0
0x00D0	0x000000  	0
0x00D2	0x000000  	0
0x00D4	0x000000  	0
0x00D6	0x000000  	0
0x00D8	0x000000  	0
0x00DA	0x000000  	0
0x00DC	0x000000  	0
0x00DE	0x000000  	0
0x00E0	0x000000  	0
0x00E2	0x000000  	0
0x00E4	0x000000  	0
0x00E6	0x000000  	0
0x00E8	0x000000  	0
0x00EA	0x000000  	0
0x00EC	0x000000  	0
0x00EE	0x000000  	0
0x00F0	0x000000  	0
0x00F2	0x000000  	0
0x00F4	0x000000  	0
0x00F6	0x000000  	0
0x00F8	0x000000  	0
0x00FA	0x000000  	0
0x00FC	0x000000  	0
0x00FE	0x000000  	0
_main:
0x7100	0x2086CF  	MOV	#2156, W15
0x7102	0x20FFF0  	MOV	#4095, W0
0x7104	0xB7A020  	MOV	WREG, SPLIM
0x7106	0x200000  	MOV	#0, W0
0x7108	0xB7A034  	MOV	WREG, PSVPAG
0x710A	0x200040  	MOV	#4, W0
0x710C	0xB72044  	IOR	CORCON
;openMikroBootloader.mpas,5 :: 		begin
;openMikroBootloader.mpas,7 :: 		bootloader_main
0x710E	0x07025B  	RCALL	_bootloader_main
;openMikroBootloader.mpas,8 :: 		end.
L_end_main:
L__main_end_loop:
0x7110	0x37FFFF  	BRA	L__main_end_loop
; end of _main
_bootloader_main:
0x75C6	0xFA0006  	LNK	#6
;bootloader_core.mpas,184 :: 		begin
;bootloader_core.mpas,209 :: 		Initialize;
0x75C8	0x781F8A  	PUSH	W10
0x75CA	0x781F8B  	PUSH	W11
0x75CC	0x781F8C  	PUSH	W12
0x75CE	0x781F8D  	PUSH	W13
0x75D0	0x07FF11  	RCALL	bootloader_core_Initialize
;bootloader_core.mpas,210 :: 		Bootloader_Driver_Initialization;
0x75D2	0x07FF44  	RCALL	_Bootloader_Driver_Initialization
;bootloader_core.mpas,211 :: 		Bootloader_Mcu_Initialization;
0x75D4	0x07FF0B  	RCALL	_Bootloader_Mcu_Initialization
;bootloader_core.mpas,212 :: 		User_Init;
0x75D6	0x07FF0B  	RCALL	_User_Init
;bootloader_core.mpas,214 :: 		SendByte(CMD_LINK);
0x75D8	0xB3CEFA  	MOV.B	#239, W10
0x75DA	0x07FF48  	RCALL	bootloader_core_SendByte
;bootloader_core.mpas,216 :: 		if WaitForBootLinkDetected then
0x75DC	0x07FF68  	RCALL	bootloader_core_WaitForBootLinkDetected
0x75DE	0xE20000  	CP0	W0
0x75E0	0x320097  	BRA Z	L__bootloader_main66
L__bootloader_main143:
;bootloader_core.mpas,219 :: 		SendByte(CMD_SYNC);
0x75E2	0xB3CEDA  	MOV.B	#237, W10
0x75E4	0x07FF43  	RCALL	bootloader_core_SendByte
;bootloader_core.mpas,220 :: 		while True do   // Only way out of here is a reset
L__bootloader_main69:
;bootloader_core.mpas,222 :: 		case ReadInMessage(RawBuffer) of
0x75E6	0x20814A  	MOV	#lo_addr(_RawBuffer), W10
0x75E8	0x07FF8A  	RCALL	bootloader_core_ReadInMessage
0x75EA	0x984740  	MOV.B	W0, [W14+4]
;bootloader_core.mpas,223 :: 		CMD_REQEUST_FLASH_DATA :
0x75EC	0xB3C801  	MOV.B	#128, W1
0x75EE	0xE10401  	CP.B	W0, W1
0x75F0	0x3A0026  	BRA NZ	L__bootloader_main76
L__bootloader_main144:
;bootloader_core.mpas,225 :: 		SendByte(CMD_REQEUST_FLASH_DATA);
0x75F2	0xB3C80A  	MOV.B	#128, W10
0x75F4	0x07FF3B  	RCALL	bootloader_core_SendByte
;bootloader_core.mpas,226 :: 		SendWord(BootInfo.StructSize);
0x75F6	0x80412A  	MOV	_BootInfo, W10
0x75F8	0x07FF3B  	RCALL	bootloader_core_SendWord
;bootloader_core.mpas,227 :: 		SendDWord( BootInfo.EraseBlockSize);
0x75FA	0x20826A  	MOV	#lo_addr(_BootInfo+2), W10
0x75FC	0x07FF42  	RCALL	bootloader_core_SendDWord
;bootloader_core.mpas,228 :: 		SendDWord( BootInfo.WriteBufferSize);
0x75FE	0x2082AA  	MOV	#lo_addr(_BootInfo+6), W10
0x7600	0x07FF40  	RCALL	bootloader_core_SendDWord
;bootloader_core.mpas,229 :: 		SendDWord( BootInfo.ProgramFlashSize);
0x7602	0x2082EA  	MOV	#lo_addr(_BootInfo+10), W10
0x7604	0x07FF3E  	RCALL	bootloader_core_SendDWord
;bootloader_core.mpas,230 :: 		SendDWord( BootInfo.BootloaderAddress);
0x7606	0x20832A  	MOV	#lo_addr(_BootInfo+14), W10
0x7608	0x07FF3C  	RCALL	bootloader_core_SendDWord
;bootloader_core.mpas,231 :: 		SendDWord( BootInfo.BootloaderSize);
0x760A	0x20836A  	MOV	#lo_addr(_BootInfo+18), W10
0x760C	0x07FF3A  	RCALL	bootloader_core_SendDWord
;bootloader_core.mpas,232 :: 		SendByte(BootInfo.McuFamily);
0x760E	0x2083E0  	MOV	#lo_addr(_BootInfo+26), W0
0x7610	0x784510  	MOV.B	[W0], W10
0x7612	0x07FF2C  	RCALL	bootloader_core_SendByte
;bootloader_core.mpas,233 :: 		SendByte(BootInfo.Revision[0]);
0x7614	0x2083F0  	MOV	#lo_addr(_BootInfo+27), W0
0x7616	0x784510  	MOV.B	[W0], W10
0x7618	0x07FF29  	RCALL	bootloader_core_SendByte
;bootloader_core.mpas,234 :: 		SendByte(BootInfo.Revision[1]);
0x761A	0x208400  	MOV	#lo_addr(_BootInfo+28), W0
0x761C	0x784510  	MOV.B	[W0], W10
0x761E	0x07FF26  	RCALL	bootloader_core_SendByte
;bootloader_core.mpas,235 :: 		for i := 0 to 31 do
0x7620	0xEF2000  	CLR	W0
0x7622	0x884080  	MOV	W0, bootloader_core_i
L__bootloader_main78:
;bootloader_core.mpas,236 :: 		SendByte(Ord( BootInfo.ApplicationName[i]));
0x7624	0x208411  	MOV	#lo_addr(_BootInfo+29), W1
0x7626	0x208100  	MOV	#lo_addr(bootloader_core_i), W0
0x7628	0x408010  	ADD	W1, [W0], W0
0x762A	0x784510  	MOV.B	[W0], W10
0x762C	0x07FF1F  	RCALL	bootloader_core_SendByte
0x762E	0x804080  	MOV	bootloader_core_i, W0
0x7630	0xE1007F  	CP	W0, #31
0x7632	0x320004  	BRA Z	L__bootloader_main81
L__bootloader_main145:
0x7634	0x200011  	MOV	#1, W1
0x7636	0x208100  	MOV	#lo_addr(bootloader_core_i), W0
0x7638	0x408810  	ADD	W1, [W0], [W0]
0x763A	0x37FFF4  	BRA	L__bootloader_main78
L__bootloader_main81:
;bootloader_core.mpas,238 :: 		end;
0x763C	0x370068  	BRA	L__bootloader_main73
L__bootloader_main76:
;bootloader_core.mpas,239 :: 		CMD_SET_ADDRESS :
0x763E	0x90404E  	MOV.B	[W14+4], W0
0x7640	0xE10462  	CP.B	W0, #2
0x7642	0x3A0013  	BRA NZ	L__bootloader_main84
L__bootloader_main146:
;bootloader_core.mpas,242 :: 		CMD_SET_ADDRESS_WRITE : begin
0x7644	0x208140  	MOV	#lo_addr(_RawBuffer), W0
0x7646	0x784010  	MOV.B	[W0], W0
0x7648	0xE10460  	CP.B	W0, #0
0x764A	0x3A0005  	BRA NZ	L__bootloader_main88
L__bootloader_main147:
;bootloader_core.mpas,243 :: 		CurrentAddresses.Write := Address2DWord_LittleEndian(@RawBuffer[1]);
0x764C	0x20815A  	MOV	#lo_addr(_RawBuffer+1), W10
0x764E	0x07FE29  	RCALL	_Address2DWord_LittleEndian
0x7650	0x884040  	MOV	W0, _CurrentAddresses
0x7652	0x884051  	MOV	W1, _CurrentAddresses+2
;bootloader_core.mpas,245 :: 		end;
0x7654	0x370009  	BRA	L__bootloader_main85
L__bootloader_main88:
;bootloader_core.mpas,246 :: 		CMD_SET_ADDRESS_ERASE : begin
0x7656	0x208140  	MOV	#lo_addr(_RawBuffer), W0
0x7658	0x784010  	MOV.B	[W0], W0
0x765A	0xE10461  	CP.B	W0, #1
0x765C	0x3A0005  	BRA NZ	L__bootloader_main91
L__bootloader_main148:
;bootloader_core.mpas,247 :: 		CurrentAddresses.Erase := Address2DWord_LittleEndian(@RawBuffer[1]);
0x765E	0x20815A  	MOV	#lo_addr(_RawBuffer+1), W10
0x7660	0x07FE20  	RCALL	_Address2DWord_LittleEndian
0x7662	0x884060  	MOV	W0, _CurrentAddresses+4
0x7664	0x884071  	MOV	W1, _CurrentAddresses+6
;bootloader_core.mpas,249 :: 		end;
0x7666	0x370000  	BRA	L__bootloader_main85
L__bootloader_main91:
L__bootloader_main85:
;bootloader_core.mpas,251 :: 		end;
0x7668	0x370052  	BRA	L__bootloader_main73
L__bootloader_main84:
;bootloader_core.mpas,252 :: 		CMD_RESET :
0x766A	0xB3C811  	MOV.B	#129, W1
0x766C	0x90404E  	MOV.B	[W14+4], W0
0x766E	0xE10401  	CP.B	W0, W1
0x7670	0x3A000B  	BRA NZ	L__bootloader_main94
L__bootloader_main149:
;bootloader_core.mpas,254 :: 		SendByte(CMD_UNLINK);
0x7672	0xB3CEEA  	MOV.B	#238, W10
0x7674	0x07FEFB  	RCALL	bootloader_core_SendByte
;bootloader_core.mpas,256 :: 		User_Finalize;
0x7676	0x07FEA1  	RCALL	_User_Finalize
;bootloader_core.mpas,257 :: 		Delay_ms(500);       // Make sure it is sent
0x7678	0x200338  	MOV	#51, W8
0x767A	0x2DCE57  	MOV	#56549, W7
L__bootloader_main95:
0x767C	0xED200E  	DEC	W7
0x767E	0x3AFFFE  	BRA NZ	L__bootloader_main95
0x7680	0xED2010  	DEC	W8
0x7682	0x3AFFFC  	BRA NZ	L__bootloader_main95
;bootloader_core.mpas,263 :: 		Reset;
0x7684	0xFE0000  	RESET
;bootloader_core.mpas,265 :: 		end;
0x7686	0x370043  	BRA	L__bootloader_main73
L__bootloader_main94:
;bootloader_core.mpas,266 :: 		CMD_ERASE_BLOCKS :
0x7688	0x90404E  	MOV.B	[W14+4], W0
0x768A	0xE10470  	CP.B	W0, #16
0x768C	0x3A0021  	BRA NZ	L__bootloader_main99
L__bootloader_main150:
;bootloader_core.mpas,269 :: 		Count := Address2DWord_LittleEndian(@RawBuffer[0]);
0x768E	0x20814A  	MOV	#lo_addr(_RawBuffer), W10
0x7690	0x07FE08  	RCALL	_Address2DWord_LittleEndian
0x7692	0x884310  	MOV	W0, bootloader_core_Count
0x7694	0x884321  	MOV	W1, bootloader_core_Count+2
;bootloader_core.mpas,270 :: 		for i := 0 to Count - 1 do
0x7696	0xEF2000  	CLR	W0
0x7698	0x884080  	MOV	W0, bootloader_core_i
L__bootloader_main100:
0x769A	0x804310  	MOV	bootloader_core_Count, W0
0x769C	0x804321  	MOV	bootloader_core_Count+2, W1
0x769E	0x500161  	SUB	W0, #1, W2
0x76A0	0x5881E0  	SUBB	W1, #0, W3
0x76A2	0x980702  	MOV	W2, [W14+0]
0x76A4	0x980713  	MOV	W3, [W14+2]
0x76A6	0x804080  	MOV	bootloader_core_i, W0
0x76A8	0xDE80CF  	ASR	W0, #15, W1
0x76AA	0xE10002  	CP	W0, W2
0x76AC	0xE18803  	CPB	W1, W3
0x76AE	0x3C000D  	BRA GT	L__bootloader_main104
L__bootloader_main151:
;bootloader_core.mpas,271 :: 		Bootloader_Mcu_EraseFlash(CurrentAddresses.Erase);
0x76B0	0x2080CA  	MOV	#lo_addr(_CurrentAddresses+4), W10
0x76B2	0x07FE6A  	RCALL	_Bootloader_Mcu_EraseFlash
0x76B4	0x804082  	MOV	bootloader_core_i, W2
0x76B6	0xDE91CF  	ASR	W2, #15, W3
0x76B8	0x90000E  	MOV	[W14+0], W0
0x76BA	0x90009E  	MOV	[W14+2], W1
0x76BC	0xE11000  	CP	W2, W0
0x76BE	0xE19801  	CPB	W3, W1
0x76C0	0x320004  	BRA Z	L__bootloader_main104
L__bootloader_main152:
0x76C2	0x200011  	MOV	#1, W1
0x76C4	0x208100  	MOV	#lo_addr(bootloader_core_i), W0
0x76C6	0x408810  	ADD	W1, [W0], [W0]
0x76C8	0x37FFE8  	BRA	L__bootloader_main100
L__bootloader_main104:
;bootloader_core.mpas,272 :: 		SendByte(CMD_ERASE_BLOCKS);  // Done
0x76CA	0xB3C10A  	MOV.B	#16, W10
0x76CC	0x07FECF  	RCALL	bootloader_core_SendByte
;bootloader_core.mpas,273 :: 		end;
0x76CE	0x37001F  	BRA	L__bootloader_main73
L__bootloader_main99:
;bootloader_core.mpas,274 :: 		CMD_WRITE_BLOCK :
0x76D0	0xB3C301  	MOV.B	#48, W1
0x76D2	0x90404E  	MOV.B	[W14+4], W0
0x76D4	0xE10401  	CP.B	W0, W1
0x76D6	0x3A0008  	BRA NZ	L__bootloader_main107
L__bootloader_main153:
;bootloader_core.mpas,277 :: 		Bootloader_Mcu_WriteFlash(CurrentAddresses.Write, USER_BOOTLOADER_WRITE_BLOCK, @RawBuffer[0]);
0x76D8	0x20814D  	MOV	#lo_addr(_RawBuffer), W13
0x76DA	0x2000CB  	MOV	#12, W11
0x76DC	0x20000C  	MOV	#0, W12
0x76DE	0x20808A  	MOV	#lo_addr(_CurrentAddresses), W10
0x76E0	0x07FE6D  	RCALL	_Bootloader_Mcu_WriteFlash
;bootloader_core.mpas,278 :: 		SendByte(CMD_WRITE_BLOCK);  // Done
0x76E2	0xB3C30A  	MOV.B	#48, W10
0x76E4	0x07FEC3  	RCALL	bootloader_core_SendByte
;bootloader_core.mpas,279 :: 		end;
0x76E6	0x370013  	BRA	L__bootloader_main73
L__bootloader_main107:
;bootloader_core.mpas,280 :: 		CMD_WRITE :
0x76E8	0xB3C311  	MOV.B	#49, W1
0x76EA	0x90404E  	MOV.B	[W14+4], W0
0x76EC	0xE10401  	CP.B	W0, W1
0x76EE	0x3A000F  	BRA NZ	L__bootloader_main110
L__bootloader_main154:
;bootloader_core.mpas,283 :: 		Count := Address2DWord_LittleEndian(@RawBuffer[0]);
0x76F0	0x20814A  	MOV	#lo_addr(_RawBuffer), W10
0x76F2	0x07FDD7  	RCALL	_Address2DWord_LittleEndian
0x76F4	0x884310  	MOV	W0, bootloader_core_Count
0x76F6	0x884321  	MOV	W1, bootloader_core_Count+2
;bootloader_core.mpas,285 :: 		if Count > 0 then
0x76F8	0xE10060  	CP	W0, #0
0x76FA	0xE18860  	CPB	W1, #0
0x76FC	0x360005  	BRA LEU	L__bootloader_main112
L__bootloader_main155:
;bootloader_core.mpas,286 :: 		Bootloader_Mcu_WriteFlash(CurrentAddresses.Write, Count, @RawBuffer[4]);
0x76FE	0x20818D  	MOV	#lo_addr(_RawBuffer+4), W13
0x7700	0x80431B  	MOV	bootloader_core_Count, W11
0x7702	0x80432C  	MOV	bootloader_core_Count+2, W12
0x7704	0x20808A  	MOV	#lo_addr(_CurrentAddresses), W10
0x7706	0x07FE5A  	RCALL	_Bootloader_Mcu_WriteFlash
L__bootloader_main112:
;bootloader_core.mpas,287 :: 		SendByte(CMD_WRITE);  // Done
0x7708	0xB3C31A  	MOV.B	#49, W10
0x770A	0x07FEB0  	RCALL	bootloader_core_SendByte
;bootloader_core.mpas,288 :: 		end;
0x770C	0x370000  	BRA	L__bootloader_main73
L__bootloader_main110:
L__bootloader_main73:
;bootloader_core.mpas,290 :: 		end;
0x770E	0x37FF6B  	BRA	L__bootloader_main69
;bootloader_core.mpas,291 :: 		end else
L__bootloader_main66:
;bootloader_core.mpas,293 :: 		Bootloader_Driver_Finalization;
0x7710	0x07FE6C  	RCALL	_Bootloader_Driver_Finalization
;bootloader_core.mpas,294 :: 		User_Finalize;
0x7712	0x07FE53  	RCALL	_User_Finalize
;bootloader_core.mpas,295 :: 		SendByte(CMD_UNLINK);
0x7714	0xB3CEEA  	MOV.B	#238, W10
0x7716	0x07FEAA  	RCALL	bootloader_core_SendByte
;bootloader_core.mpas,298 :: 		Delay_ms(500);
0x7718	0x200338  	MOV	#51, W8
0x771A	0x2DCE57  	MOV	#56549, W7
L__bootloader_main114:
0x771C	0xED200E  	DEC	W7
0x771E	0x3AFFFE  	BRA NZ	L__bootloader_main114
0x7720	0xED2010  	DEC	W8
0x7722	0x3AFFFC  	BRA NZ	L__bootloader_main114
;bootloader_core.mpas,300 :: 		Bootloader_StartProgram_Vector;
0x7724	0x07FCEB  	RCALL	_Bootloader_StartProgram_Vector
;bootloader_core.mpas,302 :: 		end;
L_end_bootloader_main:
0x7726	0x7806CF  	POP	W13
0x7728	0x78064F  	POP	W12
0x772A	0x7805CF  	POP	W11
0x772C	0x78054F  	POP	W10
0x772E	0xFA8000  	ULNK
0x7730	0x060000  	RETURN
; end of _bootloader_main
bootloader_core_Initialize:
;bootloader_core.mpas,57 :: 		begin
;bootloader_core.mpas,58 :: 		BootInfo.StructSize := BOOTINFO_REC_SIZE;   // NOTE:  SizeOf(TBootInfo) does not work reliably because of padding the compiler may do
0x73F4	0x2003D0  	MOV	#61, W0
0x73F6	0x884120  	MOV	W0, _BootInfo
;bootloader_core.mpas,59 :: 		BootInfo.EraseBlockSize := USER_BOOTLOADER_ERASE_BLOCK;
0x73F8	0x200600  	MOV	#96, W0
0x73FA	0x200001  	MOV	#0, W1
0x73FC	0x884130  	MOV	W0, _BootInfo+2
0x73FE	0x884141  	MOV	W1, _BootInfo+4
;bootloader_core.mpas,60 :: 		BootInfo.WriteBufferSize := USER_BOOTLOADER_WRITE_BLOCK;
0x7400	0x2000C0  	MOV	#12, W0
0x7402	0x200001  	MOV	#0, W1
0x7404	0x884150  	MOV	W0, _BootInfo+6
0x7406	0x884161  	MOV	W1, _BootInfo+8
;bootloader_core.mpas,61 :: 		BootInfo.ProgramFlashSize := USER_BOOTLOADER_FLASH_SIZE;
0x7408	0x2C0000  	MOV	#49152, W0
0x740A	0x200001  	MOV	#0, W1
0x740C	0x884170  	MOV	W0, _BootInfo+10
0x740E	0x884181  	MOV	W1, _BootInfo+12
;bootloader_core.mpas,62 :: 		BootInfo.BootloaderAddress := USER_BOOTLOADER_ADDRESS;
0x7410	0x271000  	MOV	#28928, W0
0x7412	0x200001  	MOV	#0, W1
0x7414	0x884190  	MOV	W0, _BootInfo+14
0x7416	0x8841A1  	MOV	W1, _BootInfo+16
;bootloader_core.mpas,63 :: 		BootInfo.BootloaderSize := USER_BOOTLOADER_SIZE;
0x7418	0x20EE40  	MOV	#3812, W0
0x741A	0x200001  	MOV	#0, W1
0x741C	0x8841B0  	MOV	W0, _BootInfo+18
0x741E	0x8841C1  	MOV	W1, _BootInfo+20
;bootloader_core.mpas,64 :: 		BootInfo.ConfigurationAddress := USER_BOOTLOADER_CONFIG_ADDRESS;
0x7420	0xEF2000  	CLR	W0
0x7422	0xEF2002  	CLR	W1
0x7424	0x8841D0  	MOV	W0, _BootInfo+22
0x7426	0x8841E1  	MOV	W1, _BootInfo+24
;bootloader_core.mpas,65 :: 		BootInfo.McuFamily := USER_BOOTLOADER_MCU_FAMILY;
0x7428	0x2083E1  	MOV	#lo_addr(_BootInfo+26), W1
0x742A	0xB3C040  	MOV.B	#4, W0
0x742C	0x784880  	MOV.B	W0, [W1]
;bootloader_core.mpas,66 :: 		BootInfo.Revision[0] := USER_BOOTLOADER_REV_LO;
0x742E	0x2083F1  	MOV	#lo_addr(_BootInfo+27), W1
0x7430	0xB3C010  	MOV.B	#1, W0
0x7432	0x784880  	MOV.B	W0, [W1]
;bootloader_core.mpas,67 :: 		BootInfo.Revision[1] := USER_BOOTLOADER_REV_HI;
0x7434	0x208401  	MOV	#lo_addr(_BootInfo+28), W1
0x7436	0xEF2000  	CLR	W0
0x7438	0x784880  	MOV.B	W0, [W1]
;bootloader_core.mpas,68 :: 		BootInfo.ApplicationName := USER_BOOTLOADER_APP_NAME;
0x743A	0x208410  	MOV	#lo_addr(_BootInfo+29), W0
0x743C	0x2F7321  	MOV	#lo_addr(_USER_BOOTLOADER_APP_NAME), W1
0x743E	0x07FF1C  	RCALL	___CS2S
0x7440	0x780080  	MOV	W0, W1
0x7442	0xEF2000  	CLR	W0
0x7444	0x785880  	MOV.B	W0, [W1++]
;bootloader_core.mpas,70 :: 		McuInfoLoaded := True;
0x7446	0x2FFFF0  	MOV	#65535, W0
0x7448	0x884090  	MOV	W0, _McuInfoLoaded
;bootloader_core.mpas,72 :: 		CurrentAddresses.Write := $00000000;
0x744A	0xEF2000  	CLR	W0
0x744C	0xEF2002  	CLR	W1
0x744E	0x884040  	MOV	W0, _CurrentAddresses
0x7450	0x884051  	MOV	W1, _CurrentAddresses+2
;bootloader_core.mpas,73 :: 		CurrentAddresses.Erase := $00000000;
0x7452	0xEF2000  	CLR	W0
0x7454	0xEF2002  	CLR	W1
0x7456	0x884060  	MOV	W0, _CurrentAddresses+4
0x7458	0x884071  	MOV	W1, _CurrentAddresses+6
;bootloader_core.mpas,74 :: 		end;
L_end_Initialize:
0x745A	0x060000  	RETURN
; end of bootloader_core_Initialize
___CS2S:
0x7278	0xFA0000  	LNK	#0
;__Lib_System.mpas,26 :: 		
;__Lib_System.mpas,28 :: 		
L_loopCS2Ss:
;__Lib_System.mpas,29 :: 		
0x727A	0x784131  	MOV.B	[W1++], W2
;__Lib_System.mpas,30 :: 		
0x727C	0xE24004  	CP0.B	W2
;__Lib_System.mpas,31 :: 		
0x727E	0x320002  	BRA Z	L_CS2Send
;__Lib_System.mpas,32 :: 		
0x7280	0x785802  	MOV.B	W2, [W0++]
;__Lib_System.mpas,33 :: 		
0x7282	0x37FFFB  	BRA	L_loopCS2Ss
;__Lib_System.mpas,34 :: 		
L_CS2Send:
;__Lib_System.mpas,36 :: 		
L_end___CS2S:
0x7284	0xFA8000  	ULNK
0x7286	0x060000  	RETURN
; end of ___CS2S
_Bootloader_Driver_Initialization:
;bootloader_driver.mpas,25 :: 		begin
;bootloader_driver.mpas,27 :: 		{$IFDEF UART_1}UART1_Init(USER_UART_BAUD_RATE);{$ENDIF}
0x745C	0x781F8A  	PUSH	W10
0x745E	0x781F8B  	PUSH	W11
0x7460	0x22580A  	MOV	#9600, W10
0x7462	0x20000B  	MOV	#0, W11
0x7464	0x07FF49  	RCALL	_UART1_Init
;bootloader_driver.mpas,49 :: 		end;
L_end_Bootloader_Driver_Initialization:
0x7466	0x7805CF  	POP	W11
0x7468	0x78054F  	POP	W10
0x746A	0x060000  	RETURN
; end of _Bootloader_Driver_Initialization
_UART1_Init:
0x72F8	0xFA0008  	LNK	#8
;__Lib_UART_12_p30.mpas,104 :: 		
;__Lib_UART_12_p30.mpas,107 :: 		
0x72FA	0x272240  	MOV	#lo_addr(_UART1_Write), W0
0x72FC	0x884000  	MOV	W0, _UART_Wr_Ptr
;__Lib_UART_12_p30.mpas,108 :: 		
0x72FE	0x2721A0  	MOV	#lo_addr(_UART1_Read), W0
0x7300	0x884010  	MOV	W0, _UART_Rd_Ptr
;__Lib_UART_12_p30.mpas,109 :: 		
0x7302	0x2720C0  	MOV	#lo_addr(_UART1_Data_Ready), W0
0x7304	0x884020  	MOV	W0, _UART_Rdy_Ptr
;__Lib_UART_12_p30.mpas,110 :: 		
0x7306	0x2FFFF0  	MOV	#lo_addr(_UART1_TX_Idle), W0
0x7308	0x884030  	MOV	W0, _UART_TX_Idle_Ptr
;__Lib_UART_12_p30.mpas,112 :: 		
0x730A	0xEF220C  	CLR	U1MODE
;__Lib_UART_12_p30.mpas,113 :: 		
0x730C	0x284000  	MOV	#33792, W0
0x730E	0xB7A20E  	MOV	WREG, U1STA
;__Lib_UART_12_p30.mpas,115 :: 		
0x7310	0x07FF9F  	RCALL	_Get_Fosc_kHz
;__Lib_UART_12_p30.mpas,117 :: 		
0x7312	0x203E82  	MOV	#1000, W2
0x7314	0x200003  	MOV	#0, W3
0x7316	0x07FFA0  	RCALL	__Multiply_32x32
; tmp start address is: 12 (W6)
0x7318	0xBE0300  	MOV.D	W0, W6
;__Lib_UART_12_p30.mpas,120 :: 		
0x731A	0x07FF97  	RCALL	_Get_Fosc_Per_Cyc
0x731C	0xEB0080  	CLR	W1
0x731E	0xD10081  	LSR	W1, W1
0x7320	0xD38000  	RRC	W0, W0
0x7322	0x400264  	ADD	W0, #4, W4
0x7324	0x4882E0  	ADDC	W1, #0, W5
0x7326	0xBE010A  	MOV.D	W10, W2
L__UART1_Init133:
0x7328	0xE90204  	DEC	W4, W4
0x732A	0x350003  	BRA LT	L__UART1_Init134
0x732C	0xD00102  	SL	W2, W2
0x732E	0xD28183  	RLC	W3, W3
0x7330	0x37FFFB  	BRA	L__UART1_Init133
L__UART1_Init134:
0x7332	0x980702  	MOV	W2, [W14+0]
0x7334	0x980713  	MOV	W3, [W14+2]
;__Lib_UART_12_p30.mpas,122 :: 		
0x7336	0xBE9F86  	PUSH.D	W6
0x7338	0xBE0006  	MOV.D	W6, W0
0x733A	0xEB8200  	SETM	W4
0x733C	0x07FF12  	RCALL	__Modulus_32x32
0x733E	0xBE034F  	POP.D	W6
0x7340	0x980720  	MOV	W0, [W14+4]
0x7342	0x980731  	MOV	W1, [W14+6]
;__Lib_UART_12_p30.mpas,123 :: 		
0x7344	0xBE0006  	MOV.D	W6, W0
0x7346	0x90010E  	MOV	[W14+0], W2
0x7348	0x90019E  	MOV	[W14+2], W3
0x734A	0xEB8200  	SETM	W4
0x734C	0x07FF36  	RCALL	__Divide_32x32
; tmp end address is: 12 (W6)
; tmp start address is: 6 (W3)
0x734E	0x780180  	MOV	W0, W3
0x7350	0x780201  	MOV	W1, W4
;__Lib_UART_12_p30.mpas,125 :: 		
0x7352	0x470060  	ADD	W14, #0, W0
0x7354	0xD18150  	ASR	[++W0], W2
0x7356	0xD380C0  	RRC	[--W0], W1
0x7358	0x470064  	ADD	W14, #4, W0
0x735A	0xE10830  	CP	W1, [W0++]
0x735C	0xE19020  	CPB	W2, [W0--]
0x735E	0x3D0003  	BRA GE	L__UART1_Init126
L__UART1_Init135:
;__Lib_UART_12_p30.mpas,126 :: 		
; tmp start address is: 2 (W1)
0x7360	0x4180E1  	ADD	W3, #1, W1
0x7362	0x4A0160  	ADDC	W4, #0, W2
; tmp end address is: 6 (W3)
; tmp end address is: 2 (W1)
0x7364	0x370002  	BRA	L__UART1_Init2
L__UART1_Init126:
;__Lib_UART_12_p30.mpas,125 :: 		
0x7366	0x780083  	MOV	W3, W1
0x7368	0x780104  	MOV	W4, W2
;__Lib_UART_12_p30.mpas,126 :: 		
L__UART1_Init2:
;__Lib_UART_12_p30.mpas,129 :: 		
; tmp start address is: 2 (W1)
0x736A	0x202140  	MOV	#lo_addr(U1BRG), W0
0x736C	0x508861  	SUB	W1, #1, [W0]
; tmp end address is: 2 (W1)
;__Lib_UART_12_p30.mpas,131 :: 		
0x736E	0xA8E20D  	BSET	U1MODE, #15
;__Lib_UART_12_p30.mpas,132 :: 		
0x7370	0xA8420F  	BSET	U1STA, #10
;__Lib_UART_12_p30.mpas,134 :: 		
0x7372	0x07FF7B  	RCALL	_Delay_10ms
;__Lib_UART_12_p30.mpas,135 :: 		
L_end_UART1_Init:
0x7374	0xFA8000  	ULNK
0x7376	0x060000  	RETURN
; end of _UART1_Init
_Get_Fosc_kHz:
;__Lib_Delays.mpas,64 :: 		begin
;__Lib_Delays.mpas,65 :: 		result := Clock_kHz();
; Result start address is: 4 (W2)
0x7250	0x238802  	MOV	#14464, W2
0x7252	0x200013  	MOV	#1, W3
;__Lib_Delays.mpas,66 :: 		end;
0x7254	0xBE0002  	MOV.D	W2, W0
; Result end address is: 4 (W2)
L_end_Get_Fosc_kHz:
0x7256	0x060000  	RETURN
; end of _Get_Fosc_kHz
_Get_Fosc_Per_Cyc:
;__Lib_Delays.mpas,90 :: 		begin
;__Lib_Delays.mpas,91 :: 		Result := __FOSC_PER_CYC;
; Result start address is: 2 (W1)
0x724A	0x200041  	MOV	#4, W1
;__Lib_Delays.mpas,92 :: 		end;
0x724C	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_Get_Fosc_Per_Cyc:
0x724E	0x060000  	RETURN
; end of _Get_Fosc_Per_Cyc
_Delay_10ms:
;__Lib_Delays.mpas,669 :: 		begin
;__Lib_Delays.mpas,670 :: 		Delay_ms(10);
0x726A	0x200028  	MOV	#2, W8
0x726C	0x2046A7  	MOV	#1130, W7
L__Delay_10ms51:
0x726E	0xED200E  	DEC	W7
0x7270	0x3AFFFE  	BRA NZ	L__Delay_10ms51
0x7272	0xED2010  	DEC	W8
0x7274	0x3AFFFC  	BRA NZ	L__Delay_10ms51
;__Lib_Delays.mpas,671 :: 		end;
L_end_Delay_10ms:
0x7276	0x060000  	RETURN
; end of _Delay_10ms
__Multiply_32x32:
0x7258	0xFA0000  	LNK	#0
;__Lib_Math.mpas,50 :: 		
;__Lib_Math.mpas,53 :: 		
0x725A	0xB80A02  	MUL.UU	W1, W2, W4
;__Lib_Math.mpas,54 :: 		
0x725C	0x880050  	MOV	W0, W5
;__Lib_Math.mpas,55 :: 		
0x725E	0xB80002  	MUL.UU	W0, W2, W0
;__Lib_Math.mpas,56 :: 		
0x7260	0x420081  	ADD	W4, W1, W1
;__Lib_Math.mpas,57 :: 		
0x7262	0xB82A03  	MUL.UU	W5, W3, W4
;__Lib_Math.mpas,58 :: 		
0x7264	0x420081  	ADD	W4, W1, W1
;__Lib_Math.mpas,61 :: 		
L_end__Multiply_32x32:
0x7266	0xFA8000  	ULNK
0x7268	0x060000  	RETURN
; end of __Multiply_32x32
__Modulus_32x32:
0x7162	0xFA0000  	LNK	#0
;__Lib_Math.mpas,165 :: 		
;__Lib_Math.mpas,167 :: 		
0x7164	0x070002  	RCALL	Modulus_32x32___testsus
;__Lib_Math.mpas,168 :: 		
0x7166	0x0000000471B6  	GOTO	the_end_Modulus_32x32
;__Lib_Math.mpas,170 :: 		
Modulus_32x32___testsus:
;__Lib_Math.mpas,171 :: 		
0x716A	0xE20008  	CP0	W4
;__Lib_Math.mpas,172 :: 		
0x716C	0x3A0002  	BRA NZ	Modulus_32x32___modsi3
;__Lib_Math.mpas,174 :: 		
0x716E	0x070010  	RCALL	Modulus_32x32___umodsi3
;__Lib_Math.mpas,175 :: 		
0x7170	0x060000  	RETURN
;__Lib_Math.mpas,177 :: 		
Modulus_32x32___modsi3:
;__Lib_Math.mpas,178 :: 		
0x7172	0x781F81  	MOV	W1, [W15++]
;__Lib_Math.mpas,179 :: 		
0x7174	0xE20002  	CP0	W1
;__Lib_Math.mpas,180 :: 		
0x7176	0x3D0002  	BRA GE	Modulus_32x32_modtestb
;__Lib_Math.mpas,181 :: 		
0x7178	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.mpas,182 :: 		
0x717A	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.mpas,183 :: 		
Modulus_32x32_modtestb:
;__Lib_Math.mpas,184 :: 		
0x717C	0xE20006  	CP0	W3
;__Lib_Math.mpas,185 :: 		
0x717E	0x3D0002  	BRA GE	Modulus_32x32_calcrem
;__Lib_Math.mpas,186 :: 		
0x7180	0x110160  	SUBR	W2, #0, W2
;__Lib_Math.mpas,187 :: 		
0x7182	0x1981E0  	SUBBR	W3, #0, W3
;__Lib_Math.mpas,188 :: 		
Modulus_32x32_calcrem:
;__Lib_Math.mpas,189 :: 		
0x7184	0x070005  	RCALL	Modulus_32x32___umodsi3
;__Lib_Math.mpas,190 :: 		
0x7186	0xE0004F  	CP0	[--W15]
;__Lib_Math.mpas,191 :: 		
0x7188	0x3B0002  	BRA NN	Modulus_32x32_exitr
;__Lib_Math.mpas,192 :: 		
0x718A	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.mpas,193 :: 		
0x718C	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.mpas,194 :: 		
Modulus_32x32_exitr:
;__Lib_Math.mpas,195 :: 		
0x718E	0x060000  	RETURN
;__Lib_Math.mpas,196 :: 		
Modulus_32x32___umodsi3:
;__Lib_Math.mpas,197 :: 		
0x7190	0x070002  	RCALL	Modulus_32x32___udivsi3
;__Lib_Math.mpas,198 :: 		
0x7192	0xBE8004  	MOV.D	W4, W0
;__Lib_Math.mpas,199 :: 		
0x7194	0x060000  	RETURN
;__Lib_Math.mpas,200 :: 		
Modulus_32x32___udivsi3:
;__Lib_Math.mpas,201 :: 		
0x7196	0xB82260  	MUL.UU	W4, #0, W4
;__Lib_Math.mpas,202 :: 		
0x7198	0x200206  	MOV	#32, W6
;__Lib_Math.mpas,203 :: 		
Modulus_32x32_nextbit:
;__Lib_Math.mpas,204 :: 		
0x719A	0xD00000  	SL	W0, W0
;__Lib_Math.mpas,205 :: 		
0x719C	0xD28081  	RLC	W1, W1
;__Lib_Math.mpas,206 :: 		
0x719E	0xD28204  	RLC	W4, W4
;__Lib_Math.mpas,207 :: 		
0x71A0	0xD28285  	RLC	W5, W5
;__Lib_Math.mpas,208 :: 		
0x71A2	0xA80000  	BSET	W0, #0
;__Lib_Math.mpas,209 :: 		
0x71A4	0x520202  	SUB	W4, W2, W4
;__Lib_Math.mpas,210 :: 		
0x71A6	0x5A8283  	SUBB	W5, W3, W5
;__Lib_Math.mpas,211 :: 		
0x71A8	0x3B0003  	BRA NN	Modulus_32x32_iterate
;__Lib_Math.mpas,212 :: 		
0x71AA	0x420202  	ADD	W4, W2, W4
;__Lib_Math.mpas,213 :: 		
0x71AC	0x4A8283  	ADDC	W5, W3, W5
;__Lib_Math.mpas,214 :: 		
0x71AE	0xA10000  	BCLR	W0, #0
;__Lib_Math.mpas,215 :: 		
Modulus_32x32_iterate:
;__Lib_Math.mpas,216 :: 		
0x71B0	0xE90306  	DEC	W6, W6
;__Lib_Math.mpas,217 :: 		
0x71B2	0x3AFFF3  	BRA NZ	Modulus_32x32_nextbit
;__Lib_Math.mpas,218 :: 		
0x71B4	0x060000  	RETURN
;__Lib_Math.mpas,220 :: 		
the_end_Modulus_32x32:
;__Lib_Math.mpas,223 :: 		
L_end__Modulus_32x32:
0x71B6	0xFA8000  	ULNK
0x71B8	0x060000  	RETURN
; end of __Modulus_32x32
__Divide_32x32:
0x71BA	0xFA0000  	LNK	#0
;__Lib_Math.mpas,86 :: 		
;__Lib_Math.mpas,88 :: 		
0x71BC	0x070002  	RCALL	Divide_32x32___testsus
;__Lib_Math.mpas,89 :: 		
0x71BE	0x000000047208  	GOTO	the_end_Divide_32x32
;__Lib_Math.mpas,91 :: 		
Divide_32x32___testsus:
;__Lib_Math.mpas,92 :: 		
0x71C2	0xE20008  	CP0	W4
;__Lib_Math.mpas,93 :: 		
0x71C4	0x3A0002  	BRA NZ	Divide_32x32___divsi3
;__Lib_Math.mpas,95 :: 		
0x71C6	0x070010  	RCALL	Divide_32x32___udivsi3
;__Lib_Math.mpas,96 :: 		
0x71C8	0x060000  	RETURN
;__Lib_Math.mpas,98 :: 		
Divide_32x32___divsi3:
;__Lib_Math.mpas,99 :: 		
0x71CA	0x689F83  	XOR	W1, W3, [W15++]
;__Lib_Math.mpas,100 :: 		
0x71CC	0xE20002  	CP0	W1
;__Lib_Math.mpas,101 :: 		
0x71CE	0x3D0002  	BRA GE	Divide_32x32_divtestb
;__Lib_Math.mpas,102 :: 		
0x71D0	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.mpas,103 :: 		
0x71D2	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.mpas,104 :: 		
Divide_32x32_divtestb:
;__Lib_Math.mpas,105 :: 		
0x71D4	0xE20006  	CP0	W3
;__Lib_Math.mpas,106 :: 		
0x71D6	0x3D0002  	BRA GE	Divide_32x32_calcquot
;__Lib_Math.mpas,107 :: 		
0x71D8	0x110160  	SUBR	W2, #0, W2
;__Lib_Math.mpas,108 :: 		
0x71DA	0x1981E0  	SUBBR	W3, #0, W3
;__Lib_Math.mpas,109 :: 		
Divide_32x32_calcquot:
;__Lib_Math.mpas,110 :: 		
0x71DC	0x070005  	RCALL	Divide_32x32___udivsi3
;__Lib_Math.mpas,111 :: 		
0x71DE	0xE0004F  	CP0	[--W15]
;__Lib_Math.mpas,112 :: 		
0x71E0	0x3B0002  	BRA NN	Divide_32x32_returnq
;__Lib_Math.mpas,113 :: 		
0x71E2	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.mpas,114 :: 		
0x71E4	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.mpas,115 :: 		
Divide_32x32_returnq:
;__Lib_Math.mpas,116 :: 		
0x71E6	0x060000  	RETURN
;__Lib_Math.mpas,117 :: 		
Divide_32x32___udivsi3:
;__Lib_Math.mpas,118 :: 		
0x71E8	0xB82260  	MUL.UU	W4, #0, W4
;__Lib_Math.mpas,119 :: 		
0x71EA	0x200206  	MOV	#32, W6
;__Lib_Math.mpas,120 :: 		
Divide_32x32_nextbit:
;__Lib_Math.mpas,121 :: 		
0x71EC	0xD00000  	SL	W0, W0
;__Lib_Math.mpas,122 :: 		
0x71EE	0xD28081  	RLC	W1, W1
;__Lib_Math.mpas,123 :: 		
0x71F0	0xD28204  	RLC	W4, W4
;__Lib_Math.mpas,124 :: 		
0x71F2	0xD28285  	RLC	W5, W5
;__Lib_Math.mpas,125 :: 		
0x71F4	0xA80000  	BSET	W0, #0
;__Lib_Math.mpas,126 :: 		
0x71F6	0x520202  	SUB	W4, W2, W4
;__Lib_Math.mpas,127 :: 		
0x71F8	0x5A8283  	SUBB	W5, W3, W5
;__Lib_Math.mpas,128 :: 		
0x71FA	0x3B0003  	BRA NN	Divide_32x32_iterate
;__Lib_Math.mpas,129 :: 		
0x71FC	0x420202  	ADD	W4, W2, W4
;__Lib_Math.mpas,130 :: 		
0x71FE	0x4A8283  	ADDC	W5, W3, W5
;__Lib_Math.mpas,131 :: 		
0x7200	0xA10000  	BCLR	W0, #0
;__Lib_Math.mpas,132 :: 		
Divide_32x32_iterate:
;__Lib_Math.mpas,133 :: 		
0x7202	0xE90306  	DEC	W6, W6
;__Lib_Math.mpas,134 :: 		
0x7204	0x3AFFF3  	BRA NZ	Divide_32x32_nextbit
;__Lib_Math.mpas,135 :: 		
0x7206	0x060000  	RETURN
;__Lib_Math.mpas,137 :: 		
the_end_Divide_32x32:
;__Lib_Math.mpas,140 :: 		
L_end__Divide_32x32:
0x7208	0xFA8000  	ULNK
0x720A	0x060000  	RETURN
; end of __Divide_32x32
_Bootloader_Mcu_Initialization:
;bootloader_mcu.mpas,78 :: 		begin
;bootloader_mcu.mpas,96 :: 		end;
L_end_Bootloader_Mcu_Initialization:
0x73EC	0x060000  	RETURN
; end of _Bootloader_Mcu_Initialization
_User_Init:
;bootloader_user.mpas,73 :: 		begin
;bootloader_user.mpas,74 :: 		ADPCFG := 0xFFFF;       // Configure AN pins as digital I/O
0x73EE	0x2FFFF0  	MOV	#65535, W0
0x73F0	0xB7A2A8  	MOV	WREG, ADPCFG
;bootloader_user.mpas,75 :: 		end;
L_end_User_Init:
0x73F2	0x060000  	RETURN
; end of _User_Init
bootloader_core_SendByte:
;bootloader_core.mpas,77 :: 		begin
;bootloader_core.mpas,78 :: 		Bootloader_Driver_SendByte(AByte);
0x746C	0x07FF42  	RCALL	_Bootloader_Driver_SendByte
;bootloader_core.mpas,79 :: 		end;
L_end_SendByte:
0x746E	0x060000  	RETURN
; end of bootloader_core_SendByte
_Bootloader_Driver_SendByte:
;bootloader_driver.mpas,110 :: 		begin
;bootloader_driver.mpas,112 :: 		{$IFDEF UART_1}UART1_Write(AByte);{$ENDIF}
0x72F2	0xFB850A  	ZE	W10, W10
0x72F4	0x07FF97  	RCALL	_UART1_Write
;bootloader_driver.mpas,134 :: 		end;
L_end_Bootloader_Driver_SendByte:
0x72F6	0x060000  	RETURN
; end of _Bootloader_Driver_SendByte
_UART1_Write:
0x7224	0xFA0000  	LNK	#0
;__Lib_UART_12_p30.mpas,179 :: 		
;__Lib_UART_12_p30.mpas,180 :: 		
L__UART1_Write10:
0x7226	0x801071  	MOV	U1STA, W1
0x7228	0x201000  	MOV	#256, W0
0x722A	0x608000  	AND	W1, W0, W0
0x722C	0xE10060  	CP	W0, #0
0x722E	0x3A0002  	BRA NZ	L__UART1_Write11
L__UART1_Write141:
;__Lib_UART_12_p30.mpas,181 :: 		
0x7230	0x000000  	NOP
0x7232	0x37FFF9  	BRA	L__UART1_Write10
L__UART1_Write11:
;__Lib_UART_12_p30.mpas,182 :: 		
0x7234	0x88108A  	MOV	W10, U1TXREG
;__Lib_UART_12_p30.mpas,183 :: 		
L_end_UART1_Write:
0x7236	0xFA8000  	ULNK
0x7238	0x060000  	RETURN
; end of _UART1_Write
bootloader_core_WaitForBootLinkDetected:
0x74AE	0xFA0002  	LNK	#2
;bootloader_core.mpas,99 :: 		begin
;bootloader_core.mpas,100 :: 		Result := False;
0x74B0	0x781F8A  	PUSH	W10
; Result start address is: 8 (W4)
0x74B2	0xEF2008  	CLR	W4
;bootloader_core.mpas,101 :: 		DelayTime := 0;
; DelayTime start address is: 6 (W3)
0x74B4	0xEF2006  	CLR	W3
;bootloader_core.mpas,102 :: 		ReceivedByte := 0;
0x74B6	0xEF2000  	CLR	W0
0x74B8	0x984700  	MOV.B	W0, [W14+0]
; Result end address is: 8 (W4)
; DelayTime end address is: 6 (W3)
;bootloader_core.mpas,103 :: 		while (DelayTime < USER_BOOTLOADER_WAIT_TIME) do
L_bootloader_core_WaitForBootLinkDetected6:
; DelayTime start address is: 6 (W3)
; Result start address is: 8 (W4)
0x74BA	0x213880  	MOV	#5000, W0
0x74BC	0xE11800  	CP	W3, W0
0x74BE	0x31001A  	BRA GEU	L_bootloader_core_WaitForBootLinkDetected117
L_bootloader_core_WaitForBootLinkDetected124:
;bootloader_core.mpas,105 :: 		if Bootloader_Driver_ReadByte(ReceivedByte) then
0x74C0	0x470060  	ADD	W14, #0, W0
0x74C2	0x780500  	MOV	W0, W10
0x74C4	0x07FEE1  	RCALL	_Bootloader_Driver_ReadByte
0x74C6	0xE20000  	CP0	W0
0x74C8	0x320007  	BRA Z	L_bootloader_core_WaitForBootLinkDetected116
L_bootloader_core_WaitForBootLinkDetected125:
; Result end address is: 8 (W4)
;bootloader_core.mpas,106 :: 		Result :=  ReceivedByte = CMD_SYNC;
0x74CA	0x90408E  	MOV.B	[W14+0], W1
0x74CC	0xB3CED0  	MOV.B	#237, W0
; Result start address is: 2 (W1)
0x74CE	0xE10C00  	CP.B	W1, W0
0x74D0	0xEF2002  	CLR	W1
0x74D2	0x3A0001  	BRA NZ	L_bootloader_core_WaitForBootLinkDetected126
0x74D4	0xEEA002  	COM	W1
L_bootloader_core_WaitForBootLinkDetected126:
; Result end address is: 2 (W1)
0x74D6	0x370001  	BRA	L_bootloader_core_WaitForBootLinkDetected11
L_bootloader_core_WaitForBootLinkDetected116:
;bootloader_core.mpas,105 :: 		if Bootloader_Driver_ReadByte(ReceivedByte) then
0x74D8	0x780084  	MOV	W4, W1
;bootloader_core.mpas,106 :: 		Result :=  ReceivedByte = CMD_SYNC;
L_bootloader_core_WaitForBootLinkDetected11:
;bootloader_core.mpas,107 :: 		if Result then
; Result start address is: 2 (W1)
0x74DA	0xE20002  	CP0	W1
0x74DC	0x320001  	BRA Z	L_bootloader_core_WaitForBootLinkDetected14
L_bootloader_core_WaitForBootLinkDetected127:
; DelayTime end address is: 6 (W3)
;bootloader_core.mpas,108 :: 		Break;
0x74DE	0x37000B  	BRA	L_bootloader_core_WaitForBootLinkDetected7
L_bootloader_core_WaitForBootLinkDetected14:
;bootloader_core.mpas,109 :: 		DelayTime := DelayTime + 100;
; DelayTime start address is: 6 (W3)
0x74E0	0x200640  	MOV	#100, W0
0x74E2	0x418180  	ADD	W3, W0, W3
;bootloader_core.mpas,110 :: 		Delay_ms(100);                   // This is okay because we are only sending one byte so the Buffer won't overrun
0x74E4	0x2000B8  	MOV	#11, W8
0x74E6	0x22C2D7  	MOV	#11309, W7
L_bootloader_core_WaitForBootLinkDetected16:
0x74E8	0xED200E  	DEC	W7
0x74EA	0x3AFFFE  	BRA NZ	L_bootloader_core_WaitForBootLinkDetected16
0x74EC	0xED2010  	DEC	W8
0x74EE	0x3AFFFC  	BRA NZ	L_bootloader_core_WaitForBootLinkDetected16
;bootloader_core.mpas,111 :: 		end
0x74F0	0x780201  	MOV	W1, W4
; DelayTime end address is: 6 (W3)
; Result end address is: 2 (W1)
0x74F2	0x37FFE3  	BRA	L_bootloader_core_WaitForBootLinkDetected6
L_bootloader_core_WaitForBootLinkDetected117:
;bootloader_core.mpas,103 :: 		while (DelayTime < USER_BOOTLOADER_WAIT_TIME) do
0x74F4	0x780084  	MOV	W4, W1
;bootloader_core.mpas,111 :: 		end
L_bootloader_core_WaitForBootLinkDetected7:
;bootloader_core.mpas,112 :: 		end;
; Result start address is: 2 (W1)
0x74F6	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_WaitForBootLinkDetected:
0x74F8	0x78054F  	POP	W10
0x74FA	0xFA8000  	ULNK
0x74FC	0x060000  	RETURN
; end of bootloader_core_WaitForBootLinkDetected
_Bootloader_Driver_ReadByte:
;bootloader_driver.mpas,71 :: 		begin
;bootloader_driver.mpas,72 :: 		Result := False;
; Result start address is: 4 (W2)
0x7288	0xEF2004  	CLR	W2
;bootloader_driver.mpas,73 :: 		ReceivedByte := 0;
0x728A	0xEF2000  	CLR	W0
0x728C	0x784D00  	MOV.B	W0, [W10]
;bootloader_driver.mpas,75 :: 		if {$IFDEF UART_1}UART1_Data_Ready{$ENDIF}
0x728E	0x07FFBE  	RCALL	_UART1_Data_Ready
;bootloader_driver.mpas,80 :: 		{$IFDEF UART_6}UART6_Data_Ready{$ENDIF} <> 0 then
0x7290	0xE10060  	CP	W0, #0
0x7292	0x320004  	BRA Z	L__Bootloader_Driver_ReadByte13
L__Bootloader_Driver_ReadByte17:
; Result end address is: 4 (W2)
;bootloader_driver.mpas,82 :: 		{$IFDEF UART_1}ReceivedByte := UART1_Read;{$ENDIF}
0x7294	0x07FFC2  	RCALL	_UART1_Read
0x7296	0x784D00  	MOV.B	W0, [W10]
;bootloader_driver.mpas,89 :: 		Result := True
; Result start address is: 2 (W1)
0x7298	0x2FFFF1  	MOV	#65535, W1
; Result end address is: 2 (W1)
;bootloader_driver.mpas,90 :: 		end;
0x729A	0x370001  	BRA	L__Bootloader_Driver_ReadByte4
L__Bootloader_Driver_ReadByte13:
;bootloader_driver.mpas,80 :: 		{$IFDEF UART_6}UART6_Data_Ready{$ENDIF} <> 0 then
0x729C	0x780082  	MOV	W2, W1
;bootloader_driver.mpas,90 :: 		end;
L__Bootloader_Driver_ReadByte4:
;bootloader_driver.mpas,107 :: 		end;
; Result start address is: 2 (W1)
0x729E	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_Bootloader_Driver_ReadByte:
0x72A0	0x060000  	RETURN
; end of _Bootloader_Driver_ReadByte
_UART1_Data_Ready:
0x720C	0xFA0000  	LNK	#0
;__Lib_UART_12_p30.mpas,186 :: 		
;__Lib_UART_12_p30.mpas,187 :: 		
; Result start address is: 2 (W1)
0x720E	0xEF2002  	CLR	W1
0x7210	0xAF020E  	BTSC	U1STA, #0
0x7212	0xEC2002  	INC	W1
;__Lib_UART_12_p30.mpas,188 :: 		
0x7214	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_UART1_Data_Ready:
0x7216	0xFA8000  	ULNK
0x7218	0x060000  	RETURN
; end of _UART1_Data_Ready
_UART1_Read:
0x721A	0xFA0000  	LNK	#0
;__Lib_UART_12_p30.mpas,191 :: 		
;__Lib_UART_12_p30.mpas,192 :: 		
; Result start address is: 2 (W1)
0x721C	0x801091  	MOV	U1RXREG, W1
;__Lib_UART_12_p30.mpas,193 :: 		
0x721E	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_UART1_Read:
0x7220	0xFA8000  	ULNK
0x7222	0x060000  	RETURN
; end of _UART1_Read
bootloader_core_ReadInMessage:
0x74FE	0xFA0006  	LNK	#6
;bootloader_core.mpas,122 :: 		begin
;bootloader_core.mpas,123 :: 		Result := $FF;
0x7500	0xB3CFF0  	MOV.B	#255, W0
0x7502	0x984700  	MOV.B	W0, [W14+0]
;bootloader_core.mpas,124 :: 		iBuffer := 0;
; iBuffer start address is: 10 (W5)
0x7504	0xEF200A  	CLR	W5
;bootloader_core.mpas,125 :: 		LocalCount := 0;
0x7506	0xEF2000  	CLR	W0
0x7508	0xEF2002  	CLR	W1
0x750A	0x980710  	MOV	W0, [W14+2]
0x750C	0x980721  	MOV	W1, [W14+4]
; iBuffer end address is: 10 (W5)
0x750E	0x780205  	MOV	W5, W4
;bootloader_core.mpas,126 :: 		while True do
L_bootloader_core_ReadInMessage20:
;bootloader_core.mpas,128 :: 		if Bootloader_Driver_ReadByte(Buffer[iBuffer]) then
; iBuffer start address is: 8 (W4)
0x7510	0x450004  	ADD	W10, W4, W0
0x7512	0x781F8A  	PUSH	W10
0x7514	0x780500  	MOV	W0, W10
0x7516	0x07FEB8  	RCALL	_Bootloader_Driver_ReadByte
0x7518	0x78054F  	POP	W10
0x751A	0xE20000  	CP0	W0
0x751C	0x32004E  	BRA Z	L_bootloader_core_ReadInMessage118
L_bootloader_core_ReadInMessage129:
;bootloader_core.mpas,131 :: 		$FF : begin
0x751E	0x90408E  	MOV.B	[W14+0], W1
0x7520	0xB3CFF0  	MOV.B	#255, W0
0x7522	0xE10C00  	CP.B	W1, W0
0x7524	0x3A000C  	BRA NZ	L_bootloader_core_ReadInMessage30
L_bootloader_core_ReadInMessage130:
;bootloader_core.mpas,132 :: 		Result := Buffer[iBuffer]; // First Byte is the Command
0x7526	0x450004  	ADD	W10, W4, W0
0x7528	0x784010  	MOV.B	[W0], W0
0x752A	0x984700  	MOV.B	W0, [W14+0]
;bootloader_core.mpas,133 :: 		if (Result and CMD_PARAMETERLESS_MASK <> 0) then
0x752C	0x470060  	ADD	W14, #0, W0
0x752E	0xFB8090  	ZE	[W0], W1
0x7530	0x200800  	MOV	#128, W0
0x7532	0x608000  	AND	W1, W0, W0
0x7534	0xE10060  	CP	W0, #0
0x7536	0x320001  	BRA Z	L_bootloader_core_ReadInMessage32
L_bootloader_core_ReadInMessage131:
; iBuffer end address is: 8 (W4)
;bootloader_core.mpas,134 :: 		Exit            // Single byte message
0x7538	0x370043  	BRA	L_end_bootloader_core_ReadInMessage
L_bootloader_core_ReadInMessage32:
;bootloader_core.mpas,136 :: 		end;
; iBuffer start address is: 8 (W4)
0x753A	0x780284  	MOV	W4, W5
0x753C	0x37003D  	BRA	L_bootloader_core_ReadInMessage27
L_bootloader_core_ReadInMessage30:
;bootloader_core.mpas,137 :: 		CMD_SET_ADDRESS :
0x753E	0x90400E  	MOV.B	[W14+0], W0
0x7540	0xE10462  	CP.B	W0, #2
0x7542	0x3A0007  	BRA NZ	L_bootloader_core_ReadInMessage36
L_bootloader_core_ReadInMessage132:
;bootloader_core.mpas,139 :: 		Inc(iBuffer);
0x7544	0x420061  	ADD	W4, #1, W0
; iBuffer end address is: 8 (W4)
; iBuffer start address is: 2 (W1)
0x7546	0x780080  	MOV	W0, W1
;bootloader_core.mpas,140 :: 		if iBuffer > 4 then         // 6 bytes of data
0x7548	0xE10064  	CP	W0, #4
0x754A	0x360001  	BRA LEU	L_bootloader_core_ReadInMessage38
L_bootloader_core_ReadInMessage133:
; iBuffer end address is: 2 (W1)
;bootloader_core.mpas,141 :: 		Exit;
0x754C	0x370039  	BRA	L_end_bootloader_core_ReadInMessage
L_bootloader_core_ReadInMessage38:
;bootloader_core.mpas,142 :: 		end;
; iBuffer start address is: 2 (W1)
0x754E	0x780281  	MOV	W1, W5
; iBuffer end address is: 2 (W1)
0x7550	0x370033  	BRA	L_bootloader_core_ReadInMessage27
L_bootloader_core_ReadInMessage36:
;bootloader_core.mpas,143 :: 		CMD_ERASE_BLOCKS :
; iBuffer start address is: 8 (W4)
0x7552	0x90400E  	MOV.B	[W14+0], W0
0x7554	0xE10470  	CP.B	W0, #16
0x7556	0x3A0007  	BRA NZ	L_bootloader_core_ReadInMessage42
L_bootloader_core_ReadInMessage134:
;bootloader_core.mpas,145 :: 		Inc(iBuffer);
0x7558	0x420061  	ADD	W4, #1, W0
; iBuffer end address is: 8 (W4)
; iBuffer start address is: 2 (W1)
0x755A	0x780080  	MOV	W0, W1
;bootloader_core.mpas,146 :: 		if iBuffer > 3 then         // 5 bytes of data
0x755C	0xE10063  	CP	W0, #3
0x755E	0x360001  	BRA LEU	L_bootloader_core_ReadInMessage44
L_bootloader_core_ReadInMessage135:
; iBuffer end address is: 2 (W1)
;bootloader_core.mpas,147 :: 		Exit;
0x7560	0x37002F  	BRA	L_end_bootloader_core_ReadInMessage
L_bootloader_core_ReadInMessage44:
;bootloader_core.mpas,148 :: 		end;
; iBuffer start address is: 2 (W1)
0x7562	0x780281  	MOV	W1, W5
; iBuffer end address is: 2 (W1)
0x7564	0x370029  	BRA	L_bootloader_core_ReadInMessage27
L_bootloader_core_ReadInMessage42:
;bootloader_core.mpas,149 :: 		CMD_WRITE_BLOCK :
; iBuffer start address is: 8 (W4)
0x7566	0x90408E  	MOV.B	[W14+0], W1
0x7568	0xB3C300  	MOV.B	#48, W0
0x756A	0xE10C00  	CP.B	W1, W0
0x756C	0x3A0006  	BRA NZ	L_bootloader_core_ReadInMessage48
L_bootloader_core_ReadInMessage136:
;bootloader_core.mpas,151 :: 		if (iBuffer >= SIZE_WRITE_CMD + USER_BOOTLOADER_WRITE_BLOCK - 1) then         // zero index
0x756E	0xE1206B  	CP	W4, #11
0x7570	0x390001  	BRA LTU	L_bootloader_core_ReadInMessage50
L_bootloader_core_ReadInMessage137:
; iBuffer end address is: 8 (W4)
;bootloader_core.mpas,152 :: 		Exit;
0x7572	0x370026  	BRA	L_end_bootloader_core_ReadInMessage
L_bootloader_core_ReadInMessage50:
;bootloader_core.mpas,153 :: 		Inc(iBuffer);
; iBuffer start address is: 0 (W0)
; iBuffer start address is: 8 (W4)
0x7574	0x420061  	ADD	W4, #1, W0
; iBuffer end address is: 8 (W4)
;bootloader_core.mpas,154 :: 		end;
0x7576	0x780280  	MOV	W0, W5
; iBuffer end address is: 0 (W0)
0x7578	0x37001F  	BRA	L_bootloader_core_ReadInMessage27
L_bootloader_core_ReadInMessage48:
;bootloader_core.mpas,155 :: 		CMD_WRITE :
; iBuffer start address is: 8 (W4)
0x757A	0x90408E  	MOV.B	[W14+0], W1
0x757C	0xB3C310  	MOV.B	#49, W0
0x757E	0xE10C00  	CP.B	W1, W0
0x7580	0x3A001A  	BRA NZ	L_bootloader_core_ReadInMessage54
L_bootloader_core_ReadInMessage138:
;bootloader_core.mpas,157 :: 		if iBuffer > 2 then
0x7582	0xE12062  	CP	W4, #2
0x7584	0x360015  	BRA LEU	L_bootloader_core_ReadInMessage56
L_bootloader_core_ReadInMessage139:
;bootloader_core.mpas,159 :: 		if (iBuffer = 3) then
0x7586	0xE12063  	CP	W4, #3
0x7588	0x3A0007  	BRA NZ	L_bootloader_core_ReadInMessage59
L_bootloader_core_ReadInMessage140:
;bootloader_core.mpas,160 :: 		LocalCount := Address2DWord_LittleEndian(@RawBuffer[0])
0x758A	0x781F8A  	PUSH	W10
0x758C	0x20814A  	MOV	#lo_addr(_RawBuffer), W10
0x758E	0x07FE89  	RCALL	_Address2DWord_LittleEndian
0x7590	0x78054F  	POP	W10
0x7592	0x980710  	MOV	W0, [W14+2]
0x7594	0x980721  	MOV	W1, [W14+4]
0x7596	0x37000C  	BRA	L_bootloader_core_ReadInMessage60
;bootloader_core.mpas,161 :: 		else begin
L_bootloader_core_ReadInMessage59:
;bootloader_core.mpas,162 :: 		if (iBuffer >= SIZE_WRITE_BUFFER_CMD + LocalCount - 1) then   // zero index
0x7598	0x90001E  	MOV	[W14+2], W0
0x759A	0x9000AE  	MOV	[W14+4], W1
0x759C	0x400064  	ADD	W0, #4, W0
0x759E	0x4880E0  	ADDC	W1, #0, W1
0x75A0	0x500161  	SUB	W0, #1, W2
0x75A2	0x5881E0  	SUBB	W1, #0, W3
0x75A4	0x780004  	MOV	W4, W0
0x75A6	0xEB0080  	CLR	W1
0x75A8	0xE10002  	CP	W0, W2
0x75AA	0xE18803  	CPB	W1, W3
0x75AC	0x390001  	BRA LTU	L_bootloader_core_ReadInMessage62
L_bootloader_core_ReadInMessage141:
; iBuffer end address is: 8 (W4)
;bootloader_core.mpas,163 :: 		Exit;
0x75AE	0x370008  	BRA	L_end_bootloader_core_ReadInMessage
L_bootloader_core_ReadInMessage62:
;bootloader_core.mpas,164 :: 		end;
; iBuffer start address is: 8 (W4)
L_bootloader_core_ReadInMessage60:
;bootloader_core.mpas,165 :: 		end;
L_bootloader_core_ReadInMessage56:
;bootloader_core.mpas,166 :: 		Inc(iBuffer);
; iBuffer start address is: 0 (W0)
0x75B0	0x420061  	ADD	W4, #1, W0
; iBuffer end address is: 8 (W4)
;bootloader_core.mpas,172 :: 		;
0x75B2	0x780280  	MOV	W0, W5
; iBuffer end address is: 0 (W0)
0x75B4	0x370001  	BRA	L_bootloader_core_ReadInMessage27
L_bootloader_core_ReadInMessage54:
; iBuffer start address is: 8 (W4)
0x75B6	0x780284  	MOV	W4, W5
L_bootloader_core_ReadInMessage27:
; iBuffer end address is: 8 (W4)
;bootloader_core.mpas,175 :: 		end;
; iBuffer start address is: 10 (W5)
; iBuffer end address is: 10 (W5)
0x75B8	0x370001  	BRA	L_bootloader_core_ReadInMessage25
L_bootloader_core_ReadInMessage118:
;bootloader_core.mpas,128 :: 		if Bootloader_Driver_ReadByte(Buffer[iBuffer]) then
0x75BA	0x780284  	MOV	W4, W5
;bootloader_core.mpas,175 :: 		end;
L_bootloader_core_ReadInMessage25:
;bootloader_core.mpas,176 :: 		end;
; iBuffer start address is: 10 (W5)
0x75BC	0x780205  	MOV	W5, W4
; iBuffer end address is: 10 (W5)
0x75BE	0x37FFA8  	BRA	L_bootloader_core_ReadInMessage20
;bootloader_core.mpas,177 :: 		end;
L_end_bootloader_core_ReadInMessage:
0x75C0	0x90400E  	MOV.B	[W14+0], W0
L_end_ReadInMessage:
0x75C2	0xFA8000  	ULNK
0x75C4	0x060000  	RETURN
; end of bootloader_core_ReadInMessage
_Address2DWord_LittleEndian:
0x72A2	0xFA0004  	LNK	#4
;bootloader_common.mpas,171 :: 		begin
;bootloader_common.mpas,172 :: 		Result := 0;
0x72A4	0xEF2000  	CLR	W0
0x72A6	0xEF2002  	CLR	W1
0x72A8	0x980700  	MOV	W0, [W14+0]
0x72AA	0x980711  	MOV	W1, [W14+2]
;bootloader_common.mpas,173 :: 		Highest(result) := addr_^;
0x72AC	0x470060  	ADD	W14, #0, W0
0x72AE	0x400063  	ADD	W0, #3, W0
0x72B0	0x78481A  	MOV.B	[W10], [W0]
;bootloader_common.mpas,174 :: 		inc(Addr_);
0x72B2	0x450061  	ADD	W10, #1, W0
0x72B4	0x780500  	MOV	W0, W10
;bootloader_common.mpas,175 :: 		Higher(result):= addr_^;
0x72B6	0x78401A  	MOV.B	[W10], W0
0x72B8	0x984720  	MOV.B	W0, [W14+2]
;bootloader_common.mpas,176 :: 		inc(Addr_);
0x72BA	0x450061  	ADD	W10, #1, W0
0x72BC	0x780500  	MOV	W0, W10
;bootloader_common.mpas,177 :: 		Hi(result) := addr_^;
0x72BE	0x470060  	ADD	W14, #0, W0
0x72C0	0xEC2000  	INC	W0
0x72C2	0x78481A  	MOV.B	[W10], [W0]
;bootloader_common.mpas,178 :: 		inc(Addr_);
0x72C4	0x450061  	ADD	W10, #1, W0
0x72C6	0x780500  	MOV	W0, W10
;bootloader_common.mpas,179 :: 		Lo(result) := addr_^;
0x72C8	0x78401A  	MOV.B	[W10], W0
0x72CA	0x984700  	MOV.B	W0, [W14+0]
;bootloader_common.mpas,180 :: 		end;
0x72CC	0x90000E  	MOV	[W14+0], W0
0x72CE	0x90009E  	MOV	[W14+2], W1
L_end_Address2DWord_LittleEndian:
0x72D0	0xFA8000  	ULNK
0x72D2	0x060000  	RETURN
; end of _Address2DWord_LittleEndian
bootloader_core_SendWord:
;bootloader_core.mpas,82 :: 		begin
;bootloader_core.mpas,83 :: 		Bootloader_Driver_SendByte( Lo(AWord));       // Little Endian
0x7470	0x781F8A  	PUSH	W10
0x7472	0x07FF3F  	RCALL	_Bootloader_Driver_SendByte
;bootloader_core.mpas,84 :: 		Bootloader_Driver_SendByte( Hi(AWord));       // Little Endian
0x7474	0x200140  	MOV	#lo_addr(W10), W0
0x7476	0xEC2000  	INC	W0
0x7478	0x784010  	MOV.B	[W0], W0
0x747A	0x784500  	MOV.B	W0, W10
0x747C	0x07FF3A  	RCALL	_Bootloader_Driver_SendByte
;bootloader_core.mpas,85 :: 		end;
L_end_SendWord:
0x747E	0x78054F  	POP	W10
0x7480	0x060000  	RETURN
; end of bootloader_core_SendWord
bootloader_core_SendDWord:
;bootloader_core.mpas,88 :: 		begin
;bootloader_core.mpas,89 :: 		Bootloader_Driver_SendByte( Lo(ADWord));       // Little Endian
0x7482	0x781F8A  	PUSH	W10
0x7484	0x781F8A  	PUSH	W10
0x7486	0x78451A  	MOV.B	[W10], W10
0x7488	0x07FF34  	RCALL	_Bootloader_Driver_SendByte
0x748A	0x78054F  	POP	W10
;bootloader_core.mpas,90 :: 		Bootloader_Driver_SendByte( Hi(ADWord));       // Little Endian
0x748C	0x450061  	ADD	W10, #1, W0
0x748E	0x784010  	MOV.B	[W0], W0
0x7490	0x781F8A  	PUSH	W10
0x7492	0x784500  	MOV.B	W0, W10
0x7494	0x07FF2E  	RCALL	_Bootloader_Driver_SendByte
0x7496	0x78054F  	POP	W10
;bootloader_core.mpas,91 :: 		Bootloader_Driver_SendByte( Higher(ADWord));   // Little Endian
0x7498	0x450062  	ADD	W10, #2, W0
0x749A	0x781F8A  	PUSH	W10
0x749C	0x784510  	MOV.B	[W0], W10
0x749E	0x07FF29  	RCALL	_Bootloader_Driver_SendByte
0x74A0	0x78054F  	POP	W10
;bootloader_core.mpas,92 :: 		Bootloader_Driver_SendByte( Highest(ADWord));  // Little Endian
0x74A2	0x450063  	ADD	W10, #3, W0
0x74A4	0x784010  	MOV.B	[W0], W0
0x74A6	0x784500  	MOV.B	W0, W10
0x74A8	0x07FF24  	RCALL	_Bootloader_Driver_SendByte
;bootloader_core.mpas,93 :: 		end;
L_end_SendDWord:
0x74AA	0x78054F  	POP	W10
0x74AC	0x060000  	RETURN
; end of bootloader_core_SendDWord
_User_Finalize:
;bootloader_user.mpas,78 :: 		begin
;bootloader_user.mpas,79 :: 		end;
L_end_User_Finalize:
0x73BA	0x060000  	RETURN
; end of _User_Finalize
_Bootloader_Mcu_EraseFlash:
0x7388	0xFA0060  	LNK	#96
;bootloader_mcu.mpas,138 :: 		begin
;bootloader_mcu.mpas,153 :: 		FLASH_Write_Compact(Address, @Temp, USER_BOOTLOADER_ERASE_BLOCK);           // Need to force the Erase to actually do something by writing first
0x738A	0x781F8B  	PUSH	W11
0x738C	0x781F8C  	PUSH	W12
0x738E	0x781F8D  	PUSH	W13
0x7390	0x470060  	ADD	W14, #0, W0
0x7392	0x781F8A  	PUSH	W10
0x7394	0x20060D  	MOV	#96, W13
0x7396	0x780600  	MOV	W0, W12
0x7398	0xBE051A  	MOV.D	[W10], W10
0x739A	0x07FF9C  	RCALL	_FLASH_Write_Compact
0x739C	0x78054F  	POP	W10
;bootloader_mcu.mpas,154 :: 		FLASH_Erase32(Address);                                                     // Now the Erase will actually do something
0x739E	0x781F8A  	PUSH	W10
0x73A0	0xBE051A  	MOV.D	[W10], W10
0x73A2	0x07FFEA  	RCALL	_FLASH_Erase32
0x73A4	0x78054F  	POP	W10
;bootloader_mcu.mpas,155 :: 		Address := Address + (USER_BOOTLOADER_ERASE_BLOCK div 3 * 2);               // 3 Bytes per instruction, 2 Addresses per instruction
0x73A6	0x200402  	MOV	#64, W2
0x73A8	0x200003  	MOV	#0, W3
0x73AA	0x41003A  	ADD	W2, [W10++], W0
0x73AC	0x4980AA  	ADDC	W3, [W10--], W1
0x73AE	0xBE8D00  	MOV.D	W0, [W10]
;bootloader_mcu.mpas,163 :: 		end;
L_end_Bootloader_Mcu_EraseFlash:
0x73B0	0x7806CF  	POP	W13
0x73B2	0x78064F  	POP	W12
0x73B4	0x7805CF  	POP	W11
0x73B6	0xFA8000  	ULNK
0x73B8	0x060000  	RETURN
; end of _Bootloader_Mcu_EraseFlash
_FLASH_Write_Compact:
0x72D4	0xFA0000  	LNK	#0
;__Lib_FLASH_p30.mpas,173 :: 		
;__Lib_FLASH_p30.mpas,176 :: 		
0x72D6	0x2000C2  	MOV	#12, W2
0x72D8	0x090011  	REPEAT	#17
0x72DA	0xD88682  	DIV.U	W13, W2
0x72DC	0x780680  	MOV	W0, W13
;__Lib_FLASH_p30.mpas,179 :: 		
0x72DE	0x07FFAD  	RCALL	_FLASH_Write_Init
;__Lib_FLASH_p30.mpas,182 :: 		
L__FLASH_Write_Compact13:
0x72E0	0xE16860  	CP	W13, #0
0x72E2	0x320004  	BRA Z	L__FLASH_Write_Compact14
L__FLASH_Write_Compact27:
;__Lib_FLASH_p30.mpas,184 :: 		
0x72E4	0x07FF29  	RCALL	_FLASH_Write_Loadlatch4_Compact
;__Lib_FLASH_p30.mpas,185 :: 		
0x72E6	0x568061  	SUB	W13, #1, W0
0x72E8	0x780680  	MOV	W0, W13
;__Lib_FLASH_p30.mpas,186 :: 		
0x72EA	0x37FFFA  	BRA	L__FLASH_Write_Compact13
L__FLASH_Write_Compact14:
;__Lib_FLASH_p30.mpas,188 :: 		
0x72EC	0x07FF1D  	RCALL	_FLASH_Write_DoWrite
;__Lib_FLASH_p30.mpas,189 :: 		
L_end_FLASH_Write_Compact:
0x72EE	0xFA8000  	ULNK
0x72F0	0x060000  	RETURN
; end of _FLASH_Write_Compact
_FLASH_Write_Init:
0x723A	0xFA0000  	LNK	#0
;__Lib_FLASH_p30.mpas,94 :: 		
;__Lib_FLASH_p30.mpas,96 :: 		
0x723C	0x88434A  	MOV	W10, __Lib_FLASH_p30_FlashWrAddress
0x723E	0x88435B  	MOV	W11, __Lib_FLASH_p30_FlashWrAddress+2
;__Lib_FLASH_p30.mpas,97 :: 		
0x7240	0x88433C  	MOV	W12, __Lib_FLASH_p30_FlashWrData
;__Lib_FLASH_p30.mpas,99 :: 		
0x7242	0x240010  	MOV	#16385, W0
0x7244	0xB7A760  	MOV	WREG, NVMCON
;__Lib_FLASH_p30.mpas,100 :: 		
L_end_FLASH_Write_Init:
0x7246	0xFA8000  	ULNK
0x7248	0x060000  	RETURN
; end of _FLASH_Write_Init
_FLASH_Write_Loadlatch4_Compact:
0x7138	0xFA0000  	LNK	#0
;__Lib_FLASH_p30.mpas,129 :: 		
;__Lib_FLASH_p30.mpas,130 :: 		
0x713A	0x804349  	MOV	__Lib_FLASH_p30_FlashWrAddress, W9
;__Lib_FLASH_p30.mpas,131 :: 		
0x713C	0x804350  	MOV	__Lib_FLASH_p30_FlashWrAddress+2, W0
0x713E	0xB7A032  	MOV	WREG, TBLPAG
;__Lib_FLASH_p30.mpas,132 :: 		
0x7140	0x804338  	MOV	__Lib_FLASH_p30_FlashWrData, W8
;__Lib_FLASH_p30.mpas,135 :: 		
0x7142	0x000003080003  	DO	#3, Flash_Mcu_Urlab_01
;__Lib_FLASH_p30.mpas,136 :: 		
0x7146	0xBBCCB8  	TBLWTH.B	[W8++], [W9]
;__Lib_FLASH_p30.mpas,137 :: 		
0x7148	0xBB5CB8  	TBLWTL.B	[W8++], [W9++]
;__Lib_FLASH_p30.mpas,138 :: 		
0x714A	0xBB5CB8  	TBLWTL.B	[W8++], [W9++]
;__Lib_FLASH_p30.mpas,139 :: 		
Flash_Mcu_Urlab_01:
;__Lib_FLASH_p30.mpas,140 :: 		
0x714C	0x000000  	NOP
;__Lib_FLASH_p30.mpas,144 :: 		
0x714E	0x200081  	MOV	#8, W1
0x7150	0x200002  	MOV	#0, W2
0x7152	0x208680  	MOV	#lo_addr(__Lib_FLASH_p30_FlashWrAddress), W0
0x7154	0x409810  	ADD	W1, [W0], [W0++]
0x7156	0x491010  	ADDC	W2, [W0], [W0--]
;__Lib_FLASH_p30.mpas,145 :: 		
0x7158	0x2000C1  	MOV	#12, W1
0x715A	0x208660  	MOV	#lo_addr(__Lib_FLASH_p30_FlashWrData), W0
0x715C	0x408810  	ADD	W1, [W0], [W0]
;__Lib_FLASH_p30.mpas,146 :: 		
L_end_FLASH_Write_Loadlatch4_Compact:
0x715E	0xFA8000  	ULNK
0x7160	0x060000  	RETURN
; end of _FLASH_Write_Loadlatch4_Compact
_FLASH_Write_DoWrite:
0x7128	0xFA0000  	LNK	#0
;__Lib_FLASH_p30.mpas,153 :: 		
;__Lib_FLASH_p30.mpas,156 :: 		
0x712A	0x07FFF3  	RCALL	__Lib_FLASH_p30_FlashKeySequence
;__Lib_FLASH_p30.mpas,159 :: 		
L__FLASH_Write_DoWrite7:
0x712C	0xAEE761  	BTSS	NVMCON, #15
0x712E	0x370002  	BRA	L__FLASH_Write_DoWrite8
;__Lib_FLASH_p30.mpas,160 :: 		
0x7130	0x000000  	NOP
0x7132	0x37FFFC  	BRA	L__FLASH_Write_DoWrite7
L__FLASH_Write_DoWrite8:
;__Lib_FLASH_p30.mpas,161 :: 		
L_end_FLASH_Write_DoWrite:
0x7134	0xFA8000  	ULNK
0x7136	0x060000  	RETURN
; end of _FLASH_Write_DoWrite
__Lib_FLASH_p30_FlashKeySequence:
0x7112	0xFA0000  	LNK	#0
;__Lib_FLASH_p30.mpas,52 :: 		
;__Lib_FLASH_p30.mpas,56 :: 		
0x7114	0xFC0005  	DISI	#5
;__Lib_FLASH_p30.mpas,57 :: 		
0x7116	0x200559  	MOV	#85, W9
;__Lib_FLASH_p30.mpas,58 :: 		
0x7118	0x883B39  	MOV	W9, NVMKEY
;__Lib_FLASH_p30.mpas,59 :: 		
0x711A	0x200AA9  	MOV	#170, W9
;__Lib_FLASH_p30.mpas,60 :: 		
0x711C	0x883B39  	MOV	W9, NVMKEY
;__Lib_FLASH_p30.mpas,61 :: 		
0x711E	0xA8E761  	BSET	NVMCON, #15
;__Lib_FLASH_p30.mpas,62 :: 		
0x7120	0x000000  	NOP
;__Lib_FLASH_p30.mpas,63 :: 		
0x7122	0x000000  	NOP
;__Lib_FLASH_p30.mpas,65 :: 		
L_end_FlashKeySequence:
0x7124	0xFA8000  	ULNK
0x7126	0x060000  	RETURN
; end of __Lib_FLASH_p30_FlashKeySequence
_FLASH_Erase32:
0x7378	0xFA0000  	LNK	#0
;__Lib_FLASH_p30.mpas,237 :: 		
;__Lib_FLASH_p30.mpas,239 :: 		
0x737A	0x883B1A  	MOV	W10, NVMADR
;__Lib_FLASH_p30.mpas,240 :: 		
0x737C	0x88019B  	MOV	W11, TBLPAG
;__Lib_FLASH_p30.mpas,242 :: 		
0x737E	0x240410  	MOV	#16449, W0
0x7380	0xB7A760  	MOV	WREG, NVMCON
;__Lib_FLASH_p30.mpas,244 :: 		
0x7382	0x07FEC7  	RCALL	__Lib_FLASH_p30_FlashKeySequence
;__Lib_FLASH_p30.mpas,245 :: 		
L_end_FLASH_Erase32:
0x7384	0xFA8000  	ULNK
0x7386	0x060000  	RETURN
; end of _FLASH_Erase32
_Bootloader_Mcu_WriteFlash:
;bootloader_mcu.mpas,169 :: 		begin
;bootloader_mcu.mpas,171 :: 		i := 0;
; i start address is: 6 (W3)
0x73BC	0xEF2006  	CLR	W3
0x73BE	0xEF2008  	CLR	W4
; i end address is: 6 (W3)
;bootloader_mcu.mpas,172 :: 		while i < ByteCount do                                                      // PIC33 192 Bytes per Instruction
L__Bootloader_Mcu_WriteFlash6:
; i start address is: 6 (W3)
0x73C0	0xE1180B  	CP	W3, W11
0x73C2	0xE1A00C  	CPB	W4, W12
0x73C4	0x310011  	BRA GEU	L__Bootloader_Mcu_WriteFlash7
L__Bootloader_Mcu_WriteFlash15:
;bootloader_mcu.mpas,198 :: 		FLASH_Write_Compact(Address, DataPtr, USER_BOOTLOADER_WRITE_BLOCK);
0x73C6	0xBE9F8A  	PUSH.D	W10
0x73C8	0xBE9F8C  	PUSH.D	W12
0x73CA	0x78060D  	MOV	W13, W12
0x73CC	0x2000CD  	MOV	#12, W13
0x73CE	0xBE051A  	MOV.D	[W10], W10
0x73D0	0x07FF81  	RCALL	_FLASH_Write_Compact
0x73D2	0xBE064F  	POP.D	W12
0x73D4	0xBE054F  	POP.D	W10
;bootloader_mcu.mpas,199 :: 		Address := Address + (USER_BOOTLOADER_WRITE_BLOCK div 3 * 2);
0x73D6	0xBE001A  	MOV.D	[W10], W0
0x73D8	0x400068  	ADD	W0, #8, W0
0x73DA	0x4880E0  	ADDC	W1, #0, W1
0x73DC	0xBE8D00  	MOV.D	W0, [W10]
;bootloader_mcu.mpas,200 :: 		DataPtr := DataPtr + USER_BOOTLOADER_WRITE_BLOCK;
0x73DE	0x46806C  	ADD	W13, #12, W0
0x73E0	0x780680  	MOV	W0, W13
;bootloader_mcu.mpas,201 :: 		i := i + USER_BOOTLOADER_WRITE_BLOCK
0x73E2	0x4181EC  	ADD	W3, #12, W3
0x73E4	0x4A0260  	ADDC	W4, #0, W4
;bootloader_mcu.mpas,215 :: 		end;
; i end address is: 6 (W3)
0x73E6	0x37FFEC  	BRA	L__Bootloader_Mcu_WriteFlash6
L__Bootloader_Mcu_WriteFlash7:
;bootloader_mcu.mpas,217 :: 		end;
L_end_Bootloader_Mcu_WriteFlash:
0x73E8	0x060000  	RETURN
; end of _Bootloader_Mcu_WriteFlash
_Bootloader_Driver_Finalization:
;bootloader_driver.mpas,52 :: 		begin
;bootloader_driver.mpas,68 :: 		end;
L_end_Bootloader_Driver_Finalization:
0x73EA	0x060000  	RETURN
; end of _Bootloader_Driver_Finalization
_Bootloader_StartProgram_Vector:
;bootloader_mcu.mpas,103 :: 		begin
;bootloader_mcu.mpas,105 :: 		asm nop end;
0x70FC	0x000000  	NOP
;bootloader_mcu.mpas,109 :: 		end;
L_end_Bootloader_StartProgram_Vector:
0x70FE	0x060000  	RETURN
; end of _Bootloader_StartProgram_Vector
;bootloader_user.mpas,65 :: _USER_BOOTLOADER_APP_NAME [19]
0x7732	0x6153 ;_USER_BOOTLOADER_APP_NAME+0
0x7734	0x706D ;_USER_BOOTLOADER_APP_NAME+2
0x7736	0x656C ;_USER_BOOTLOADER_APP_NAME+4
0x7738	0x4120 ;_USER_BOOTLOADER_APP_NAME+6
0x773A	0x7070 ;_USER_BOOTLOADER_APP_NAME+8
0x773C	0x696C ;_USER_BOOTLOADER_APP_NAME+10
0x773E	0x6163 ;_USER_BOOTLOADER_APP_NAME+12
0x7740	0x6974 ;_USER_BOOTLOADER_APP_NAME+14
0x7742	0x6E6F ;_USER_BOOTLOADER_APP_NAME+16
0x7744	0x00 ;_USER_BOOTLOADER_APP_NAME+18
; end of _USER_BOOTLOADER_APP_NAME
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x70FC       [4]    _Bootloader_StartProgram_Vector
0x7100      [18]    _main
0x7112      [22]    __Lib_FLASH_p30_FlashKeySequence
0x7128      [16]    _FLASH_Write_DoWrite
0x7138      [42]    _FLASH_Write_Loadlatch4_Compact
0x7162      [88]    __Modulus_32x32
0x71BA      [82]    __Divide_32x32
0x720C      [14]    _UART1_Data_Ready
0x721A      [10]    _UART1_Read
0x7224      [22]    _UART1_Write
0x723A      [16]    _FLASH_Write_Init
0x724A       [6]    _Get_Fosc_Per_Cyc
0x7250       [8]    _Get_Fosc_kHz
0x7258      [18]    __Multiply_32x32
0x726A      [14]    _Delay_10ms
0x7278      [16]    ___CS2S
0x7288      [26]    _Bootloader_Driver_ReadByte
0x72A2      [50]    _Address2DWord_LittleEndian
0x72D4      [30]    _FLASH_Write_Compact
0x72F2       [6]    _Bootloader_Driver_SendByte
0x72F8     [128]    _UART1_Init
0x7378      [16]    _FLASH_Erase32
0x7388      [50]    _Bootloader_Mcu_EraseFlash
0x73BA       [2]    _User_Finalize
0x73BC      [46]    _Bootloader_Mcu_WriteFlash
0x73EA       [2]    _Bootloader_Driver_Finalization
0x73EC       [2]    _Bootloader_Mcu_Initialization
0x73EE       [6]    _User_Init
0x73F4     [104]    bootloader_core_Initialize
0x745C      [16]    _Bootloader_Driver_Initialization
0x746C       [4]    bootloader_core_SendByte
0x7470      [18]    bootloader_core_SendWord
0x7482      [44]    bootloader_core_SendDWord
0x74AE      [80]    bootloader_core_WaitForBootLinkDetected
0x74FE     [200]    bootloader_core_ReadInMessage
0x75C6     [364]    _bootloader_main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0210       [2]    U1TXREG
0x0800       [2]    _UART_Wr_Ptr
0x020E       [2]    U1STA
0x0762       [2]    NVMADR
0x0766       [2]    NVMKEY
0x0802       [2]    _UART_Rd_Ptr
0x0214       [2]    U1BRG
0x0212       [2]    U1RXREG
0x020C       [2]    U1MODE
0x0804       [2]    _UART_Rdy_Ptr
0x0806       [2]    _UART_TX_Idle_Ptr
0x0808       [8]    _CurrentAddresses
0x0810       [2]    bootloader_core_i
0x0812       [2]    _McuInfoLoaded
0x0814      [15]    _RawBuffer
0x0824      [62]    _BootInfo
0x0862       [4]    bootloader_core_Count
0x0866       [2]    __Lib_FLASH_p30_FlashWrData
0x0760       [2]    NVMCON
0x0032       [2]    TBLPAG
0x02A8       [2]    ADPCFG
0x0868       [4]    __Lib_FLASH_p30_FlashWrAddress
0x0032       [2]    TBLPAG
0x020C       [2]    U1MODE
0x020E       [2]    U1STA
0x0210       [2]    U1TXREG
0x0212       [2]    U1RXREG
0x0214       [2]    U1BRG
0x02A8       [2]    ADPCFG
0x0760       [2]    NVMCON
0x0762       [2]    NVMADR
0x0766       [2]    NVMKEY
0x0014       [2]    FARG_UART1_Write_data_
0x0014       [4]    FARG_FLASH_Write_Init_flash_address
0x0018       [2]    FARG_FLASH_Write_Init_data_address
0x0014       [2]    FARG_Bootloader_Driver_ReadByte_ReceivedByte
0x0014       [2]    FARG_Address2DWord_LittleEndian_addr_
0x0014       [4]    FARG_FLASH_Write_Compact_flash_address
0x0018       [2]    FARG_FLASH_Write_Compact_data_address
0x001A       [2]    FARG_FLASH_Write_Compact_bytes
0x0014       [1]    FARG_Bootloader_Driver_SendByte_AByte
0x0014       [4]    FARG_UART1_Init_baud_rate
0x0014       [4]    FARG_FLASH_Erase32_flash_address
0x0014       [2]    FARG_Bootloader_Mcu_EraseFlash_Address
0x0014       [2]    FARG_Bootloader_Mcu_WriteFlash_Address
0x0016       [4]    FARG_Bootloader_Mcu_WriteFlash_ByteCount
0x001A       [2]    FARG_Bootloader_Mcu_WriteFlash_DataPtr
0x0014       [1]    FARG_SendByte_AByte
0x0014       [2]    FARG_SendWord_AWord
0x0014       [2]    FARG_SendDWord_ADWord
0x0014       [2]    FARG_ReadInMessage_Buffer
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x7732      [19]    _USER_BOOTLOADER_APP_NAME
